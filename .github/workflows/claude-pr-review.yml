name: Claude PR Review

permissions:
  contents: read
  pull-requests: write
  issues: write
  id-token: write

on:
  pull_request:
    types: [labeled]

jobs:
  wait-for-ci:
    runs-on: ubuntu-latest
    if: github.event.label.name == 'claude-review'
    outputs:
      should-proceed: ${{ steps.check-status.outputs.proceed }}
    steps:
      - name: Wait for other CI checks
        uses: lewagon/wait-on-check-action@v1.3.1
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          check-regexp: '^(eslint|prettier|test)'
          wait-interval: 30
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Check if we should proceed
        id: check-status
        run: |
          # Get all check runs for this commit
          CHECK_RUNS=$(gh api repos/${{ github.repository }}/commits/${{ github.event.pull_request.head.sha }}/check-runs --jq '.check_runs[] | select(.name | test("eslint|prettier|test")) | {name, conclusion}')
          
          # Check if any required checks failed
          if echo "$CHECK_RUNS" | grep -q '"conclusion": "failure"'; then
            echo "Some CI checks failed - skipping Claude review"
            echo "proceed=false" >> $GITHUB_OUTPUT
          else
            echo "All CI checks passed - proceeding with Claude review"
            echo "proceed=true" >> $GITHUB_OUTPUT
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  claude-review:
    needs: wait-for-ci
    if: needs.wait-for-ci.outputs.should-proceed == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies for analysis tools
        run: |
          npm install -g typescript @vue/compiler-sfc

      - name: Run Claude PR Review
        uses: anthropics/claude-code-base-action@beta
        with:
          prompt: |
            You are in the root directory of the ComfyUI_frontend repository.
            Read .claude/commands/comprehensive-pr-review.md and follow ALL instructions within it:
            1. Execute the bash code blocks in Phases 0-2 to set up the environment
            2. After Phase 2, you'll have:
               - changed_files.txt with list of modified files
               - pr_info.json with PR metadata
               - The PR branch checked out locally
            3. Perform the deep analysis described in Phases 3-6 by:
               - Reading each file listed in changed_files.txt using the Read tool
               - Analyzing them according to all criteria in Phases 3-6
               - For each issue found, call: post_review_comment "filepath" line_number "severity" "category" "issue" "context" "suggestion"
            4. Finally execute Phase 7 to post the summary
            The PR_NUMBER is ${{ github.event.pull_request.number }} and already set as an environment variable.
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
          max_turns: 30
          timeout_minutes: 30
          allowed_tools: "Bash(git:*),Bash(gh:*),Bash(jq:*),Bash(curl:*),Bash(echo:*),Bash(mkdir:*),Bash(mv:*),Bash(cp:*),Bash(find:*),Bash(cat:*),Bash(wc:*),Bash(awk:*),Bash(date:*),Bash(export:*),Read,Write,Edit,Glob,Grep,WebFetch"
        env:
          PR_NUMBER: ${{ github.event.pull_request.number }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COMMIT_SHA: ${{ github.event.pull_request.head.sha }}
          BASE_SHA: ${{ github.event.pull_request.base.sha }}
          REPOSITORY: ${{ github.repository }}