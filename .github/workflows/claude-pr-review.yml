name: Claude PR Review

permissions:
  contents: read
  pull-requests: write
  issues: write
  id-token: write

on:
  pull_request:
    types: [labeled]

jobs:
  wait-for-ci:
    runs-on: ubuntu-latest
    if: github.event.label.name == 'claude-review'
    outputs:
      should-proceed: ${{ steps.check-status.outputs.proceed }}
    steps:
      - name: Wait for other CI checks
        uses: lewagon/wait-on-check-action@v1.3.1
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          check-regexp: '^(eslint|prettier|test)'
          wait-interval: 30
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Check if we should proceed
        id: check-status
        run: |
          # Get all check runs for this commit
          CHECK_RUNS=$(gh api repos/${{ github.repository }}/commits/${{ github.event.pull_request.head.sha }}/check-runs --jq '.check_runs[] | select(.name | test("eslint|prettier|test")) | {name, conclusion}')
          
          # Check if any required checks failed
          if echo "$CHECK_RUNS" | grep -q '"conclusion": "failure"'; then
            echo "Some CI checks failed - skipping Claude review"
            echo "proceed=false" >> $GITHUB_OUTPUT
          else
            echo "All CI checks passed - proceeding with Claude review"
            echo "proceed=true" >> $GITHUB_OUTPUT
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  claude-review:
    needs: wait-for-ci
    if: needs.wait-for-ci.outputs.should-proceed == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies for analysis tools
        run: |
          npm install -g typescript @vue/compiler-sfc

      - name: Run Claude PR Review
        uses: anthropics/claude-code-base-action@beta
        with:
          prompt: |
            IMPORTANT: You have full permission to use the Bash tool. When you see bash code blocks in the review instructions, you MUST execute them using the Bash tool.
            
            You are in the root directory of the ComfyUI_frontend repository.
            Read .claude/commands/comprehensive-pr-review.md and follow ALL instructions within it.
            
            CRITICAL EXECUTION FLOW:
            1. When you see bash code blocks under Phase 0, 1, and 2 - COPY the bash code and execute it using the Bash tool
            2. After running setup scripts, you'll have:
               - changed_files.txt with list of modified files
               - pr_info.json with PR metadata
               - The PR branch checked out locally
            3. For Phase 3-6 analysis:
               - Read each file listed in changed_files.txt using the Read tool
               - Analyze them according to all criteria in Phases 3-6
               - When you find issues, use the post_review_comment bash function you defined in Phase 0
            4. Execute Phase 7 bash code to post the summary
            
            The PR_NUMBER is ${{ github.event.pull_request.number }} and already set as an environment variable.
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
          max_turns: 30
          timeout_minutes: 30
          allowed_tools: "Bash(*),Read,Write,Edit,Glob,Grep,WebFetch"
          auto_approve_bash: true
        env:
          PR_NUMBER: ${{ github.event.pull_request.number }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COMMIT_SHA: ${{ github.event.pull_request.head.sha }}
          BASE_SHA: ${{ github.event.pull_request.base.sha }}
          REPOSITORY: ${{ github.repository }}