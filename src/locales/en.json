{
  "g": {
    "currentUser": "Current user",
    "empty": "Empty",
    "noWorkflowsFound": "No workflows found.",
    "comingSoon": "Coming Soon",
    "firstTimeUIMessage": "This is the first time you use the new UI. Choose \"Menu > Use New Menu > Disabled\" to restore the old UI.",
    "download": "Download",
    "loadAllFolders": "Load All Folders",
    "refresh": "Refresh",
    "terminal": "Terminal",
    "logs": "Logs",
    "videoFailedToLoad": "Video failed to load",
    "extensionName": "Extension Name",
    "reloadToApplyChanges": "Reload to apply changes",
    "insert": "Insert",
    "systemInfo": "System Info",
    "devices": "Devices",
    "about": "About",
    "add": "Add",
    "confirm": "Confirm",
    "reset": "Reset",
    "resetKeybindingsTooltip": "Reset keybindings to default",
    "customizeFolder": "Customize Folder",
    "icon": "Icon",
    "color": "Color",
    "error": "Error",
    "loading": "Loading",
    "findIssues": "Find Issues",
    "reportIssue": "Send Report",
    "reportIssueTooltip": "Submit the error report to Comfy Org",
    "reportSent": "Report Submitted",
    "copyToClipboard": "Copy to Clipboard",
    "openNewIssue": "Open New Issue",
    "showReport": "Show Report",
    "imageFailedToLoad": "Image failed to load",
    "reconnecting": "Reconnecting",
    "reconnected": "Reconnected",
    "delete": "Delete",
    "rename": "Rename",
    "save": "Save",
    "no": "No",
    "cancel": "Cancel",
    "close": "Close",
    "overwrite": "Overwrite",
    "customize": "Customize",
    "experimental": "BETA",
    "deprecated": "DEPR",
    "loadWorkflow": "Load Workflow",
    "goToNode": "Go to Node",
    "settings": "Settings",
    "searchWorkflows": "Search Workflows",
    "searchSettings": "Search Settings",
    "searchNodes": "Search Nodes",
    "searchModels": "Search Models",
    "searchKeybindings": "Search Keybindings",
    "searchExtensions": "Search Extensions",
    "noResultsFound": "No Results Found",
    "searchFailedMessage": "We couldn't find any settings matching your search. Try adjusting your search terms.",
    "noTasksFound": "No Tasks Found",
    "noTasksFoundMessage": "There are no tasks in the queue.",
    "newFolder": "New Folder"
  },
  "color": {
    "default": "Default",
    "blue": "Blue",
    "green": "Green",
    "red": "Red",
    "pink": "Pink",
    "yellow": "Yellow",
    "custom": "Custom"
  },
  "icon": {
    "bookmark": "Bookmark",
    "folder": "Folder",
    "star": "Star",
    "heart": "Heart",
    "file": "File",
    "inbox": "Inbox",
    "box": "Box",
    "briefcase": "Briefcase"
  },
  "welcome": {
    "title": "Welcome to ComfyUI",
    "getStarted": "Get Started"
  },
  "userSelect": {
    "newUser": "New user",
    "enterUsername": "Enter a username",
    "existingUser": "Existing user",
    "selectUser": "Select a user",
    "next": "Next"
  },
  "notSupported": {
    "title": "Your device is not supported",
    "message": "Only following devices are supported:",
    "learnMore": "Learn More",
    "reportIssue": "Report Issue",
    "supportedDevices": {
      "macos": "MacOS (M1 or later)",
      "windows": "Windows (Nvidia GPU with CUDA support)"
    },
    "continue": "Continue",
    "continueTooltip": "I am sure my device is supported"
  },
  "downloadGit": {
    "title": "Download git",
    "message": "Unable to locate git.  A working copy of git is required for normal operation.",
    "instructions": "Please download and install the latest version for your operating system.  The Download git button below opens the git-scm.com downloads page.",
    "warning": "If you are sure you do not need git installed, or there has been a mistake, you may click Skip to byapss this check.  Attempting to run ComfyUI without a working copy of git is not currently supported.",
    "gitWebsite": "Download git",
    "skip": "Skip"
  },
  "install": {
    "installLocation": "Install Location",
    "migration": "Migration",
    "desktopSettings": "Desktop Settings",
    "chooseInstallationLocation": "Choose Installation Location",
    "systemLocations": "System Locations",
    "failedToSelectDirectory": "Failed to select directory",
    "pathValidationFailed": "Failed to validate path",
    "installLocationDescription": "Select the directory for ComfyUI's user data. A python environment will be installed to the selected location. Please make sure the selected disk has enough space (~15GB) left.",
    "installLocationTooltip": "ComfyUI's user data directory. Stores:\n- Python Environment\n- Models\n- Custom nodes\n",
    "appDataLocationTooltip": "ComfyUI's app data directory. Stores:\n- Logs\n- Server configs",
    "appPathLocationTooltip": "ComfyUI's app asset directory. Stores the ComfyUI code and assets",
    "migrateFromExistingInstallation": "Migrate from Existing Installation",
    "migrationSourcePathDescription": "If you have an existing ComfyUI installation, we can copy/link your existing user files and models to the new installation.",
    "selectItemsToMigrate": "Select Items to Migrate",
    "migrationOptional": "Migration is optional. If you don't have an existing installation, you can skip this step.",
    "desktopAppSettings": "Desktop App Settings",
    "desktopAppSettingsDescription": "Configure how ComfyUI behaves on your desktop. You can change these settings later.",
    "settings": {
      "autoUpdate": "Automatic Updates",
      "allowMetrics": "Crash Reports",
      "autoUpdateDescription": "Automatically download and install updates when they become available. You'll always be notified before updates are installed.",
      "allowMetricsDescription": "Help improve ComfyUI by sending anonymous crash reports. No personal information or workflow content will be collected. This can be disabled at any time in the settings menu.",
      "learnMoreAboutData": "Learn more about data collection",
      "dataCollectionDialog": {
        "title": "About Data Collection",
        "whatWeCollect": "What we collect:",
        "whatWeDoNotCollect": "What we don't collect:",
        "errorReports": "Error message and stack trace",
        "systemInfo": "Hardware, OS type, and app version",
        "personalInformation": "Personal information",
        "workflowContent": "Workflow content",
        "fileSystemInformation": "File system information",
        "workflowContents": "Workflow contents",
        "customNodeConfigurations": "Custom node configurations"
      }
    },
    "customNodes": "Custom Nodes",
    "customNodesDescription": "Reference custom node files from existing ComfyUI installations and install their dependencies."
  },
  "serverStart": {
    "reinstall": "Reinstall",
    "reportIssue": "Report Issue",
    "openLogs": "Open Logs",
    "process": {
      "initial-state": "Loading...",
      "python-setup": "Setting up Python Environment...",
      "starting-server": "Starting ComfyUI server...",
      "ready": "Finishing...",
      "error": "Unable to start ComfyUI Desktop"
    }
  },
  "serverConfig": {
    "modifiedConfigs": "You have modified the following server configurations. Restart to apply changes.",
    "revertChanges": "Revert Changes",
    "restart": "Restart"
  },
  "settingsDialog": {
    "Comfy-Desktop_AutoUpdate": {
      "name": "Automatically check for updates"
    },
    "Comfy-Desktop_SendStatistics": {
      "name": "Send anonymous crash reports"
    },
    "Comfy_ColorPalette": {
      "name": "Color Palette"
    },
    "Comfy_ConfirmClear": {
      "name": "Require confirmation when clearing workflow"
    },
    "Comfy_DevMode": {
      "name": "Enable dev mode options (API save, etc.)"
    },
    "Comfy_DisableFloatRounding": {
      "name": "Disable default float widget rounding.",
      "tooltip": "(requires page reload) Cannot disable round when round is set by the node in the backend."
    },
    "Comfy_DisableSliders": {
      "name": "Disable node widget sliders"
    },
    "Comfy_DOMClippingEnabled": {
      "name": "Enable DOM element clipping (enabling may reduce performance)"
    },
    "Comfy_EditAttention_Delta": {
      "name": "Ctrl+up/down precision"
    },
    "Comfy_EnableTooltips": {
      "name": "Enable Tooltips"
    },
    "Comfy_EnableWorkflowViewRestore": {
      "name": "Save and restore canvas position and zoom level in workflows"
    },
    "Comfy_Extension_Disabled": {
      "name": "Disabled extension names"
    },
    "Comfy_FloatRoundingPrecision": {
      "name": "Float widget rounding decimal places [0 = auto].",
      "tooltip": "(requires page reload)"
    },
    "Comfy_Graph_CanvasInfo": {
      "name": "Show canvas info on bottom left corner (fps, etc.)"
    },
    "Comfy_Graph_CanvasMenu": {
      "name": "Show graph canvas menu"
    },
    "Comfy_Graph_CtrlShiftZoom": {
      "name": "Enable fast-zoom shortcut (Ctrl + Shift + Drag)"
    },
    "Comfy_Graph_LinkMarkers": {
      "name": "Link midpoint markers"
    },
    "Comfy_Graph_ZoomSpeed": {
      "name": "Canvas zoom speed"
    },
    "Comfy_Group_DoubleClickTitleToEdit": {
      "name": "Double click group title to edit"
    },
    "Comfy_GroupSelectedNodes_Padding": {
      "name": "Group selected nodes padding"
    },
    "Comfy_InvertMenuScrolling": {
      "name": "Invert Context Menu Scrolling"
    },
    "Comfy_Keybinding_NewBindings": {
      "name": "Keybindings set by the user"
    },
    "Comfy_Keybinding_UnsetBindings": {
      "name": "Keybindings unset by the user"
    },
    "Comfy_LinkRelease_Action": {
      "name": "Action on link release (No modifier)"
    },
    "Comfy_LinkRelease_ActionShift": {
      "name": "Action on link release (Shift)"
    },
    "Comfy_LinkRenderMode": {
      "name": "Link Render Mode"
    },
    "Comfy_Locale": {
      "name": "Language"
    },
    "Comfy_MaskEditor_BrushAdjustmentSpeed": {
      "name": "Brush adjustment speed multiplier",
      "tooltip": "Controls how quickly the brush size and hardness change when adjusting. Higher values mean faster changes."
    },
    "Comfy_MaskEditor_UseDominantAxis": {
      "name": "Lock brush adjustment to dominant axis",
      "tooltip": "When enabled, brush adjustments will only affect size OR hardness based on which direction you move more"
    },
    "Comfy_MaskEditor_UseNewEditor": {
      "name": "Use new mask editor",
      "tooltip": "Switch to the new mask editor interface"
    },
    "Comfy_MenuPosition": {
      "name": "Save legacy menu's position"
    },
    "Comfy_ModelLibrary_AutoLoadAll": {
      "name": "Automatically load all model folders",
      "tooltip": "If true, all folders will load as soon as you open the model library (this may cause delays while it loads). If false, root level model folders will only load once you click on them."
    },
    "Comfy_ModelLibrary_NameFormat": {
      "name": "What name to display in the model library tree view",
      "tooltip": "Select \"filename\" to render a simplified view of the raw filename (without directory or \".safetensors\" extension) in the model list. Select \"title\" to display the configurable model metadata title."
    },
    "Comfy_Node_AutoSnapLinkToSlot": {
      "name": "Auto snap link to node slot",
      "tooltip": "When dragging a link over a node, the link automatically snap to a viable input slot on the node"
    },
    "Comfy_Node_BypassAllLinksOnDelete": {
      "name": "Keep all links when deleting nodes",
      "tooltip": "When deleting a node, attempt to reconnect all of its input and output links (bypassing the deleted node)"
    },
    "Comfy_Node_DoubleClickTitleToEdit": {
      "name": "Double click node title to edit"
    },
    "Comfy_Node_MiddleClickRerouteNode": {
      "name": "Middle-click creates a new Reroute node"
    },
    "Comfy_Node_Opacity": {
      "name": "Node opacity"
    },
    "Comfy_Node_ShowDeprecated": {
      "name": "Show deprecated nodes in search",
      "tooltip": "Deprecated nodes are hidden by default in the UI, but remain functional in existing workflows that use them."
    },
    "Comfy_Node_ShowExperimental": {
      "name": "Show experimental nodes in search",
      "tooltip": "Experimental nodes are marked as such in the UI and may be subject to significant changes or removal in future versions. Use with caution in production workflows"
    },
    "Comfy_Node_SnapHighlightsNode": {
      "name": "Snap highlights node",
      "tooltip": "When dragging a link over a node with viable input slot, highlight the node"
    },
    "Comfy_NodeBadge_NodeIdBadgeMode": {
      "name": "Node ID badge mode"
    },
    "Comfy_NodeBadge_NodeLifeCycleBadgeMode": {
      "name": "Node life cycle badge mode"
    },
    "Comfy_NodeBadge_NodeSourceBadgeMode": {
      "name": "Node source badge mode"
    },
    "Comfy_NodeInputConversionSubmenus": {
      "name": "In the node context menu, place the entries that convert between input/widget in sub-menus."
    },
    "Comfy_NodeLibrary_Bookmarks": {
      "name": "Node library bookmarks with display name (deprecated)"
    },
    "Comfy_NodeLibrary_Bookmarks_V2": {
      "name": "Node library bookmarks v2 with unique name"
    },
    "Comfy_NodeLibrary_BookmarksCustomization": {
      "name": "Node library bookmarks customization"
    },
    "Comfy_NodeSearchBoxImpl": {
      "name": "Node search box implementation"
    },
    "Comfy_NodeSearchBoxImpl_NodePreview": {
      "name": "Node preview",
      "tooltip": "Only applies to the default implementation"
    },
    "Comfy_NodeSearchBoxImpl_ShowCategory": {
      "name": "Show node category in search results",
      "tooltip": "Only applies to the default implementation"
    },
    "Comfy_NodeSearchBoxImpl_ShowIdName": {
      "name": "Show node id name in search results",
      "tooltip": "Only applies to the default implementation"
    },
    "Comfy_NodeSearchBoxImpl_ShowNodeFrequency": {
      "name": "Show node frequency in search results",
      "tooltip": "Only applies to the default implementation"
    },
    "Comfy_NodeSuggestions_number": {
      "name": "Number of nodes suggestions",
      "tooltip": "Only for litegraph searchbox/context menu"
    },
    "Comfy_Pointer_ClickBufferTime": {
      "name": "Pointer click drift delay",
      "tooltip": "After pressing a pointer button down, this is the maximum time (in milliseconds) that pointer movement can be ignored for.\n\nHelps prevent objects from being unintentionally nudged if the pointer is moved whilst clicking."
    },
    "Comfy_Pointer_ClickDrift": {
      "name": "Pointer click drift (maximum distance)",
      "tooltip": "If the pointer moves more than this distance while holding a button down, it is considered dragging (rather than clicking).\n\nHelps prevent objects from being unintentionally nudged if the pointer is moved whilst clicking."
    },
    "Comfy_Pointer_DoubleClickTime": {
      "name": "Double click interval (maximum)",
      "tooltip": "The maximum time in milliseconds between the two clicks of a double-click.  Increasing this value may assist if double-clicks are sometimes not registered."
    },
    "Comfy_PreviewFormat": {
      "name": "Preview image format",
      "tooltip": "When displaying a preview in the image widget, convert it to a lightweight image, e.g. webp, jpeg, webp;50, etc."
    },
    "Comfy_PromptFilename": {
      "name": "Prompt for filename when saving workflow"
    },
    "Comfy_Queue_ImageFit": {
      "name": "Queue image fit"
    },
    "Comfy_Queue_MaxHistoryItems": {
      "name": "Queue history size",
      "tooltip": "The maximum number of tasks that show in the queue history."
    },
    "Comfy_QueueButton_BatchCountLimit": {
      "name": "Batch count limit",
      "tooltip": "The maximum number of tasks added to the queue at one button click"
    },
    "Comfy_RerouteBeta": {
      "name": "Opt-in to the reroute beta test",
      "tooltip": "Enables the new native reroutes.\n\nReroutes can be added by holding alt and dragging from a link line, or on the link menu.\n\nDisabling this option is non-destructive - reroutes are hidden."
    },
    "Comfy_Server_LaunchArgs": {
      "name": "Server launch arguments",
      "tooltip": "These are the actual arguments that are passed to the server when it is launched."
    },
    "Comfy_Server_ServerConfigValues": {
      "name": "Server config values for frontend display",
      "tooltip": "Server config values used for frontend display only"
    },
    "Comfy_Settings_ExtensionPanel": {
      "name": "Show extension panel in settings dialog"
    },
    "Comfy_Sidebar_Location": {
      "name": "Sidebar location"
    },
    "Comfy_Sidebar_Size": {
      "name": "Sidebar size"
    },
    "Comfy_SnapToGrid_GridSize": {
      "name": "Snap to grid size",
      "tooltip": "When dragging and resizing nodes while holding shift they will be aligned to the grid, this controls the size of that grid."
    },
    "Comfy_TextareaWidget_FontSize": {
      "name": "Textarea widget font size"
    },
    "Comfy_TextareaWidget_Spellcheck": {
      "name": "Textarea widget spellcheck"
    },
    "Comfy_TreeExplorer_ItemPadding": {
      "name": "Tree explorer item padding"
    },
    "Comfy_UseNewMenu": {
      "name": "Use new menu"
    },
    "Comfy_Validation_NodeDefs": {
      "name": "Validate node definitions (slow)",
      "tooltip": "Recommended for node developers. This will validate all node definitions on startup."
    },
    "Comfy_Validation_Workflows": {
      "name": "Validate workflows"
    },
    "Comfy_WidgetControlMode": {
      "name": "Widget control mode",
      "tooltip": "Controls when widget values are updated (randomize/increment/decrement), either before the prompt is queued or after."
    },
    "Comfy_Window_UnloadConfirmation": {
      "name": "Show confirmation when closing window"
    },
    "Comfy_Workflow_ConfirmDelete": {
      "name": "Show confirmation when deleting workflows"
    },
    "Comfy_Workflow_ShowMissingModelsWarning": {
      "name": "Show missing models warning"
    },
    "Comfy_Workflow_ShowMissingNodesWarning": {
      "name": "Show missing nodes warning"
    },
    "Comfy_Workflow_SortNodeIdOnSave": {
      "name": "Sort node IDs when saving workflow"
    },
    "Comfy_Workflow_WorkflowTabsPosition": {
      "name": "Opened workflows position"
    },
    "LiteGraph_Canvas_MaximumFps": {
      "name": "Maxium FPS",
      "tooltip": "The maximum frames per second that the canvas is allowed to render. Caps GPU usage at the cost of smoothness. If 0, the screen refresh rate is used. Default: 0"
    },
    "pysssss_SnapToGrid": {
      "name": "Always snap to grid"
    }
  },
  "sideToolbar": {
    "themeToggle": "Toggle Theme",
    "logout": "Logout",
    "queue": "Queue",
    "nodeLibrary": "Node Library",
    "workflows": "Workflows",
    "browseTemplates": "Browse example templates",
    "openWorkflow": "Open workflow in local file system",
    "newBlankWorkflow": "Create a new blank workflow",
    "nodeLibraryTab": {
      "sortOrder": "Sort Order"
    },
    "modelLibrary": "Model Library",
    "downloads": "Downloads",
    "queueTab": {
      "showFlatList": "Show Flat List",
      "backToAllTasks": "Back to All Tasks",
      "containImagePreview": "Fill Image Preview",
      "coverImagePreview": "Fit Image Preview",
      "clearPendingTasks": "Clear Pending Tasks",
      "filter": "Filter Outputs",
      "filters": {
        "hideCached": "Hide Cached",
        "hideCanceled": "Hide Canceled"
      }
    },
    "workflowTab": {
      "confirmDeleteTitle": "Delete workflow?",
      "confirmDelete": "Are you sure you want to delete this workflow?",
      "deleted": "Workflow deleted",
      "deleteFailedTitle": "Delete failed",
      "deleteFailed": "Attempt to delete the workflow failed.",
      "dirtyCloseTitle": "Save Changes?",
      "dirtyClose": "The files below have been changed.  Would you like to save them before closing?",
      "confirmOverwriteTitle": "Overwrite existing file?",
      "confirmOverwrite": "The file below already exists. Would you like to overwrite it?",
      "workflowTreeType": {
        "browse": "Browse",
        "bookmarks": "Bookmarks",
        "open": "Open"
      }
    }
  },
  "menu": {
    "hideMenu": "Hide Menu",
    "showMenu": "Show Menu",
    "batchCount": "Batch Count",
    "batchCountTooltip": "The number of times the workflow generation should be queued",
    "autoQueue": "Auto Queue",
    "disabled": "Disabled",
    "disabledTooltip": "The workflow will not be automatically queued",
    "instant": "Instant",
    "instantTooltip": "The workflow will be queued instantly after a generation finishes",
    "onChange": "On Change",
    "onChangeTooltip": "The workflow will be queued once a change is made",
    "queueWorkflow": "Queue workflow (Shift to queue at front)",
    "queueWorkflowFront": "Queue workflow at front",
    "queue": "Queue",
    "execute": "Execute",
    "interrupt": "Cancel current run",
    "refresh": "Refresh node definitions",
    "clipspace": "Open Clipspace",
    "resetView": "Reset canvas view",
    "clear": "Clear workflow",
    "toggleBottomPanel": "Toggle Bottom Panel"
  },
  "tabMenu": {
    "duplicateTab": "Duplicate Tab",
    "closeTab": "Close Tab",
    "closeTabsToLeft": "Close Tabs to Left",
    "closeTabsToRight": "Close Tabs to Right",
    "closeOtherTabs": "Close Other Tabs"
  },
  "templateWorkflows": {
    "title": "Get Started with a Template",
    "template": {
      "default": "Image Generation",
      "image2image": "Image to Image",
      "upscale": "2 Pass Upscale",
      "flux_schnell": "Flux Schnell"
    }
  },
  "graphCanvasMenu": {
    "zoomIn": "Zoom In",
    "zoomOut": "Zoom Out",
    "resetView": "Reset View",
    "fitView": "Fit View",
    "selectMode": "Select Mode",
    "panMode": "Pan Mode",
    "toggleLinkVisibility": "Toggle Link Visibility"
  },
  "groupNode": {
    "create": "Create group node",
    "enterName": "Enter name"
  },
  "nodeTemplates": {
    "saveAsTemplate": "Save as template",
    "enterName": "Enter name"
  },
  "electronFileDownload": {
    "inProgress": "In Progress",
    "pause": "Pause Download",
    "paused": "Paused",
    "resume": "Resume Download",
    "cancel": "Cancel Download",
    "cancelled": "Cancelled"
  },
  "menuLabels": {
    "Workflow": "Workflow",
    "Edit": "Edit",
    "Help": "Help",
    "New": "New",
    "Open": "Open",
    "Load Default Workflow": "Load Default Workflow",
    "Save": "Save",
    "Save As": "Save As",
    "Export": "Export",
    "Export (API)": "Export (API)",
    "Undo": "Undo",
    "Redo": "Redo",
    "Clear Workflow": "Clear Workflow",
    "Reset View": "Reset View",
    "Clipspace": "Clipspace",
    "Refresh Node Definitions": "Refresh Node Definitions",
    "Interrupt": "Interrupt",
    "Clear Pending Tasks": "Clear Pending Tasks",
    "Browse Templates": "Browse Templates",
    "Zoom In": "Zoom In",
    "Zoom Out": "Zoom Out",
    "Fit view to selected nodes": "Fit view to selected nodes",
    "Toggle Lock": "Toggle Lock",
    "Toggle Link Visibility": "Toggle Link Visibility",
    "Queue Prompt": "Queue Prompt",
    "Queue Prompt (Front)": "Queue Prompt (Front)",
    "Settings": "Settings",
    "Group Selected Nodes": "Group Selected Nodes",
    "Next Opened Workflow": "Next Opened Workflow",
    "Previous Opened Workflow": "Previous Opened Workflow",
    "Mute/Unmute Selected Nodes": "Mute/Unmute Selected Nodes",
    "Bypass/Unbypass Selected Nodes": "Bypass/Unbypass Selected Nodes",
    "Pin/Unpin Selected Nodes": "Pin/Unpin Selected Nodes",
    "Pin/Unpin Selected Items": "Pin/Unpin Selected Items",
    "Collapse/Expand Selected Nodes": "Collapse/Expand Selected Nodes",
    "Toggle Theme": "Toggle Theme",
    "Toggle Bottom Panel": "Toggle Bottom Panel",
    "Toggle Focus Mode": "Toggle Focus Mode",
    "Fit Group To Contents": "Fit Group To Contents",
    "ComfyUI Issues": "ComfyUI Issues",
    "ComfyUI Docs": "ComfyUI Docs",
    "Comfy-Org Discord": "Comfy-Org Discord",
    "Toggle Search Box": "Toggle Search Box",
    "Queue": "Queue",
    "Node Library": "Node Library",
    "Model Library": "Model Library",
    "Workflows": "Workflows",
    "Logs": "Logs",
    "Terminal": "Terminal",
    "Convert selected nodes to group node": "Convert selected nodes to group node",
    "Ungroup selected group nodes": "Ungroup selected group nodes",
    "Manage group nodes": "Manage group nodes",
    "Open Logs Folder": "Open Logs Folder",
    "Open Models Folder": "Open Models Folder",
    "Open Outputs Folder": "Open Outputs Folder",
    "Open Inputs Folder": "Open Inputs Folder",
    "Open Custom Nodes Folder": "Open Custom Nodes Folder",
    "Open extra_model_paths_yaml": "Open extra_model_paths.yaml",
    "Open DevTools": "Open DevTools",
    "Feedback": "Feedback",
    "Reinstall": "Reinstall",
    "Restart": "Restart"
  },
  "desktopMenu": {
    "reinstall": "Reinstall",
    "confirmReinstall": "This will clear your extra_models_config.yaml file,\nand begin installation again.\n\nAre you sure?"
  },
  "settingsCategories": {
    "Comfy-Desktop": "Comfy-Desktop",
    "General": "General",
    "Appearance": "Appearance",
    "ColorPalette": "Color Palette",
    "Comfy": "Comfy",
    "Workflow": "Workflow",
    "DevMode": "Dev Mode",
    "LiteGraph": "Lite Graph",
    "Node Widget": "Node Widget",
    "Node": "Node",
    "Extension": "Extension",
    "Canvas": "Canvas",
    "Link": "Link",
    "Group": "Group",
    "Menu": "Menu",
    "Keybinding": "Keybinding",
    "LinkRelease": "Link Release",
    "Graph": "Graph",
    "Locale": "Locale",
    "Mask Editor": "Mask Editor",
    "BrushAdjustment": "Brush Adjustment",
    "NewEditor": "New Editor",
    "ModelLibrary": "Model Library",
    "NodeInputConversionSubmenus": "Node Input Conversion Submenus",
    "NodeLibrary": "Node Library",
    "Node Search Box": "Node Search Box",
    "Pointer": "Pointer",
    "Queue": "Queue",
    "QueueButton": "Queue Button",
    "RerouteBeta": "Reroute Beta",
    "Server": "Server",
    "Settings": "Settings",
    "Sidebar": "Sidebar",
    "Tree Explorer": "Tree Explorer",
    "Validation": "Validation",
    "Window": "Window",
    "Server-Config": "Server-Config",
    "About": "About",
    "EditTokenWeight": "Edit Token Weight"
  },
  "serverConfigItems": {
    "tls-keyfile": {
      "name": "TLS Key File: Path to TLS key file for HTTPS"
    },
    "tls-certfile": {
      "name": "TLS Certificate File: Path to TLS certificate file for HTTPS"
    },
    "enable-cors-header": {
      "name": "Enable CORS header: Use \"*\" for all origins or specify domain"
    },
    "max-upload-size": {
      "name": "Maximum upload size (MB)"
    },
    "cuda-device": {
      "name": "CUDA device index to use"
    },
    "cuda-malloc": {
      "name": "Use CUDA malloc for memory allocation"
    },
    "global-precision": {
      "name": "Global floating point precision",
      "tooltip": "Global floating point precision"
    },
    "unet-precision": {
      "name": "UNET precision",
      "tooltip": "UNET precision"
    },
    "vae-precision": {
      "name": "VAE precision",
      "tooltip": "VAE precision"
    },
    "cpu-vae": {
      "name": "Run VAE on CPU"
    },
    "text-encoder-precision": {
      "name": "Text Encoder precision",
      "tooltip": "Text Encoder precision"
    },
    "force-channels-last": {
      "name": "Force channels-last memory format"
    },
    "directml": {
      "name": "DirectML device index"
    },
    "disable-ipex-optimize": {
      "name": "Disable IPEX optimization"
    },
    "preview-method": {
      "name": "Method used for latent previews"
    },
    "preview-size": {
      "name": "Size of preview images"
    },
    "cache-classic": {
      "name": "Use classic cache system"
    },
    "cache-lru": {
      "name": "Use LRU caching with a maximum of N node results cached.",
      "tooltip": "May use more RAM/VRAM."
    },
    "cross-attention-method": {
      "name": "Cross attention method"
    },
    "disable-xformers": {
      "name": "Disable xFormers optimization"
    },
    "force-upcast-attention": {
      "name": "Force attention upcast"
    },
    "dont-upcast-attention": {
      "name": "Prevent attention upcast"
    },
    "vram-management": {
      "name": "VRAM management mode"
    },
    "reserve-vram": {
      "name": "Reserved VRAM (GB)",
      "tooltip": "Set the amount of vram in GB you want to reserve for use by your OS/other software. By default some amount is reverved depending on your OS."
    },
    "default-hashing-function": {
      "name": "Default hashing function for model files"
    },
    "disable-smart-memory": {
      "name": "Disable smart memory management",
      "tooltip": "Force ComfyUI to aggressively offload to regular ram instead of keeping models in vram when it can."
    },
    "deterministic": {
      "name": "Make pytorch use slower deterministic algorithms when it can.",
      "tooltip": "Note that this might not make images deterministic in all cases."
    },
    "fast": {
      "name": "Enable some untested and potentially quality deteriorating optimizations."
    },
    "dont-print-server": {
      "name": "Don't print server output to console."
    },
    "disable-metadata": {
      "name": "Disable saving prompt metadata in files."
    },
    "disable-all-custom-nodes": {
      "name": "Disable loading all custom nodes."
    },
    "log-level": {
      "name": "Logging verbosity level"
    }
  },
  "serverConfigCategories": {
    "Network": "Network",
    "CUDA": "CUDA",
    "Inference": "Inference",
    "Memory": "Memory",
    "Preview": "Preview",
    "Cache": "Cache",
    "Attention": "Attention",
    "General": "General"
  },
  "nodeDefs": {
    "AddNoise": {
      "display_name": "AddNoise"
    },
    "AlignYourStepsScheduler": {
      "display_name": "AlignYourStepsScheduler"
    },
    "BasicGuider": {
      "display_name": "BasicGuider"
    },
    "BasicScheduler": {
      "display_name": "BasicScheduler"
    },
    "BetaSamplingScheduler": {
      "display_name": "BetaSamplingScheduler"
    },
    "Canny": {
      "display_name": "Canny"
    },
    "CFGGuider": {
      "display_name": "CFGGuider"
    },
    "CheckpointLoader": {
      "display_name": "Load Checkpoint With Config (DEPRECATED)"
    },
    "CheckpointLoaderSimple": {
      "display_name": "Load Checkpoint",
      "description": "Loads a diffusion model checkpoint, diffusion models are used to denoise latents."
    },
    "CheckpointSave": {
      "display_name": "Save Checkpoint"
    },
    "CLIPAttentionMultiply": {
      "display_name": "CLIPAttentionMultiply"
    },
    "CLIPLoader": {
      "display_name": "Load CLIP",
      "description": "[Recipes]\n\nstable_diffusion: clip-l\nstable_cascade: clip-g\nsd3: t5 / clip-g / clip-l\nstable_audio: t5\nmochi: t5"
    },
    "CLIPMergeAdd": {
      "display_name": "CLIPMergeAdd"
    },
    "CLIPMergeSimple": {
      "display_name": "CLIPMergeSimple"
    },
    "CLIPMergeSubtract": {
      "display_name": "CLIPMergeSubtract"
    },
    "CLIPSave": {
      "display_name": "CLIPSave"
    },
    "CLIPSetLastLayer": {
      "display_name": "CLIP Set Last Layer"
    },
    "CLIPTextEncode": {
      "display_name": "CLIP Text Encode (Prompt)",
      "description": "Encodes a text prompt using a CLIP model into an embedding that can be used to guide the diffusion model towards generating specific images."
    },
    "CLIPTextEncodeControlnet": {
      "display_name": "CLIPTextEncodeControlnet"
    },
    "CLIPTextEncodeFlux": {
      "display_name": "CLIPTextEncodeFlux"
    },
    "CLIPTextEncodeHunyuanDiT": {
      "display_name": "CLIPTextEncodeHunyuanDiT"
    },
    "CLIPTextEncodeSD3": {
      "display_name": "CLIPTextEncodeSD3"
    },
    "CLIPTextEncodeSDXL": {
      "display_name": "CLIPTextEncodeSDXL"
    },
    "CLIPTextEncodeSDXLRefiner": {
      "display_name": "CLIPTextEncodeSDXLRefiner"
    },
    "CLIPVisionEncode": {
      "display_name": "CLIP Vision Encode"
    },
    "CLIPVisionLoader": {
      "display_name": "Load CLIP Vision"
    },
    "CombineHooks2": {
      "display_name": "Combine Hooks [2]"
    },
    "CombineHooks4": {
      "display_name": "Combine Hooks [4]"
    },
    "CombineHooks8": {
      "display_name": "Combine Hooks [8]"
    },
    "ConditioningAverage": {
      "display_name": "ConditioningAverage"
    },
    "ConditioningCombine": {
      "display_name": "Conditioning (Combine)"
    },
    "ConditioningConcat": {
      "display_name": "Conditioning (Concat)"
    },
    "ConditioningSetArea": {
      "display_name": "Conditioning (Set Area)"
    },
    "ConditioningSetAreaPercentage": {
      "display_name": "Conditioning (Set Area with Percentage)"
    },
    "ConditioningSetAreaStrength": {
      "display_name": "ConditioningSetAreaStrength"
    },
    "ConditioningSetDefaultCombine": {
      "display_name": "Cond Set Default Combine"
    },
    "ConditioningSetMask": {
      "display_name": "Conditioning (Set Mask)"
    },
    "ConditioningSetProperties": {
      "display_name": "Cond Set Props"
    },
    "ConditioningSetPropertiesAndCombine": {
      "display_name": "Cond Set Props Combine"
    },
    "ConditioningSetTimestepRange": {
      "display_name": "ConditioningSetTimestepRange"
    },
    "ConditioningTimestepsRange": {
      "display_name": "Timesteps Range"
    },
    "ConditioningZeroOut": {
      "display_name": "ConditioningZeroOut"
    },
    "ControlNetApply": {
      "display_name": "Apply ControlNet (OLD)"
    },
    "ControlNetApplyAdvanced": {
      "display_name": "Apply ControlNet"
    },
    "ControlNetApplySD3": {
      "display_name": "Apply Controlnet with VAE"
    },
    "ControlNetInpaintingAliMamaApply": {
      "display_name": "ControlNetInpaintingAliMamaApply"
    },
    "ControlNetLoader": {
      "display_name": "Load ControlNet Model"
    },
    "CreateHookKeyframe": {
      "display_name": "Create Hook Keyframe"
    },
    "CreateHookKeyframesFromFloats": {
      "display_name": "Create Hook Keyframes From Floats"
    },
    "CreateHookKeyframesInterpolated": {
      "display_name": "Create Hook Keyframes Interp."
    },
    "CreateHookLora": {
      "display_name": "Create Hook LoRA"
    },
    "CreateHookLoraModelOnly": {
      "display_name": "Create Hook LoRA (MO)"
    },
    "CreateHookModelAsLora": {
      "display_name": "Create Hook Model as LoRA"
    },
    "CreateHookModelAsLoraModelOnly": {
      "display_name": "Create Hook Model as LoRA (MO)"
    },
    "CropMask": {
      "display_name": "CropMask"
    },
    "DevToolsDeprecatedNode": {
      "display_name": "Deprecated Node",
      "description": "A deprecated node"
    },
    "DevToolsErrorRaiseNode": {
      "display_name": "Raise Error",
      "description": "Raise an error for development purposes"
    },
    "DevToolsErrorRaiseNodeWithMessage": {
      "display_name": "Raise Error with Message",
      "description": "Raise an error with message for development purposes"
    },
    "DevToolsExperimentalNode": {
      "display_name": "Experimental Node",
      "description": "A experimental node"
    },
    "DevToolsLongComboDropdown": {
      "display_name": "Long Combo Dropdown",
      "description": "A long combo dropdown"
    },
    "DevToolsNodeWithForceInput": {
      "display_name": "Node With Force Input",
      "description": "A node with a forced input"
    },
    "DevToolsNodeWithOnlyOptionalInput": {
      "display_name": "Node With Only Optional Input",
      "description": "A node with only optional input"
    },
    "DevToolsNodeWithOptionalInput": {
      "display_name": "Node With Optional Input",
      "description": "A node with an optional input"
    },
    "DevToolsNodeWithOutputList": {
      "display_name": "Node With Output List",
      "description": "A node with an output list"
    },
    "DevToolsNodeWithStringInput": {
      "display_name": "Node With String Input",
      "description": "A node with a string input"
    },
    "DevToolsNodeWithUnionInput": {
      "display_name": "Node With Union Input",
      "description": "A node with a union input"
    },
    "DiffControlNetLoader": {
      "display_name": "Load ControlNet Model (diff)"
    },
    "DifferentialDiffusion": {
      "display_name": "Differential Diffusion"
    },
    "DiffusersLoader": {
      "display_name": "DiffusersLoader"
    },
    "DisableNoise": {
      "display_name": "DisableNoise"
    },
    "DualCFGGuider": {
      "display_name": "DualCFGGuider"
    },
    "DualCLIPLoader": {
      "display_name": "DualCLIPLoader",
      "description": "[Recipes]\n\nsdxl: clip-l, clip-g\nsd3: clip-l, clip-g / clip-l, t5 / clip-g, t5\nflux: clip-l, t5"
    },
    "EmptyImage": {
      "display_name": "EmptyImage"
    },
    "EmptyLatentAudio": {
      "display_name": "EmptyLatentAudio"
    },
    "EmptyLatentImage": {
      "display_name": "Empty Latent Image",
      "description": "Create a new batch of empty latent images to be denoised via sampling."
    },
    "EmptyLTXVLatentVideo": {
      "display_name": "EmptyLTXVLatentVideo"
    },
    "EmptyMochiLatentVideo": {
      "display_name": "EmptyMochiLatentVideo"
    },
    "EmptySD3LatentImage": {
      "display_name": "EmptySD3LatentImage"
    },
    "ExponentialScheduler": {
      "display_name": "ExponentialScheduler"
    },
    "FeatherMask": {
      "display_name": "FeatherMask"
    },
    "FlipSigmas": {
      "display_name": "FlipSigmas"
    },
    "FluxGuidance": {
      "display_name": "FluxGuidance"
    },
    "FreeU": {
      "display_name": "FreeU"
    },
    "FreeU_V2": {
      "display_name": "FreeU_V2"
    },
    "GITSScheduler": {
      "display_name": "GITSScheduler"
    },
    "GLIGENLoader": {
      "display_name": "GLIGENLoader"
    },
    "GLIGENTextBoxApply": {
      "display_name": "GLIGENTextBoxApply"
    },
    "GrowMask": {
      "display_name": "GrowMask"
    },
    "HypernetworkLoader": {
      "display_name": "HypernetworkLoader"
    },
    "HyperTile": {
      "display_name": "HyperTile"
    },
    "ImageBatch": {
      "display_name": "Batch Images"
    },
    "ImageBlend": {
      "display_name": "Image Blend"
    },
    "ImageBlur": {
      "display_name": "Image Blur"
    },
    "ImageColorToMask": {
      "display_name": "ImageColorToMask"
    },
    "ImageCompositeMasked": {
      "display_name": "ImageCompositeMasked"
    },
    "ImageCrop": {
      "display_name": "Image Crop"
    },
    "ImageFromBatch": {
      "display_name": "ImageFromBatch"
    },
    "ImageInvert": {
      "display_name": "Invert Image"
    },
    "ImageOnlyCheckpointLoader": {
      "display_name": "Image Only Checkpoint Loader (img2vid model)"
    },
    "ImageOnlyCheckpointSave": {
      "display_name": "ImageOnlyCheckpointSave"
    },
    "ImagePadForOutpaint": {
      "display_name": "Pad Image for Outpainting"
    },
    "ImageQuantize": {
      "display_name": "Image Quantize"
    },
    "ImageScale": {
      "display_name": "Upscale Image"
    },
    "ImageScaleBy": {
      "display_name": "Upscale Image By"
    },
    "ImageScaleToTotalPixels": {
      "display_name": "Scale Image to Total Pixels"
    },
    "ImageSharpen": {
      "display_name": "Image Sharpen"
    },
    "ImageToMask": {
      "display_name": "Convert Image to Mask"
    },
    "ImageUpscaleWithModel": {
      "display_name": "Upscale Image (using Model)"
    },
    "InpaintModelConditioning": {
      "display_name": "InpaintModelConditioning"
    },
    "InstructPixToPixConditioning": {
      "display_name": "InstructPixToPixConditioning"
    },
    "InvertMask": {
      "display_name": "InvertMask"
    },
    "JoinImageWithAlpha": {
      "display_name": "Join Image with Alpha"
    },
    "KarrasScheduler": {
      "display_name": "KarrasScheduler"
    },
    "KSampler": {
      "display_name": "KSampler",
      "description": "Uses the provided model, positive and negative conditioning to denoise the latent image."
    },
    "KSamplerAdvanced": {
      "display_name": "KSampler (Advanced)"
    },
    "KSamplerSelect": {
      "display_name": "KSamplerSelect"
    },
    "LaplaceScheduler": {
      "display_name": "LaplaceScheduler"
    },
    "LatentAdd": {
      "display_name": "LatentAdd"
    },
    "LatentApplyOperation": {
      "display_name": "LatentApplyOperation"
    },
    "LatentApplyOperationCFG": {
      "display_name": "LatentApplyOperationCFG"
    },
    "LatentBatch": {
      "display_name": "LatentBatch"
    },
    "LatentBatchSeedBehavior": {
      "display_name": "LatentBatchSeedBehavior"
    },
    "LatentBlend": {
      "display_name": "Latent Blend"
    },
    "LatentComposite": {
      "display_name": "Latent Composite"
    },
    "LatentCompositeMasked": {
      "display_name": "LatentCompositeMasked"
    },
    "LatentCrop": {
      "display_name": "Crop Latent"
    },
    "LatentFlip": {
      "display_name": "Flip Latent"
    },
    "LatentFromBatch": {
      "display_name": "Latent From Batch"
    },
    "LatentInterpolate": {
      "display_name": "LatentInterpolate"
    },
    "LatentMultiply": {
      "display_name": "LatentMultiply"
    },
    "LatentOperationSharpen": {
      "display_name": "LatentOperationSharpen"
    },
    "LatentOperationTonemapReinhard": {
      "display_name": "LatentOperationTonemapReinhard"
    },
    "LatentRotate": {
      "display_name": "Rotate Latent"
    },
    "LatentSubtract": {
      "display_name": "LatentSubtract"
    },
    "LatentUpscale": {
      "display_name": "Upscale Latent"
    },
    "LatentUpscaleBy": {
      "display_name": "Upscale Latent By"
    },
    "LoadAudio": {
      "display_name": "LoadAudio"
    },
    "LoadImage": {
      "display_name": "Load Image"
    },
    "LoadImageMask": {
      "display_name": "Load Image (as Mask)"
    },
    "LoadLatent": {
      "display_name": "LoadLatent"
    },
    "LoraLoader": {
      "display_name": "Load LoRA",
      "description": "LoRAs are used to modify diffusion and CLIP models, altering the way in which latents are denoised such as applying styles. Multiple LoRA nodes can be linked together."
    },
    "LoraLoaderModelOnly": {
      "display_name": "LoraLoaderModelOnly",
      "description": "LoRAs are used to modify diffusion and CLIP models, altering the way in which latents are denoised such as applying styles. Multiple LoRA nodes can be linked together."
    },
    "LoraSave": {
      "display_name": "Extract and Save Lora"
    },
    "LTXVConditioning": {
      "display_name": "LTXVConditioning"
    },
    "LTXVImgToVideo": {
      "display_name": "LTXVImgToVideo"
    },
    "LTXVScheduler": {
      "display_name": "LTXVScheduler"
    },
    "MaskComposite": {
      "display_name": "MaskComposite"
    },
    "MaskToImage": {
      "display_name": "Convert Mask to Image"
    },
    "ModelMergeAdd": {
      "display_name": "ModelMergeAdd"
    },
    "ModelMergeAuraflow": {
      "display_name": "ModelMergeAuraflow"
    },
    "ModelMergeBlocks": {
      "display_name": "ModelMergeBlocks"
    },
    "ModelMergeFlux1": {
      "display_name": "ModelMergeFlux1"
    },
    "ModelMergeLTXV": {
      "display_name": "ModelMergeLTXV"
    },
    "ModelMergeMochiPreview": {
      "display_name": "ModelMergeMochiPreview"
    },
    "ModelMergeSD1": {
      "display_name": "ModelMergeSD1"
    },
    "ModelMergeSD2": {
      "display_name": "ModelMergeSD2"
    },
    "ModelMergeSD3_2B": {
      "display_name": "ModelMergeSD3_2B"
    },
    "ModelMergeSD35_Large": {
      "display_name": "ModelMergeSD35_Large"
    },
    "ModelMergeSDXL": {
      "display_name": "ModelMergeSDXL"
    },
    "ModelMergeSimple": {
      "display_name": "ModelMergeSimple"
    },
    "ModelMergeSubtract": {
      "display_name": "ModelMergeSubtract"
    },
    "ModelSamplingAuraFlow": {
      "display_name": "ModelSamplingAuraFlow"
    },
    "ModelSamplingContinuousEDM": {
      "display_name": "ModelSamplingContinuousEDM"
    },
    "ModelSamplingContinuousV": {
      "display_name": "ModelSamplingContinuousV"
    },
    "ModelSamplingDiscrete": {
      "display_name": "ModelSamplingDiscrete"
    },
    "ModelSamplingFlux": {
      "display_name": "ModelSamplingFlux"
    },
    "ModelSamplingLTXV": {
      "display_name": "ModelSamplingLTXV"
    },
    "ModelSamplingSD3": {
      "display_name": "ModelSamplingSD3"
    },
    "ModelSamplingStableCascade": {
      "display_name": "ModelSamplingStableCascade"
    },
    "ModelSave": {
      "display_name": "ModelSave"
    },
    "Morphology": {
      "display_name": "ImageMorphology"
    },
    "PairConditioningCombine": {
      "display_name": "Cond Pair Combine"
    },
    "PairConditioningSetDefaultCombine": {
      "display_name": "Cond Pair Set Default Combine"
    },
    "PairConditioningSetProperties": {
      "display_name": "Cond Pair Set Props"
    },
    "PairConditioningSetPropertiesAndCombine": {
      "display_name": "Cond Pair Set Props Combine"
    },
    "PatchModelAddDownscale": {
      "display_name": "PatchModelAddDownscale (Kohya Deep Shrink)"
    },
    "PerpNeg": {
      "display_name": "Perp-Neg (DEPRECATED by PerpNegGuider)"
    },
    "PerpNegGuider": {
      "display_name": "PerpNegGuider"
    },
    "PerturbedAttentionGuidance": {
      "display_name": "PerturbedAttentionGuidance"
    },
    "PhotoMakerEncode": {
      "display_name": "PhotoMakerEncode"
    },
    "PhotoMakerLoader": {
      "display_name": "PhotoMakerLoader"
    },
    "PolyexponentialScheduler": {
      "display_name": "PolyexponentialScheduler"
    },
    "PorterDuffImageComposite": {
      "display_name": "Porter-Duff Image Composite"
    },
    "PreviewAudio": {
      "display_name": "PreviewAudio"
    },
    "PreviewImage": {
      "display_name": "Preview Image",
      "description": "Saves the input images to your ComfyUI output directory."
    },
    "RandomNoise": {
      "display_name": "RandomNoise"
    },
    "RebatchImages": {
      "display_name": "Rebatch Images"
    },
    "RebatchLatents": {
      "display_name": "Rebatch Latents"
    },
    "RepeatImageBatch": {
      "display_name": "RepeatImageBatch"
    },
    "RepeatLatentBatch": {
      "display_name": "Repeat Latent Batch"
    },
    "RescaleCFG": {
      "display_name": "RescaleCFG"
    },
    "SamplerCustom": {
      "display_name": "SamplerCustom"
    },
    "SamplerCustomAdvanced": {
      "display_name": "SamplerCustomAdvanced"
    },
    "SamplerDPMAdaptative": {
      "display_name": "SamplerDPMAdaptative"
    },
    "SamplerDPMPP_2M_SDE": {
      "display_name": "SamplerDPMPP_2M_SDE"
    },
    "SamplerDPMPP_2S_Ancestral": {
      "display_name": "SamplerDPMPP_2S_Ancestral"
    },
    "SamplerDPMPP_3M_SDE": {
      "display_name": "SamplerDPMPP_3M_SDE"
    },
    "SamplerDPMPP_SDE": {
      "display_name": "SamplerDPMPP_SDE"
    },
    "SamplerEulerAncestral": {
      "display_name": "SamplerEulerAncestral"
    },
    "SamplerEulerAncestralCFGPP": {
      "display_name": "SamplerEulerAncestralCFG++"
    },
    "SamplerEulerCFGpp": {
      "display_name": "SamplerEulerCFG++"
    },
    "SamplerLCMUpscale": {
      "display_name": "SamplerLCMUpscale"
    },
    "SamplerLMS": {
      "display_name": "SamplerLMS"
    },
    "SaveAnimatedPNG": {
      "display_name": "SaveAnimatedPNG"
    },
    "SaveAnimatedWEBP": {
      "display_name": "SaveAnimatedWEBP"
    },
    "SaveAudio": {
      "display_name": "SaveAudio"
    },
    "SaveImage": {
      "display_name": "Save Image",
      "description": "Saves the input images to your ComfyUI output directory."
    },
    "SaveImageWebsocket": {
      "display_name": "SaveImageWebsocket"
    },
    "SaveLatent": {
      "display_name": "SaveLatent"
    },
    "SD_4XUpscale_Conditioning": {
      "display_name": "SD_4XUpscale_Conditioning"
    },
    "SDTurboScheduler": {
      "display_name": "SDTurboScheduler"
    },
    "SelfAttentionGuidance": {
      "display_name": "Self-Attention Guidance"
    },
    "SetClipHooks": {
      "display_name": "Set CLIP Hooks"
    },
    "SetHookKeyframes": {
      "display_name": "Set Hook Keyframes"
    },
    "SetLatentNoiseMask": {
      "display_name": "Set Latent Noise Mask"
    },
    "SetUnionControlNetType": {
      "display_name": "SetUnionControlNetType"
    },
    "SkipLayerGuidanceDiT": {
      "display_name": "SkipLayerGuidanceDiT",
      "description": "Generic version of SkipLayerGuidance node that can be used on every DiT model."
    },
    "SkipLayerGuidanceSD3": {
      "display_name": "SkipLayerGuidanceSD3",
      "description": "Generic version of SkipLayerGuidance node that can be used on every DiT model."
    },
    "SolidMask": {
      "display_name": "SolidMask"
    },
    "SplitImageWithAlpha": {
      "display_name": "Split Image with Alpha"
    },
    "SplitSigmas": {
      "display_name": "SplitSigmas"
    },
    "SplitSigmasDenoise": {
      "display_name": "SplitSigmasDenoise"
    },
    "StableCascade_EmptyLatentImage": {
      "display_name": "StableCascade_EmptyLatentImage"
    },
    "StableCascade_StageB_Conditioning": {
      "display_name": "StableCascade_StageB_Conditioning"
    },
    "StableCascade_StageC_VAEEncode": {
      "display_name": "StableCascade_StageC_VAEEncode"
    },
    "StableCascade_SuperResolutionControlnet": {
      "display_name": "StableCascade_SuperResolutionControlnet"
    },
    "StableZero123_Conditioning": {
      "display_name": "StableZero123_Conditioning"
    },
    "StableZero123_Conditioning_Batched": {
      "display_name": "StableZero123_Conditioning_Batched"
    },
    "StyleModelApply": {
      "display_name": "Apply Style Model"
    },
    "StyleModelLoader": {
      "display_name": "Load Style Model"
    },
    "SV3D_Conditioning": {
      "display_name": "SV3D_Conditioning"
    },
    "SVD_img2vid_Conditioning": {
      "display_name": "SVD_img2vid_Conditioning"
    },
    "ThresholdMask": {
      "display_name": "ThresholdMask"
    },
    "TomePatchModel": {
      "display_name": "TomePatchModel"
    },
    "TorchCompileModel": {
      "display_name": "TorchCompileModel"
    },
    "TripleCLIPLoader": {
      "display_name": "TripleCLIPLoader",
      "description": "[Recipes]\n\nsd3: clip-l, clip-g, t5"
    },
    "unCLIPCheckpointLoader": {
      "display_name": "unCLIPCheckpointLoader"
    },
    "unCLIPConditioning": {
      "display_name": "unCLIPConditioning"
    },
    "UNetCrossAttentionMultiply": {
      "display_name": "UNetCrossAttentionMultiply"
    },
    "UNETLoader": {
      "display_name": "Load Diffusion Model"
    },
    "UNetSelfAttentionMultiply": {
      "display_name": "UNetSelfAttentionMultiply"
    },
    "UNetTemporalAttentionMultiply": {
      "display_name": "UNetTemporalAttentionMultiply"
    },
    "UpscaleModelLoader": {
      "display_name": "Load Upscale Model"
    },
    "VAEDecode": {
      "display_name": "VAE Decode",
      "description": "Decodes latent images back into pixel space images."
    },
    "VAEDecodeAudio": {
      "display_name": "VAEDecodeAudio"
    },
    "VAEDecodeTiled": {
      "display_name": "VAE Decode (Tiled)"
    },
    "VAEEncode": {
      "display_name": "VAE Encode"
    },
    "VAEEncodeAudio": {
      "display_name": "VAEEncodeAudio"
    },
    "VAEEncodeForInpaint": {
      "display_name": "VAE Encode (for Inpainting)"
    },
    "VAEEncodeTiled": {
      "display_name": "VAE Encode (Tiled)"
    },
    "VAELoader": {
      "display_name": "Load VAE"
    },
    "VAESave": {
      "display_name": "VAESave"
    },
    "VideoLinearCFGGuidance": {
      "display_name": "VideoLinearCFGGuidance"
    },
    "VideoTriangleCFGGuidance": {
      "display_name": "VideoTriangleCFGGuidance"
    },
    "VPScheduler": {
      "display_name": "VPScheduler"
    },
    "WebcamCapture": {
      "display_name": "Webcam Capture"
    }
  },
  "nodeCategories": {
    "sampling": "sampling",
    "loaders": "loaders",
    "conditioning": "conditioning",
    "latent": "latent",
    "inpaint": "inpaint",
    "batch": "batch",
    "image": "image",
    "mask": "mask",
    "upscaling": "upscaling",
    "_for_testing": "_for_testing",
    "transform": "transform",
    "advanced": "advanced",
    "style_model": "style_model",
    "controlnet": "controlnet",
    "gligen": "gligen",
    "deprecated": "deprecated",
    "operations": "operations",
    "postprocessing": "postprocessing",
    "compositing": "compositing",
    "model_merging": "model_merging",
    "model_patches": "model_patches",
    "unet": "unet",
    "preprocessors": "preprocessors",
    "custom_sampling": "custom_sampling",
    "schedulers": "schedulers",
    "samplers": "samplers",
    "sigmas": "sigmas",
    "guiders": "guiders",
    "noise": "noise",
    "model": "model",
    "animation": "animation",
    "video_models": "video_models",
    "3d_models": "3d_models",
    "upscale_diffusion": "upscale_diffusion",
    "photomaker": "photomaker",
    "stable_cascade": "stable_cascade",
    "instructpix2pix": "instructpix2pix",
    "model_specific": "model_specific",
    "attention_experiments": "attention_experiments",
    "audio": "audio",
    "sd3": "sd3",
    "guidance": "guidance",
    "flux": "flux",
    "video": "video",
    "ltxv": "ltxv",
    "hooks": "hooks",
    "create": "create",
    "scheduling": "scheduling",
    "combine": "combine",
    "cond single": "cond single",
    "cond pair": "cond pair",
    "clip": "clip",
    "DevTools": "DevTools",
    "api": "api"
  }
}