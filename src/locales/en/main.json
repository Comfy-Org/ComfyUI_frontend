{
  "g": {
    "user": "User",
    "currentUser": "Current user",
    "empty": "Empty",
    "noWorkflowsFound": "No workflows found.",
    "comingSoon": "Coming Soon",
    "firstTimeUIMessage": "This is the first time you use the new UI. Choose \"Menu > Use New Menu > Disabled\" to restore the old UI.",
    "download": "Download",
    "import": "Import",
    "loadAllFolders": "Load All Folders",
    "refresh": "Refresh",
    "terminal": "Terminal",
    "logs": "Logs",
    "videoFailedToLoad": "Video failed to load",
    "extensionName": "Extension Name",
    "reloadToApplyChanges": "Reload to apply changes",
    "insert": "Insert",
    "systemInfo": "System Info",
    "devices": "Devices",
    "about": "About",
    "add": "Add",
    "confirm": "Confirm",
    "confirmed": "Confirmed",
    "reset": "Reset",
    "resetAll": "Reset All",
    "resetAllKeybindingsTooltip": "Reset all keybindings to default",
    "customizeFolder": "Customize Folder",
    "icon": "Icon",
    "color": "Color",
    "error": "Error",
    "loading": "Loading",
    "findIssues": "Find Issues",
    "reportIssue": "Send Report",
    "reportIssueTooltip": "Submit the error report to Comfy Org",
    "reportSent": "Report Submitted",
    "copyToClipboard": "Copy to Clipboard",
    "openNewIssue": "Open New Issue",
    "showReport": "Show Report",
    "imageFailedToLoad": "Image failed to load",
    "reconnecting": "Reconnecting",
    "reconnected": "Reconnected",
    "delete": "Delete",
    "rename": "Rename",
    "save": "Save",
    "saving": "Saving",
    "no": "No",
    "cancel": "Cancel",
    "close": "Close",
    "back": "Back",
    "next": "Next",
    "install": "Install",
    "installing": "Installing",
    "overwrite": "Overwrite",
    "customize": "Customize",
    "experimental": "BETA",
    "deprecated": "DEPR",
    "loadWorkflow": "Load Workflow",
    "goToNode": "Go to Node",
    "settings": "Settings",
    "searchWorkflows": "Search Workflows",
    "searchSettings": "Search Settings",
    "searchNodes": "Search Nodes",
    "searchModels": "Search Models",
    "searchKeybindings": "Search Keybindings",
    "searchExtensions": "Search Extensions",
    "noResultsFound": "No Results Found",
    "searchFailedMessage": "We couldn't find any settings matching your search. Try adjusting your search terms.",
    "noTasksFound": "No Tasks Found",
    "noTasksFoundMessage": "There are no tasks in the queue.",
    "newFolder": "New Folder",
    "enableAll": "Enable All",
    "disableAll": "Disable All",
    "command": "Command",
    "keybinding": "Keybinding",
    "upload": "Upload",
    "export": "Export",
    "workflow": "Workflow",
    "success": "Success",
    "ok": "OK",
    "feedback": "Feedback",
    "continue": "Continue",
    "control_after_generate": "control after generate",
    "control_before_generate": "control before generate",
    "choose_file_to_upload": "choose file to upload",
    "capture": "capture",
    "nodes": "Nodes",
    "community": "Community",
    "all": "All",
    "update": "Update",
    "updated": "Updated",
    "resultsCount": "Found {count} Results",
    "status": "Status",
    "description": "Description",
    "name": "Name",
    "category": "Category",
    "sort": "Sort",
    "source": "Source",
    "filter": "Filter",
    "apply": "Apply",
    "enabled": "Enabled",
    "installed": "Installed",
    "restart": "Restart",
    "missing": "Missing",
    "inProgress": "In progress",
    "completed": "Completed",
    "interrupted": "Interrupted",
    "enabling": "Enabling",
    "disabling": "Disabling",
    "updating": "Updating",
    "migrate": "Migrate",
    "updateAvailable": "Update Available",
    "login": "Login",
    "learnMore": "Learn more",
    "amount": "Amount",
    "unknownError": "Unknown error",
    "title": "Title"
  },
  "manager": {
    "title": "Custom Nodes Manager",
    "failed": "Failed ({count})",
    "noNodesFound": "No nodes found",
    "noNodesFoundDescription": "The pack's nodes either could not be parsed, or the pack is a frontend extension only and doesn't have any nodes.",
    "installationQueue": "Installation Queue",
    "changingVersion": "Changing version from {from} to {to}",
    "dependencies": "Dependencies",
    "inWorkflow": "In Workflow",
    "infoPanelEmpty": "Click an item to see the info",
    "restartToApplyChanges": "To apply changes, please restart ComfyUI",
    "loadingVersions": "Loading versions...",
    "selectVersion": "Select Version",
    "downloads": "Downloads",
    "repository": "Repository",
    "uninstall": "Uninstall",
    "uninstalling": "Uninstalling",
    "update": "Update",
    "uninstallSelected": "Uninstall Selected",
    "updatingAllPacks": "Updating all packages",
    "license": "License",
    "nightlyVersion": "Nightly",
    "latestVersion": "Latest",
    "createdBy": "Created By",
    "totalNodes": "Total Nodes",
    "discoverCommunityContent": "Discover community-made Node Packs, Extensions, and more...",
    "errorConnecting": "Error connecting to the Comfy Node Registry.",
    "noResultsFound": "No results found matching your search.",
    "tryDifferentSearch": "Please try a different search query.",
    "tryAgainLater": "Please try again later.",
    "nodePack": "Node Pack",
    "searchPlaceholder": "Search",
    "version": "Version",
    "lastUpdated": "Last Updated",
    "noDescription": "No description available",
    "installSelected": "Install Selected",
    "packsSelected": "Packs Selected",
    "status": {
      "active": "Active",
      "pending": "Pending",
      "flagged": "Flagged",
      "deleted": "Deleted",
      "banned": "Banned",
      "unknown": "Unknown"
    },
    "sort": {
      "downloads": "Most Popular",
      "publisher": "Publisher",
      "created": "Newest",
      "updated": "Updated Recently"
    },
    "filter": {
      "nodePack": "Node Pack",
      "enabled": "Enabled",
      "disabled": "Disabled"
    }
  },
  "issueReport": {
    "submitErrorReport": "Submit Error Report (Optional)",
    "provideEmail": "Give us your email (optional)",
    "provideAdditionalDetails": "Provide additional details (optional)",
    "stackTrace": "Stack Trace",
    "systemStats": "System Stats",
    "contactFollowUp": "Contact me for follow up",
    "notifyResolve": "Notify me when resolved",
    "helpFix": "Help Fix This",
    "rating": "Rating",
    "feedbackTitle": "Help us improve ComfyUI by providing feedback",
    "contactSupportTitle": "Contact Support",
    "contactSupportDescription": "Please fill in the form below with your report",
    "selectIssue": "Select the issue",
    "whatDoYouNeedHelpWith": "What do you need help with?",
    "whatCanWeInclude": "Specify what to include in the report",
    "describeTheProblem": "Describe the problem",
    "email": "Email",
    "helpTypes": {
      "billingPayments": "Billing / Payments",
      "loginAccessIssues": "Login / Access Issues",
      "giveFeedback": "Give Feedback",
      "bugReport": "Bug Report",
      "somethingElse": "Something Else"
    },
    "validation": {
      "maxLength": "Message too long",
      "invalidEmail": "Please enter a valid email address",
      "selectIssueType": "Please select an issue type"
    }
  },
  "color": {
    "noColor": "No Color",
    "default": "Default",
    "blue": "Blue",
    "green": "Green",
    "red": "Red",
    "pink": "Pink",
    "yellow": "Yellow",
    "brown": "Brown",
    "pale_blue": "Pale Blue",
    "cyan": "Cyan",
    "purple": "Purple",
    "black": "Black",
    "custom": "Custom"
  },
  "contextMenu": {
    "Inputs": "Inputs",
    "Outputs": "Outputs",
    "Properties": "Properties",
    "Properties Panel": "Properties Panel",
    "Title": "Title",
    "Mode": "Mode",
    "Resize": "Resize",
    "Collapse": "Collapse",
    "Expand": "Expand",
    "Pin": "Pin",
    "Unpin": "Unpin",
    "Clone": "Clone",
    "Remove": "Remove",
    "Colors": "Colors",
    "Shapes": "Shapes",
    "Bypass": "Bypass",
    "Copy (Clipspace)": "Copy (Clipspace)",
    "Add Node": "Add Node",
    "Add Group": "Add Group",
    "Convert to Group Node": "Convert to Group Node",
    "Manage Group Nodes": "Manage Group Nodes",
    "Add Group For Selected Nodes": "Add Group For Selected Nodes",
    "Save Selected as Template": "Save Selected as Template",
    "Node Templates": "Node Templates",
    "Manage": "Manage",
    "Search": "Search"
  },
  "icon": {
    "bookmark": "Bookmark",
    "folder": "Folder",
    "star": "Star",
    "heart": "Heart",
    "file": "File",
    "inbox": "Inbox",
    "box": "Box",
    "briefcase": "Briefcase",
    "exclamation-triangle": "Warning"
  },
  "welcome": {
    "title": "Welcome to ComfyUI",
    "getStarted": "Get Started"
  },
  "userSelect": {
    "newUser": "New user",
    "enterUsername": "Enter a username",
    "existingUser": "Existing user",
    "selectUser": "Select a user",
    "next": "Next"
  },
  "notSupported": {
    "title": "Your device is not supported",
    "message": "Only following devices are supported:",
    "learnMore": "Learn More",
    "reportIssue": "Report Issue",
    "supportedDevices": {
      "macos": "MacOS (M1 or later)",
      "windows": "Windows (Nvidia GPU with CUDA support)"
    },
    "continue": "Continue",
    "continueTooltip": "I am sure my device is supported"
  },
  "downloadGit": {
    "title": "Download git",
    "message": "Unable to locate git.  A working copy of git is required for normal operation.",
    "instructions": "Please download and install the latest version for your operating system.  The Download git button below opens the git-scm.com downloads page.",
    "warning": "If you are sure you do not need git installed, or there has been a mistake, you may click Skip to byapss this check.  Attempting to run ComfyUI without a working copy of git is not currently supported.",
    "gitWebsite": "Download git",
    "skip": "Skip"
  },
  "install": {
    "installLocation": "Install Location",
    "migration": "Migration",
    "desktopSettings": "Desktop Settings",
    "chooseInstallationLocation": "Choose Installation Location",
    "systemLocations": "System Locations",
    "failedToSelectDirectory": "Failed to select directory",
    "pathValidationFailed": "Failed to validate path",
    "pathExists": "Directory already exists - please ensure you have backed up all data",
    "cannotWrite": "Unable to write to the selected path",
    "insufficientFreeSpace": "Insufficient space - minimum free space",
    "isOneDrive": "OneDrive is not supported. Please install ComfyUI in another location.",
    "nonDefaultDrive": "Please install ComfyUI on your system drive (eg. C:\\). Drives with different file systems may cause unpredicable issues. Models and other files can be stored on other drives after installation.",
    "parentMissing": "Path does not exist - create the containing directory first",
    "unhandledError": "Unknown error",
    "installLocationDescription": "Select the directory for ComfyUI's user data. A python environment will be installed to the selected location.",
    "installLocationTooltip": "ComfyUI's user data directory. Stores:\n- Python Environment\n- Models\n- Custom nodes\n",
    "appDataLocationTooltip": "ComfyUI's app data directory. Stores:\n- Logs\n- Server configs",
    "appPathLocationTooltip": "ComfyUI's app asset directory. Stores the ComfyUI code and assets",
    "migrateFromExistingInstallation": "Migrate from Existing Installation",
    "migrationSourcePathDescription": "If you have an existing ComfyUI installation, we can copy/link your existing user files and models to the new installation. Your existing ComfyUI installation will not be affected.",
    "selectItemsToMigrate": "Select Items to Migrate",
    "migrationOptional": "Migration is optional. If you don't have an existing installation, you can skip this step.",
    "desktopAppSettings": "Desktop App Settings",
    "desktopAppSettingsDescription": "Configure how ComfyUI behaves on your desktop. You can change these settings later.",
    "gpu": "GPU",
    "gpuSelection": {
      "selectGpu": "Select GPU",
      "selectGpuDescription": "Select the type of GPU you have",
      "cpuMode": "CPU Mode",
      "cpuModeDescription": "CPU mode is intended for developers and rare edge cases only.",
      "cpuModeDescription2": "If you are not absolutely certain you need this, please ignore this box and select your GPU above.",
      "enableCpuMode": "Enable CPU Mode",
      "nvidiaDescription": "NVIDIA devices are directly supported using pytorch CUDA builds.",
      "mpsDescription": "Apple Metal Performance Shaders are supported using pytorch nightly.",
      "customSkipsPython": "This option skips the normal python setup.",
      "customComfyNeedsPython": "ComfyUI will not work until python is setup",
      "customManualVenv": "Manually configure python venv",
      "customInstallRequirements": "Install all requirements and dependencies (e.g. custom torch)",
      "customMayNotWork": "This is entirely unsupported, and may simply not work"
    },
    "manualConfiguration": {
      "title": "Manual Configuration",
      "requirements": "Requirements",
      "createVenv": "You will need to create a virtual environment in the following directory",
      "virtualEnvironmentPath": "Virtual environment path",
      "restartWhenFinished": "When you have finished configuring the virtual environment, please restart ComfyUI."
    },
    "settings": {
      "autoUpdate": "Automatic Updates",
      "allowMetrics": "Usage Metrics",
      "errorUpdatingConsent": "Error Updating Consent",
      "errorUpdatingConsentDetail": "Failed to update metrics consent settings",
      "autoUpdateDescription": "Automatically download updates when they become available. You will be notified before updates are installed.",
      "allowMetricsDescription": "Help improve ComfyUI by sending anonymous usage metrics. No personal information or workflow content will be collected.",
      "learnMoreAboutData": "Learn more about data collection",
      "dataCollectionDialog": {
        "title": "About Data Collection",
        "whatWeCollect": "What we collect:",
        "whatWeDoNotCollect": "What we don't collect:",
        "collect": {
          "errorReports": "Error message and stack trace",
          "systemInfo": "Hardware, OS type, and app version",
          "userJourneyEvents": "User journey events"
        },
        "doNotCollect": {
          "personalInformation": "Personal information",
          "fileSystemInformation": "File system information",
          "workflowContents": "Workflow contents",
          "customNodeConfigurations": "Custom node configurations"
        },
        "viewFullPolicy": "View full policy"
      },
      "pythonMirrorPlaceholder": "Enter Python mirror URL",
      "pypiMirrorPlaceholder": "Enter PyPI mirror URL",
      "checkingMirrors": "Checking network access to python mirrors...",
      "mirrorsReachable": "Network access to python mirrors is good",
      "mirrorsUnreachable": "Network access to some python mirrors is bad",
      "mirrorSettings": "Mirror Settings"
    },
    "customNodes": "Custom Nodes",
    "customNodesDescription": "Reinstall custom nodes from existing ComfyUI installations.",
    "helpImprove": "Please help improve ComfyUI",
    "moreInfo": "For more info, please read our",
    "privacyPolicy": "privacy policy",
    "metricsEnabled": "Metrics Enabled",
    "metricsDisabled": "Metrics Disabled",
    "updateConsent": "You previously opted in to reporting crashes. We are now tracking event-based metrics to help identify bugs and improve the app. No personal identifiable information is collected."
  },
  "serverStart": {
    "troubleshoot": "Troubleshoot",
    "reportIssue": "Report Issue",
    "openLogs": "Open Logs",
    "showTerminal": "Show Terminal",
    "process": {
      "initial-state": "Loading...",
      "python-setup": "Setting up Python Environment...",
      "starting-server": "Starting ComfyUI server...",
      "ready": "Finishing...",
      "error": "Unable to start ComfyUI Desktop"
    }
  },
  "serverConfig": {
    "modifiedConfigs": "You have modified the following server configurations. Restart to apply changes.",
    "revertChanges": "Revert Changes",
    "restart": "Restart"
  },
  "sideToolbar": {
    "themeToggle": "Toggle Theme",
    "logout": "Logout",
    "queue": "Queue",
    "nodeLibrary": "Node Library",
    "workflows": "Workflows",
    "browseTemplates": "Browse example templates",
    "openWorkflow": "Open workflow in local file system",
    "newBlankWorkflow": "Create a new blank workflow",
    "nodeLibraryTab": {
      "sortOrder": "Sort Order"
    },
    "modelLibrary": "Model Library",
    "downloads": "Downloads",
    "queueTab": {
      "showFlatList": "Show Flat List",
      "backToAllTasks": "Back to All Tasks",
      "containImagePreview": "Fill Image Preview",
      "coverImagePreview": "Fit Image Preview",
      "clearPendingTasks": "Clear Pending Tasks",
      "filter": "Filter Outputs",
      "filters": {
        "hideCached": "Hide Cached",
        "hideCanceled": "Hide Canceled"
      }
    },
    "workflowTab": {
      "confirmDeleteTitle": "Delete workflow?",
      "confirmDelete": "Are you sure you want to delete this workflow?",
      "deleted": "Workflow deleted",
      "deleteFailedTitle": "Delete failed",
      "deleteFailed": "Attempt to delete the workflow failed.",
      "dirtyCloseTitle": "Save Changes?",
      "dirtyClose": "The files below have been changed.  Would you like to save them before closing?",
      "dirtyCloseHint": "Hold Shift to close without prompt",
      "confirmOverwriteTitle": "Overwrite existing file?",
      "confirmOverwrite": "The file below already exists. Would you like to overwrite it?",
      "workflowTreeType": {
        "browse": "Browse",
        "bookmarks": "Bookmarks",
        "open": "Open"
      }
    }
  },
  "menu": {
    "hideMenu": "Hide Menu",
    "showMenu": "Show Menu",
    "batchCount": "Batch Count",
    "batchCountTooltip": "The number of times the workflow generation should be queued",
    "autoQueue": "Auto Queue",
    "disabled": "Disabled",
    "disabledTooltip": "The workflow will not be automatically queued",
    "instant": "Instant",
    "instantTooltip": "The workflow will be queued instantly after a generation finishes",
    "onChange": "On Change",
    "onChangeTooltip": "The workflow will be queued once a change is made",
    "runWorkflow": "Run workflow (Shift to queue at front)",
    "runWorkflowFront": "Run workflow (Queue at front)",
    "run": "Run",
    "execute": "Execute",
    "interrupt": "Cancel current run",
    "refresh": "Refresh node definitions",
    "clipspace": "Open Clipspace",
    "resetView": "Reset canvas view",
    "clear": "Clear workflow",
    "toggleBottomPanel": "Toggle Bottom Panel"
  },
  "tabMenu": {
    "duplicateTab": "Duplicate Tab",
    "closeTab": "Close Tab",
    "closeTabsToLeft": "Close Tabs to Left",
    "closeTabsToRight": "Close Tabs to Right",
    "closeOtherTabs": "Close Other Tabs",
    "addToBookmarks": "Add to Bookmarks",
    "removeFromBookmarks": "Remove from Bookmarks"
  },
  "templateWorkflows": {
    "title": "Get Started with a Template",
    "category": {
      "ComfyUI Examples": "ComfyUI Examples",
      "Custom Nodes": "Custom Nodes",
      "Basics": "Basics",
      "Flux": "Flux",
      "ControlNet": "ControlNet",
      "Upscaling": "Upscaling",
      "Video": "Video",
      "Image": "Image",
      "Area Composition": "Area Composition",
      "3D": "3D",
      "Audio": "Audio",
      "Image API": "Image API",
      "Video API": "Video API"
    },
    "templateDescription": {
      "Basics": {
        "default": "Generate images from text descriptions.",
        "image2image": "Transform existing images using text prompts.",
        "lora": "Apply LoRA models for specialized styles or subjects.",
        "inpaint_example": "Edit specific parts of images seamlessly.",
        "inpain_model_outpainting": "Extend images beyond their original boundaries.",
        "embedding_example": "Use textual inversion for consistent styles.",
        "gligen_textbox_example": "Specify the location and size of objects.",
        "lora_multiple": "Combine multiple LoRA models for unique results."
      },
      "Flux": {
        "flux_dev_checkpoint_example": "Create images using Flux development models.",
        "flux_schnell": "Generate images quickly with Flux Schnell.",
        "flux_fill_inpaint_example": "Fill in missing parts of images.",
        "flux_fill_outpaint_example": "Extend images using Flux outpainting.",
        "flux_canny_model_example": "Generate images from edge detection.",
        "flux_depth_lora_example": "Create images with depth-aware LoRA.",
        "flux_redux_model_example": "Transfer style from a reference image to guide image generation with Flux."
      },
      "Image": {
        "hidream_i1_dev": "Generate images with HiDream I1 Dev.",
        "hidream_i1_fast": "Generate images quickly with HiDream I1.",
        "hidream_i1_full": "Generate images with HiDream I1.",
        "hidream_e1_full": "Edit images with HiDream E1.",
        "sd3_5_simple_example": "Generate images with SD 3.5.",
        "sd3_5_large_canny_controlnet_example": "Use edge detection to guide image generation with SD 3.5.",
        "sd3_5_large_depth": "Create depth-aware images with SD 3.5.",
        "sd3_5_large_blur": "Generate images from blurred reference images with SD 3.5.",
        "sdxl_simple_example": "Create high-quality images with SDXL.",
        "sdxl_refiner_prompt_example": "Enhance SDXL outputs with refiners.",
        "sdxl_revision_text_prompts": "Transfer concepts from reference images to guide image generation with SDXL.",
        "sdxl_revision_zero_positive": "Add text prompts alongside reference images to guide image generation with SDXL.",
        "sdxlturbo_example": "Generate images in a single step with SDXL Turbo."
      },
      "Video": {
        "text_to_video_wan": "Quickly Generate videos from text descriptions.",
        "image_to_video_wan": "Quickly Generate videos from images.",
        "wan2_1_fun_inp": "Create videos from start and end frames.",
        "wan2_1_fun_control": "Guide video generation with pose, depth, edge controls and more.",
        "wan2_1_flf2v_720_f16": "Generate video through controlling the first and last frames.",
        "ltxv_text_to_video": "Generate videos from text descriptions.",
        "ltxv_image_to_video": "Convert still images into videos.",
        "mochi_text_to_video_example": "Create videos with Mochi model.",
        "hunyuan_video_text_to_video": "Generate videos using Hunyuan model.",
        "image_to_video": "Transform images into animated videos.",
        "txt_to_image_to_video": "Generate images from text and then convert them into videos."
      },
      "Image API": {
        "api_openai_image_1_t2i": "Use GPT Image 1 API to generate images from text descriptions.",
        "api_openai_image_1_i2i": "Use GPT Image 1 API to generate images from images.",
        "api_openai_image_1_inpaint": "Use GPT Image 1 API to inpaint images.",
        "api_openai_image_1_multi_inputs": "Use GPT Image 1 API with multiple inputs to generate images.",
        "api-openai-dall-e-2-t2i": "Use Dall-E 2 API to generate images from text descriptions.",
        "api-openai-dall-e-2-inpaint": "Use Dall-E 2 API to inpaint images.",
        "api-openai-dall-e-3-t2i": "Use Dall-E 3 API to generate images from text descriptions.",
        "api_bfl_flux_pro_t2i": "Create images with FLUX.1 [pro]'s excellent prompt following, visual quality, image detail and output diversity.",
        "api_stability_sd3_t2i": "Generate high quality images with excellent prompt adherence. Perfect for professional use cases at 1 megapixel resolution.",
        "api_ideogram_v3_t2i": "Generate images with high-quality image-prompt alignment, photorealism, and text rendering. Create professional-quality logos, promotional posters, landing page concepts, product photography, and more. Effortlessly craft sophisticated spatial compositions with intricate backgrounds, precise and nuanced lighting and colors, and lifelike environmental detail.",
        "api_luma_photon_i2i": "Guide image generation using a combination of images and prompt.",
        "api_luma_photon_style_ref": "Apply and blend style references with exact control. Luma Photon captures the essence of each reference image, letting you combine distinct visual elements while maintaining professional quality.",
        "api_recraft_image_gen_with_color_control": "Create a custom palette to reuse for multiple images or hand-pick colors for each photo. Match your brand's color palette and craft visuals that are distinctly yours.",
        "api_recraft_image_gen_with_style_control": "Control style with visual examples, align positioning, and fine-tune objects. Store and share styles for perfect brand consistency.",
        "api_recraft_vector_gen": "Go from a text prompt to vector image with Recraft's AI vector generator. Produce the best-quality vector art for logos, posters, icon sets, ads, banners and mockups. Perfect your designs with sharp, high-quality SVG files. Create branded vector illustrations for your app or website in seconds."
      },
      "Video API": {
        "api_luma_i2v": "Take static images and instantly create magical high quality animations.",
        "api_kling_i2v": "Create videos with great prompt adherence for actions, expressions, and camera movements. Now supporting complex prompts with sequential actions for you to be the director of your scene.",
        "api_veo2_i2v": "Use Google Veo2 API to generate videos from images.",
        "api_hailuo_minimax_i2v": "Create refined videos from images and text, including CGI integration and trendy photo effects like viral AI hugging. Choose from a variety of video styles and themes to match your creative vision.",
        "api_pika_scene": "Use multiple images as ingredients and generate videos that incorporate all of them.",
        "api_pixverse_template_i2v": "Transforms static images into dynamic videos with motion and effects.",
        "api_pixverse_t2v": "Generate videos with accurate prompt interpretation and stunning video dynamics."
      },
      "Upscaling": {
        "hiresfix_latent_workflow": "Enhance image quality in latent space.",
        "esrgan_example": "Use upscale models to enhance image quality.",
        "hiresfix_esrgan_workflow": "Use upscale models during intermediate steps.",
        "latent_upscale_different_prompt_model": "Upscale and change prompt across passes."
      },
      "ControlNet": {
        "controlnet_example": "Control image generation with reference images.",
        "2_pass_pose_worship": "Generate images from pose references.",
        "depth_controlnet": "Create images with depth-aware generation.",
        "depth_t2i_adapter": "Quickly generate depth-aware images with a T2I adapter.",
        "mixing_controlnets": "Combine multiple ControlNet models together."
      },
      "Area Composition": {
        "area_composition": "Control image composition with areas.",
        "area_composition_reversed": "Reverse area composition workflow.",
        "area_composition_square_area_for_subject": "Create consistent subject placement."
      },
      "3D": {
        "hunyuan3d-non-multiview-train": "Use Hunyuan3D 2.0 to generate models from a single view.",
        "hunyuan-3d-multiview-elf": " Use Hunyuan3D 2mv to generate models from multiple views.",
        "hunyuan-3d-turbo": "Use Hunyuan3D 2mv turbo to generate models from multiple views.",
        "stable_zero123_example": "Generate 3D views from single images."
      },
      "Audio": {
        "stable_audio_example": "Generate audio from text descriptions."
      }
    },
    "template": {
      "Flux": {
        "flux_dev_checkpoint_example": "Flux Dev",
        "flux_schnell": "Flux Schnell",
        "flux_fill_inpaint_example": "Flux Inpaint",
        "flux_fill_outpaint_example": "Flux Outpaint",
        "flux_canny_model_example": "Flux Canny Model",
        "flux_redux_model_example": "Flux Redux Model",
        "flux_depth_lora_example": "Flux Depth Lora"
      },
      "Basics": {
        "default": "Image Generation",
        "image2image": "Image to Image",
        "embedding_example": "Embedding",
        "gligen_textbox_example": "Gligen Textbox",
        "lora": "Lora",
        "lora_multiple": "Lora Multiple",
        "inpaint_example": "Inpaint",
        "inpain_model_outpainting": "Outpaint"
      },
      "ControlNet": {
        "controlnet_example": "Scribble ControlNet",
        "2_pass_pose_worship": "Pose ControlNet 2 Pass",
        "depth_controlnet": "Depth ControlNet",
        "depth_t2i_adapter": "Depth T2I Adapter",
        "mixing_controlnets": "Mixing ControlNets"
      },
      "Upscaling": {
        "esrgan_example": "ESRGAN",
        "hiresfix_latent_workflow": "Upscale",
        "hiresfix_esrgan_workflow": "HiresFix ESRGAN Workflow",
        "latent_upscale_different_prompt_model": "Latent Upscale Different Prompt Model"
      },
      "Video": {
        "text_to_video_wan": "Wan 2.1 Text to Video",
        "image_to_video_wan": "Wan 2.1 Image to Video",
        "image_to_video": "SVD Image to Video",
        "txt_to_image_to_video": "SVD Text to Image to Video",
        "ltxv_image_to_video": "LTXV Image to Video",
        "ltxv_text_to_video": "LTXV Text to Video",
        "mochi_text_to_video_example": "Mochi Text to Video",
        "hunyuan_video_text_to_video": "Hunyuan Video Text to Video",
        "wan2_1_fun_inp": "Wan 2.1 Inpainting",
        "wan2_1_fun_control": "Wan 2.1 ControlNet"
      },
      "Image API": {
        "api_openai_image_1_t2i": "OpenAI Image-1 Text to Image",
        "api_openai_image_1_i2i": "OpenAI Image-1 Image to Image",
        "api_openai_image_1_inpaint": "OpenAI Image-1 Inpaint",
        "api_openai_image_1_multi_inputs": "OpenAI Image-1 Multi Inputs",
        "api-openai-dall-e-2-t2i": "Dall-E 2 Text to Image",
        "api-openai-dall-e-2-inpaint": "Dall-E 2 Inpaint",
        "api-openai-dall-e-3-t2i": "Dall-E 3 Text to Image",
        "api_bfl_flux_pro_t2i": "BFL Flux 1.1[pro] Ultra Text to Image",
        "api_stability_sd3_t2i": "Stability AI Stable Image Ultra Text to Image",
        "api_ideogram_v3_t2i": "Ideogram V3 Text to Image",
        "api_luma_photon_i2i": "Luma Photon Image to Image",
        "api_luma_photon_style_ref": "Luma Photon Style Reference",
        "api_recraft_image_gen_with_color_control": "Recraft Color Control Image Generation",
        "api_recraft_image_gen_with_style_control": "Recraft Style Control Image Generation",
        "api_recraft_vector_gen": "Recraft Vector Generation"
      },
      "Video API": {
        "api_luma_i2v": "Luma Image to Video",
        "api_kling_i2v": "Kling Image to Video",
        "api_veo2_i2v": "Veo2 Image to Video",
        "api_hailuo_minimax_i2v": "MiniMax Image to Video",
        "api_pika_scene": "Pika Scenes: Images to Video",
        "api_pixverse_template_i2v": "PixVerse Template Effects: Image to Video",
        "api_pixverse_t2v": "PixVerse Text to Video"
      },
      "Image": {
        "sd3_5_simple_example": "SD3.5 Simple",
        "sd3_5_large_canny_controlnet_example": "SD3.5 Large Canny ControlNet",
        "sd3_5_large_depth": "SD3.5 Large Depth",
        "sd3_5_large_blur": "SD3.5 Large Blur",
        "sdxl_simple_example": "SDXL Simple",
        "sdxl_refiner_prompt_example": "SDXL Refiner Prompt",
        "sdxl_revision_text_prompts": "SDXL Revision Text Prompts",
        "sdxl_revision_zero_positive": "SDXL Revision Zero Positive",
        "sdxlturbo_example": "SDXL Turbo",
        "hidream_i1_dev": "HiDream I1 Dev",
        "hidream_i1_fast": "HiDream I1 Fast",
        "hidream_i1_full": "HiDream I1 Full"
      },
      "Area Composition": {
        "area_composition": "Area Composition",
        "area_composition_reversed": "Area Composition Reversed",
        "area_composition_square_area_for_subject": "Area Composition Square Area for Subject"
      },
      "3D": {
        "stable_zero123_example": "Stable Zero123",
        "hunyuan3d-non-multiview-train": "Hunyuan3D 2.0",
        "hunyuan-3d-multiview-elf": "Hunyuan3D 2.0 MV",
        "hunyuan-3d-turbo": "Hunyuan3D 2.0 MV Turbo"
      },
      "Audio": {
        "stable_audio_example": "Stable Audio"
      }
    }
  },
  "graphCanvasMenu": {
    "zoomIn": "Zoom In",
    "zoomOut": "Zoom Out",
    "resetView": "Reset View",
    "fitView": "Fit View",
    "selectMode": "Select Mode",
    "panMode": "Pan Mode",
    "toggleLinkVisibility": "Toggle Link Visibility"
  },
  "groupNode": {
    "create": "Create group node",
    "enterName": "Enter name"
  },
  "nodeTemplates": {
    "saveAsTemplate": "Save as template",
    "enterName": "Enter name"
  },
  "workflowService": {
    "exportWorkflow": "Export Workflow",
    "enterFilename": "Enter the filename",
    "saveWorkflow": "Save workflow"
  },
  "electronFileDownload": {
    "inProgress": "In Progress",
    "pause": "Pause Download",
    "paused": "Paused",
    "resume": "Resume Download",
    "cancel": "Cancel Download",
    "cancelled": "Cancelled"
  },
  "maskEditor": {
    "Invert": "Invert",
    "Clear": "Clear",
    "Brush Settings": "Brush Settings",
    "Brush Shape": "Brush Shape",
    "Thickness": "Thickness",
    "Opacity": "Opacity",
    "Hardness": "Hardness",
    "Smoothing Precision": "Smoothing Precision",
    "Reset to Default": "Reset to Default",
    "Paint Bucket Settings": "Paint Bucket Settings",
    "Tolerance": "Tolerance",
    "Fill Opacity": "Fill Opacity",
    "Color Select Settings": "Color Select Settings",
    "Selection Opacity": "Selection Opacity",
    "Live Preview": "Live Preview",
    "Apply to Whole Image": "Apply to Whole Image",
    "Method": "Method",
    "Stop at mask": "Stop at mask",
    "Mask Tolerance": "Mask Tolerance",
    "Layers": "Layers",
    "Mask Layer": "Mask Layer",
    "Mask Opacity": "Mask Opacity",
    "Image Layer": "Image Layer"
  },
  "menuLabels": {
    "Workflow": "Workflow",
    "Edit": "Edit",
    "Help": "Help",
    "Check for Updates": "Check for Updates",
    "Open Custom Nodes Folder": "Open Custom Nodes Folder",
    "Open Inputs Folder": "Open Inputs Folder",
    "Open Logs Folder": "Open Logs Folder",
    "Open extra_model_paths_yaml": "Open extra_model_paths.yaml",
    "Open Models Folder": "Open Models Folder",
    "Open Outputs Folder": "Open Outputs Folder",
    "Open DevTools": "Open DevTools",
    "Desktop User Guide": "Desktop User Guide",
    "Quit": "Quit",
    "Reinstall": "Reinstall",
    "Restart": "Restart",
    "Browse Templates": "Browse Templates",
    "Delete Selected Items": "Delete Selected Items",
    "Fit view to selected nodes": "Fit view to selected nodes",
    "Reset View": "Reset View",
    "Resize Selected Nodes": "Resize Selected Nodes",
    "Canvas Toggle Link Visibility": "Canvas Toggle Link Visibility",
    "Canvas Toggle Lock": "Canvas Toggle Lock",
    "Pin/Unpin Selected Items": "Pin/Unpin Selected Items",
    "Bypass/Unbypass Selected Nodes": "Bypass/Unbypass Selected Nodes",
    "Collapse/Expand Selected Nodes": "Collapse/Expand Selected Nodes",
    "Mute/Unmute Selected Nodes": "Mute/Unmute Selected Nodes",
    "Pin/Unpin Selected Nodes": "Pin/Unpin Selected Nodes",
    "Zoom In": "Zoom In",
    "Zoom Out": "Zoom Out",
    "Clear Pending Tasks": "Clear Pending Tasks",
    "Clear Workflow": "Clear Workflow",
    "Contact Support": "Contact Support",
    "Duplicate Current Workflow": "Duplicate Current Workflow",
    "Export": "Export",
    "Export (API)": "Export (API)",
    "Give Feedback": "Give Feedback",
    "Fit Group To Contents": "Fit Group To Contents",
    "Group Selected Nodes": "Group Selected Nodes",
    "Convert selected nodes to group node": "Convert selected nodes to group node",
    "Manage group nodes": "Manage group nodes",
    "Ungroup selected group nodes": "Ungroup selected group nodes",
    "About ComfyUI": "About ComfyUI",
    "Comfy-Org Discord": "Comfy-Org Discord",
    "ComfyUI Docs": "ComfyUI Docs",
    "ComfyUI Forum": "ComfyUI Forum",
    "ComfyUI Issues": "ComfyUI Issues",
    "Interrupt": "Interrupt",
    "Load Default Workflow": "Load Default Workflow",
    "Custom Nodes Manager": "Custom Nodes Manager",
    "Toggle Progress Dialog": "Toggle Progress Dialog",
    "New": "New",
    "Clipspace": "Clipspace",
    "Open": "Open",
    "Queue Prompt": "Queue Prompt",
    "Queue Prompt (Front)": "Queue Prompt (Front)",
    "Queue Selected Output Nodes": "Queue Selected Output Nodes",
    "Redo": "Redo",
    "Refresh Node Definitions": "Refresh Node Definitions",
    "Save": "Save",
    "Save As": "Save As",
    "Show Settings Dialog": "Show Settings Dialog",
    "Toggle Theme (Dark/Light)": "Toggle Theme (Dark/Light)",
    "Undo": "Undo",
    "Open Sign In Dialog": "Open Sign In Dialog",
    "Sign Out": "Sign Out",
    "Close Current Workflow": "Close Current Workflow",
    "Next Opened Workflow": "Next Opened Workflow",
    "Previous Opened Workflow": "Previous Opened Workflow",
    "Toggle Search Box": "Toggle Search Box",
    "Toggle Bottom Panel": "Toggle Bottom Panel",
    "Toggle Terminal Bottom Panel": "Toggle Terminal Bottom Panel",
    "Toggle Logs Bottom Panel": "Toggle Logs Bottom Panel",
    "Toggle Focus Mode": "Toggle Focus Mode",
    "Toggle Model Library Sidebar": "Toggle Model Library Sidebar",
    "Toggle Node Library Sidebar": "Toggle Node Library Sidebar",
    "Toggle Queue Sidebar": "Toggle Queue Sidebar",
    "Toggle Workflows Sidebar": "Toggle Workflows Sidebar"
  },
  "desktopMenu": {
    "reinstall": "Reinstall",
    "confirmReinstall": "This will clear your extra_models_config.yaml file,\nand begin installation again.\n\nAre you sure?",
    "quit": "Quit",
    "confirmQuit": "There are unsaved workflows open; any unsaved changes will be lost.  Ignore this and quit?"
  },
  "settingsCategories": {
    "Comfy-Desktop": "Comfy-Desktop",
    "General": "General",
    "Appearance": "Appearance",
    "ColorPalette": "Color Palette",
    "Comfy": "Comfy",
    "Workflow": "Workflow",
    "DevMode": "Dev Mode",
    "LiteGraph": "Lite Graph",
    "Node Widget": "Node Widget",
    "Node": "Node",
    "Extension": "Extension",
    "Canvas": "Canvas",
    "Link": "Link",
    "Group": "Group",
    "Menu": "Menu",
    "Keybinding": "Keybinding",
    "LinkRelease": "Link Release",
    "Graph": "Graph",
    "Locale": "Locale",
    "Mask Editor": "Mask Editor",
    "BrushAdjustment": "Brush Adjustment",
    "NewEditor": "New Editor",
    "ModelLibrary": "Model Library",
    "NodeLibrary": "Node Library",
    "Node Search Box": "Node Search Box",
    "Pointer": "Pointer",
    "Queue": "Queue",
    "QueueButton": "Queue Button",
    "RerouteBeta": "Reroute Beta",
    "Server": "Server",
    "Settings": "Settings",
    "Sidebar": "Sidebar",
    "Tree Explorer": "Tree Explorer",
    "Validation": "Validation",
    "Window": "Window",
    "Server-Config": "Server-Config",
    "About": "About",
    "EditTokenWeight": "Edit Token Weight",
    "CustomColorPalettes": "Custom Color Palettes",
    "UV": "UV",
    "ContextMenu": "Context Menu",
    "Reroute": "Reroute",
    "Load 3D": "Load 3D",
    "Camera": "Camera",
    "Scene": "Scene",
    "3D": "3D",
    "Light": "Light",
    "User": "User",
    "Credits": "Credits"
  },
  "serverConfigItems": {
    "listen": {
      "name": "Host: The IP address to listen on"
    },
    "port": {
      "name": "Port: The port to listen on"
    },
    "tls-keyfile": {
      "name": "TLS Key File: Path to TLS key file for HTTPS"
    },
    "tls-certfile": {
      "name": "TLS Certificate File: Path to TLS certificate file for HTTPS"
    },
    "enable-cors-header": {
      "name": "Enable CORS header: Use \"*\" for all origins or specify domain"
    },
    "max-upload-size": {
      "name": "Maximum upload size (MB)"
    },
    "cuda-device": {
      "name": "CUDA device index to use"
    },
    "cuda-malloc": {
      "name": "Use CUDA malloc for memory allocation"
    },
    "global-precision": {
      "name": "Global floating point precision",
      "tooltip": "Global floating point precision"
    },
    "unet-precision": {
      "name": "UNET precision",
      "tooltip": "UNET precision"
    },
    "vae-precision": {
      "name": "VAE precision",
      "tooltip": "VAE precision"
    },
    "cpu-vae": {
      "name": "Run VAE on CPU"
    },
    "text-encoder-precision": {
      "name": "Text Encoder precision",
      "tooltip": "Text Encoder precision"
    },
    "force-channels-last": {
      "name": "Force channels-last memory format"
    },
    "directml": {
      "name": "DirectML device index"
    },
    "disable-ipex-optimize": {
      "name": "Disable IPEX optimization"
    },
    "preview-method": {
      "name": "Method used for latent previews"
    },
    "preview-size": {
      "name": "Size of preview images"
    },
    "cache-classic": {
      "name": "Use classic cache system"
    },
    "cache-lru": {
      "name": "Use LRU caching with a maximum of N node results cached.",
      "tooltip": "May use more RAM/VRAM."
    },
    "cross-attention-method": {
      "name": "Cross attention method"
    },
    "disable-xformers": {
      "name": "Disable xFormers optimization"
    },
    "force-upcast-attention": {
      "name": "Force attention upcast"
    },
    "dont-upcast-attention": {
      "name": "Prevent attention upcast"
    },
    "vram-management": {
      "name": "VRAM management mode"
    },
    "reserve-vram": {
      "name": "Reserved VRAM (GB)",
      "tooltip": "Set the amount of vram in GB you want to reserve for use by your OS/other software. By default some amount is reverved depending on your OS."
    },
    "default-hashing-function": {
      "name": "Default hashing function for model files"
    },
    "disable-smart-memory": {
      "name": "Disable smart memory management",
      "tooltip": "Force ComfyUI to aggressively offload to regular ram instead of keeping models in vram when it can."
    },
    "deterministic": {
      "name": "Make pytorch use slower deterministic algorithms when it can.",
      "tooltip": "Note that this might not make images deterministic in all cases."
    },
    "fast": {
      "name": "Enable some untested and potentially quality deteriorating optimizations."
    },
    "dont-print-server": {
      "name": "Don't print server output to console."
    },
    "disable-metadata": {
      "name": "Disable saving prompt metadata in files."
    },
    "disable-all-custom-nodes": {
      "name": "Disable loading all custom nodes."
    },
    "log-level": {
      "name": "Logging verbosity level"
    },
    "input-directory": {
      "name": "Input directory"
    },
    "output-directory": {
      "name": "Output directory"
    }
  },
  "serverConfigCategories": {
    "Network": "Network",
    "CUDA": "CUDA",
    "Inference": "Inference",
    "Memory": "Memory",
    "Preview": "Preview",
    "Cache": "Cache",
    "Attention": "Attention",
    "General": "General",
    "Directories": "Directories"
  },
  "nodeCategories": {
    "_for_testing": "_for_testing",
    "custom_sampling": "custom_sampling",
    "noise": "noise",
    "sampling": "sampling",
    "schedulers": "schedulers",
    "guiders": "guiders",
    "image": "image",
    "preprocessors": "preprocessors",
    "advanced": "advanced",
    "guidance": "guidance",
    "loaders": "loaders",
    "model_merging": "model_merging",
    "attention_experiments": "attention_experiments",
    "conditioning": "conditioning",
    "flux": "flux",
    "hooks": "hooks",
    "combine": "combine",
    "cond single": "cond single",
    "controlnet": "controlnet",
    "inpaint": "inpaint",
    "scheduling": "scheduling",
    "create": "create",
    "video": "video",
    "mask": "mask",
    "deprecated": "deprecated",
    "latent": "latent",
    "audio": "audio",
    "3d": "3d",
    "ltxv": "ltxv",
    "sd3": "sd3",
    "sigmas": "sigmas",
    "api node": "api node",
    "BFL": "BFL",
    "model_patches": "model_patches",
    "unet": "unet",
    "gligen": "gligen",
    "video_models": "video_models",
    "Ideogram": "Ideogram",
    "v1": "v1",
    "v2": "v2",
    "v3": "v3",
    "postprocessing": "postprocessing",
    "transform": "transform",
    "batch": "batch",
    "upscaling": "upscaling",
    "instructpix2pix": "instructpix2pix",
    "compositing": "compositing",
    "Kling": "Kling",
    "samplers": "samplers",
    "operations": "operations",
    "lotus": "lotus",
    "Luma": "Luma",
    "MiniMax": "MiniMax",
    "debug": "debug",
    "model": "model",
    "model_specific": "model_specific",
    "OpenAI": "OpenAI",
    "cond pair": "cond pair",
    "photomaker": "photomaker",
    "Pika": "Pika",
    "PixVerse": "PixVerse",
    "utils": "utils",
    "primitive": "primitive",
    "Recraft": "Recraft",
    "animation": "animation",
    "api": "api",
    "upscale_diffusion": "upscale_diffusion",
    "clip": "clip",
    "Stability AI": "Stability AI",
    "stable_cascade": "stable_cascade",
    "3d_models": "3d_models",
    "style_model": "style_model",
    "sd": "sd",
    "Veo": "Veo"
  },
  "dataTypes": {
    "*": "*",
    "AUDIO": "AUDIO",
    "BOOLEAN": "BOOLEAN",
    "CAMERA_CONTROL": "CAMERA_CONTROL",
    "CLIP": "CLIP",
    "CLIP_VISION": "CLIP_VISION",
    "CLIP_VISION_OUTPUT": "CLIP_VISION_OUTPUT",
    "COMBO": "COMBO",
    "CONDITIONING": "CONDITIONING",
    "CONTROL_NET": "CONTROL_NET",
    "FLOAT": "FLOAT",
    "FLOATS": "FLOATS",
    "GLIGEN": "GLIGEN",
    "GUIDER": "GUIDER",
    "HOOK_KEYFRAMES": "HOOK_KEYFRAMES",
    "HOOKS": "HOOKS",
    "IMAGE": "IMAGE",
    "INT": "INT",
    "LATENT": "LATENT",
    "LATENT_OPERATION": "LATENT_OPERATION",
    "LOAD_3D": "LOAD_3D",
    "LOAD_3D_ANIMATION": "LOAD_3D_ANIMATION",
    "LOAD3D_CAMERA": "LOAD3D_CAMERA",
    "LUMA_CONCEPTS": "LUMA_CONCEPTS",
    "LUMA_REF": "LUMA_REF",
    "MASK": "MASK",
    "MESH": "MESH",
    "MODEL": "MODEL",
    "NOISE": "NOISE",
    "PHOTOMAKER": "PHOTOMAKER",
    "PIXVERSE_TEMPLATE": "PIXVERSE_TEMPLATE",
    "RECRAFT_COLOR": "RECRAFT_COLOR",
    "RECRAFT_CONTROLS": "RECRAFT_CONTROLS",
    "RECRAFT_V3_STYLE": "RECRAFT_V3_STYLE",
    "SAMPLER": "SAMPLER",
    "SIGMAS": "SIGMAS",
    "STRING": "STRING",
    "STYLE_MODEL": "STYLE_MODEL",
    "SVG": "SVG",
    "TIMESTEPS_RANGE": "TIMESTEPS_RANGE",
    "UPSCALE_MODEL": "UPSCALE_MODEL",
    "VAE": "VAE",
    "VIDEO": "VIDEO",
    "VOXEL": "VOXEL",
    "WEBCAM": "WEBCAM"
  },
  "maintenance": {
    "title": "Maintenance",
    "allOk": "No issues were detected.",
    "status": "Status",
    "detected": "Detected",
    "refreshing": "Refreshing",
    "None": "None",
    "OK": "OK",
    "Skipped": "Skipped",
    "showManual": "Show maintenance tasks",
    "confirmTitle": "Are you sure?",
    "terminalDefaultMessage": "When you run a troubleshooting command, any output will be shown here.",
    "consoleLogs": "Console Logs",
    "error": {
      "toastTitle": "Task error",
      "taskFailed": "Task failed to run.",
      "cannotContinue": "Unable to continue - errors remain",
      "defaultDescription": "An error occurred while running a maintenance task."
    }
  },
  "missingModelsDialog": {
    "doNotAskAgain": "Don't show this again",
    "missingModels": "Missing Models",
    "missingModelsMessage": "When loading the graph, the following models were not found"
  },
  "errorDialog": {
    "defaultTitle": "An error occurred",
    "loadWorkflowTitle": "Loading aborted due to error reloading workflow data",
    "noStackTrace": "No stacktrace available",
    "extensionFileHint": "This may be due to the following script",
    "promptExecutionError": "Prompt execution failed"
  },
  "apiNodesSignInDialog": {
    "title": "Sign In Required to Use API Nodes",
    "message": "This workflow contains API Nodes, which require you to be signed in to your account in order to run."
  },
  "apiNodesCostBreakdown": {
    "title": "API Node(s)",
    "costPerRun": "Cost per run",
    "totalCost": "Total Cost"
  },
  "desktopUpdate": {
    "title": "Updating ComfyUI Desktop",
    "description": "ComfyUI Desktop is installing new dependencies.  This may take a few minutes.",
    "terminalDefaultMessage": "Any console output from the update will be shown here.",
    "updateFoundTitle": "Update Found (v{version})",
    "updateAvailableMessage": "An update is available. Do you want to restart and update now?",
    "noUpdateFound": "No update found",
    "errorCheckingUpdate": "Error checking for updates",
    "errorInstallingUpdate": "Error installing update"
  },
  "clipboard": {
    "successMessage": "Copied to clipboard",
    "errorMessage": "Failed to copy to clipboard",
    "errorNotSupported": "Clipboard API not supported in your browser"
  },
  "load3d": {
    "switchCamera": "Switch Camera",
    "showGrid": "Show Grid",
    "backgroundColor": "Background Color",
    "lightIntensity": "Light Intensity",
    "fov": "FOV",
    "previewOutput": "Preview Output",
    "uploadBackgroundImage": "Upload Background Image",
    "removeBackgroundImage": "Remove Background Image",
    "loadingModel": "Loading 3D Model...",
    "upDirection": "Up Direction",
    "materialMode": "Material Mode",
    "scene": "Scene",
    "model": "Model",
    "camera": "Camera",
    "light": "Light",
    "switchingMaterialMode": "Switching Material Mode...",
    "edgeThreshold": "Edge Threshold",
    "export": "Export",
    "exportModel": "Export Model",
    "exportingModel": "Exporting model...",
    "uploadTexture": "Upload Texture",
    "applyingTexture": "Applying Texture...",
    "materialModes": {
      "normal": "Normal",
      "wireframe": "Wireframe",
      "original": "Original",
      "depth": "Depth",
      "lineart": "Lineart"
    },
    "startRecording": "Start Recording",
    "stopRecording": "Stop Recording",
    "exportRecording": "Export Recording",
    "clearRecording": "Clear Recording",
    "resizeNodeMatchOutput": "Resize Node to match output"
  },
  "toastMessages": {
    "nothingToQueue": "Nothing to queue",
    "pleaseSelectOutputNodes": "Please select output nodes",
    "no3dScene": "No 3D scene to apply texture",
    "failedToApplyTexture": "Failed to apply texture",
    "no3dSceneToExport": "No 3D scene to export",
    "failedToExportModel": "Failed to export model as {format}",
    "fileLoadError": "Unable to find workflow in {fileName}",
    "dropFileError": "Unable to process dropped item: {error}",
    "interrupted": "Execution has been interrupted",
    "pendingTasksDeleted": "Pending tasks deleted",
    "nothingToGroup": "Nothing to group",
    "pleaseSelectNodesToGroup": "Please select the nodes (or other groups) to create a group for",
    "emptyCanvas": "Empty canvas",
    "fileUploadFailed": "File upload failed",
    "unableToGetModelFilePath": "Unable to get model file path",
    "couldNotDetermineFileType": "Could not determine file type",
    "errorLoadingModel": "Error loading model",
    "failedToDownloadFile": "Failed to download file",
    "updateRequested": "Update requested",
    "nodeDefinitionsUpdated": "Node definitions updated",
    "errorSaveSetting": "Error saving setting {id}: {err}",
    "errorCopyImage": "Error copying image: {error}",
    "noTemplatesToExport": "No templates to export",
    "failedToFetchLogs": "Failed to fetch server logs",
    "migrateToLitegraphReroute": "Reroute nodes will be removed in future versions. Click to migrate to litegraph-native reroute.",
    "userNotAuthenticated": "User not authenticated",
    "failedToFetchBalance": "Failed to fetch balance: {error}",
    "failedToCreateCustomer": "Failed to create customer: {error}",
    "failedToInitiateCreditPurchase": "Failed to initiate credit purchase: {error}",
    "failedToAccessBillingPortal": "Failed to access billing portal: {error}",
    "failedToPurchaseCredits": "Failed to purchase credits: {error}",
    "unauthorizedDomain": "Your domain {domain} is not authorized to use this service. Please contact {email} to add your domain to the whitelist.",
    "useApiKeyTip": "Tip: Can't access normal login? Use the Comfy API Key option."
  },
  "auth": {
    "apiKey": {
      "title": "API Key",
      "label": "API Key",
      "description": "Use your Comfy API key to enable API Nodes",
      "placeholder": "Enter your API Key",
      "error": "Invalid API Key",
      "storageFailed": "Failed to store API Key",
      "storageFailedDetail": "Please try again.",
      "stored": "API Key stored",
      "storedDetail": "Your API Key has been stored successfully",
      "cleared": "API Key cleared",
      "clearedDetail": "Your API Key has been cleared successfully",
      "invalid": "Invalid API Key",
      "invalidDetail": "Please enter a valid API Key",
      "helpText": "Need an API key?",
      "generateKey": "Get one here",
      "whitelistInfo": "About non-whitelisted sites"
    },
    "login": {
      "title": "Log in to your account",
      "useApiKey": "Comfy API Key",
      "signInOrSignUp": "Sign In / Sign Up",
      "forgotPasswordError": "Failed to send password reset email",
      "passwordResetSent": "Password reset email sent",
      "passwordResetSentDetail": "Please check your email for a link to reset your password.",
      "newUser": "New here?",
      "userAvatar": "User Avatar",
      "signUp": "Sign up",
      "emailLabel": "Email",
      "emailPlaceholder": "Enter your email",
      "passwordLabel": "Password",
      "passwordPlaceholder": "Enter your password",
      "confirmPasswordLabel": "Confirm Password",
      "confirmPasswordPlaceholder": "Enter the same password again",
      "forgotPassword": "Forgot password?",
      "loginButton": "Log in",
      "orContinueWith": "Or continue with",
      "loginWithGoogle": "Log in with Google",
      "loginWithGithub": "Log in with Github",
      "termsText": "By clicking \"Next\" or \"Sign Up\", you agree to our",
      "termsLink": "Terms of Use",
      "andText": "and",
      "privacyLink": "Privacy Policy",
      "success": "Login successful",
      "failed": "Login failed",
      "insecureContextWarning": "This connection is insecure (HTTP) - your credentials may be intercepted by attackers if you proceed to login.",
      "questionsContactPrefix": "Questions? Contact us at",
      "noAssociatedUser": "There is no Comfy user associated with the provided API key"
    },
    "signup": {
      "title": "Create an account",
      "alreadyHaveAccount": "Already have an account?",
      "emailLabel": "Email",
      "emailPlaceholder": "Enter your email",
      "passwordLabel": "Password",
      "passwordPlaceholder": "Enter new password",
      "signUpButton": "Sign up",
      "signIn": "Sign in",
      "signUpWithGoogle": "Sign up with Google",
      "signUpWithGithub": "Sign up with Github",
      "regionRestrictionChina": "In accordance with local regulatory requirements, our services are temporarily unavailable to users located in China.",
      "personalDataConsentLabel": "I agree to the processing of my personal data."
    },
    "signOut": {
      "signOut": "Log Out",
      "success": "Signed out successfully",
      "successDetail": "You have been signed out of your account."
    },
    "passwordUpdate": {
      "success": "Password Updated",
      "successDetail": "Your password has been updated successfully"
    }
  },
  "validation": {
    "invalidEmail": "Invalid email address",
    "required": "Required",
    "minLength": "Must be at least {length} characters",
    "maxLength": "Must be no more than {length} characters",
    "prefix": "Must start with {prefix}",
    "length": "Must be {length} characters",
    "password": {
      "requirements": "Password requirements",
      "minLength": "Must be between 8 and 32 characters",
      "uppercase": "Must contain at least one uppercase letter",
      "lowercase": "Must contain at least one lowercase letter",
      "number": "Must contain at least one number",
      "special": "Must contain at least one special character",
      "match": "Passwords must match"
    },
    "personalDataConsentRequired": "You must agree to the processing of your personal data."
  },
  "credits": {
    "credits": "Credits",
    "yourCreditBalance": "Your credit balance",
    "purchaseCredits": "Purchase Credits",
    "invoiceHistory": "Invoice History",
    "apiPricing": "API Pricing",
    "faqs": "FAQs",
    "messageSupport": "Message Support",
    "lastUpdated": "Last updated",
    "topUp": {
      "insufficientTitle": "Insufficient Credits",
      "insufficientMessage": "You don't have enough credits to run this workflow.",
      "quickPurchase": "Quick Purchase",
      "maxAmount": "(Max. $1,000 USD)",
      "buyNow": "Buy now",
      "seeDetails": "See details",
      "topUp": "Top Up"
    }
  },
  "userSettings": {
    "title": "User Settings",
    "name": "Name",
    "email": "Email",
    "provider": "Sign-in Provider",
    "notSet": "Not set",
    "updatePassword": "Update Password"
  },
  "apiNodesNews": {
    "introducing": "Introducing",
    "subtitle": "Access all the popular paid models natively in ComfyUI",
    "steps": {
      "step1": {
        "title": "Login/Create an account:",
        "subtitle": "Settings > User > Login"
      },
      "step2": {
        "title": "Purchase credits:",
        "subtitle": "Settings > Credits > Buy Credits"
      },
      "step3": {
        "title": "Locate new API Nodes under 'API Node' section and add to the canvas"
      },
      "step4": {
        "title": "Run!"
      }
    }
  },
  "selectionToolbox": {
    "executeButton": {
      "tooltip": "Execute to selected output nodes (Highlighted with orange border)",
      "disabledTooltip": "No output nodes selected"
    }
  }
}