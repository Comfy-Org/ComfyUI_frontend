{
  "AddNoise": {
    "display_name": "AñadirRuido",
    "inputs": {
      "latent_image": {
        "name": "imagen_latente"
      },
      "model": {
        "name": "modelo"
      },
      "noise": {
        "name": "ruido"
      },
      "sigmas": {
        "name": "sigmas"
      }
    }
  },
  "AlignYourStepsScheduler": {
    "display_name": "ProgramadorAlineaTusPasos",
    "inputs": {
      "denoise": {
        "name": "desruido"
      },
      "model_type": {
        "name": "tipo_modelo"
      },
      "steps": {
        "name": "pasos"
      }
    }
  },
  "BasicGuider": {
    "display_name": "GuíaBásica",
    "inputs": {
      "conditioning": {
        "name": "acondicionamiento"
      },
      "model": {
        "name": "modelo"
      }
    }
  },
  "BasicScheduler": {
    "display_name": "ProgramadorBásico",
    "inputs": {
      "denoise": {
        "name": "desruido"
      },
      "model": {
        "name": "modelo"
      },
      "scheduler": {
        "name": "programador"
      },
      "steps": {
        "name": "pasos"
      }
    }
  },
  "BetaSamplingScheduler": {
    "display_name": "ProgramadorMuestreoBeta",
    "inputs": {
      "alpha": {
        "name": "alfa"
      },
      "beta": {
        "name": "beta"
      },
      "model": {
        "name": "modelo"
      },
      "steps": {
        "name": "pasos"
      }
    }
  },
  "CFGGuider": {
    "display_name": "GuíaCFG",
    "inputs": {
      "cfg": {
        "name": "cfg"
      },
      "model": {
        "name": "modelo"
      },
      "negative": {
        "name": "negativo"
      },
      "positive": {
        "name": "positivo"
      }
    }
  },
  "CFGZeroStar": {
    "display_name": "CFGZeroStar",
    "inputs": {
      "model": {
        "name": "modelo"
      }
    },
    "outputs": {
      "0": {
        "name": "modelo_modificado"
      }
    }
  },
  "CLIPAttentionMultiply": {
    "display_name": "MultiplicarAtenciónCLIP",
    "inputs": {
      "clip": {
        "name": "clip"
      },
      "k": {
        "name": "k"
      },
      "out": {
        "name": "salida"
      },
      "q": {
        "name": "q"
      },
      "v": {
        "name": "v"
      }
    }
  },
  "CLIPLoader": {
    "description": "[Recetas]\n\nstable_diffusion: clip-l\nstable_cascade: clip-g\nsd3: t5 xxl/ clip-g / clip-l\nstable_audio: t5 base\nmochi: t5 xxl\ncosmos: old t5 xxl\nlumina2: gemma 2 2B\nwan: umt5 xxl",
    "display_name": "Cargar CLIP",
    "inputs": {
      "clip_name": {
        "name": "nombre_clip"
      },
      "device": {
        "name": "dispositivo"
      },
      "type": {
        "name": "tipo"
      }
    }
  },
  "CLIPMergeAdd": {
    "display_name": "CLIPMergeAdd",
    "inputs": {
      "clip1": {
        "name": "clip1"
      },
      "clip2": {
        "name": "clip2"
      }
    }
  },
  "CLIPMergeSimple": {
    "display_name": "CLIPMergeSimple",
    "inputs": {
      "clip1": {
        "name": "clip1"
      },
      "clip2": {
        "name": "clip2"
      },
      "ratio": {
        "name": "ratio"
      }
    }
  },
  "CLIPMergeSubtract": {
    "display_name": "CLIPMergeSubtract",
    "inputs": {
      "clip1": {
        "name": "clip1"
      },
      "clip2": {
        "name": "clip2"
      },
      "multiplier": {
        "name": "multiplicador"
      }
    }
  },
  "CLIPSave": {
    "display_name": "Guardar CLIP",
    "inputs": {
      "clip": {
        "name": "clip"
      },
      "filename_prefix": {
        "name": "prefijo_nombre_archivo"
      }
    }
  },
  "CLIPSetLastLayer": {
    "display_name": "Establecer Última Capa de CLIP",
    "inputs": {
      "clip": {
        "name": "clip"
      },
      "stop_at_clip_layer": {
        "name": "detener_en_capa_clip"
      }
    }
  },
  "CLIPTextEncode": {
    "description": "Codifica un prompt de texto utilizando un modelo CLIP en un embedding que se puede usar para guiar el modelo de difusión hacia la generación de imágenes específicas.",
    "display_name": "Codificar Texto CLIP (Prompt)",
    "inputs": {
      "clip": {
        "name": "clip",
        "tooltip": "El modelo CLIP utilizado para codificar el texto."
      },
      "text": {
        "name": "texto",
        "tooltip": "El texto a codificar."
      }
    },
    "outputs": {
      "0": {
        "tooltip": "Una condición que contiene el texto incrustado utilizado para guiar el modelo de difusión."
      }
    }
  },
  "CLIPTextEncodeControlnet": {
    "display_name": "CodificarTextoCLIPControlnet",
    "inputs": {
      "clip": {
        "name": "clip"
      },
      "conditioning": {
        "name": "condicionamiento"
      },
      "text": {
        "name": "texto"
      }
    }
  },
  "CLIPTextEncodeFlux": {
    "display_name": "CodificarTextoCLIPFlux",
    "inputs": {
      "clip": {
        "name": "clip"
      },
      "clip_l": {
        "name": "clip_l"
      },
      "guidance": {
        "name": "orientación"
      },
      "t5xxl": {
        "name": "t5xxl"
      }
    }
  },
  "CLIPTextEncodeHiDream": {
    "display_name": "CLIPTextEncodeHiDream",
    "inputs": {
      "clip": {
        "name": "clip"
      },
      "clip_g": {
        "name": "clip_g"
      },
      "clip_l": {
        "name": "clip_l"
      },
      "llama": {
        "name": "llama"
      },
      "t5xxl": {
        "name": "t5xxl"
      }
    }
  },
  "CLIPTextEncodeHunyuanDiT": {
    "display_name": "CodificarTextoCLIPHunyuanDiT",
    "inputs": {
      "bert": {
        "name": "bert"
      },
      "clip": {
        "name": "clip"
      },
      "mt5xl": {
        "name": "mt5xl"
      }
    }
  },
  "CLIPTextEncodeLumina2": {
    "description": "Codifica un mensaje del sistema y un mensaje del usuario utilizando un modelo CLIP en un embedding que se puede usar para guiar el modelo de difusión hacia la generación de imágenes específicas.",
    "display_name": "CLIP Text Encode para Lumina2",
    "inputs": {
      "clip": {
        "name": "clip",
        "tooltip": "El modelo CLIP utilizado para codificar el texto."
      },
      "system_prompt": {
        "name": "system_prompt",
        "tooltip": "Lumina2 proporciona dos tipos de mensajes del sistema: Superior: Eres un asistente diseñado para generar imágenes superiores con el grado superior de alineación imagen-texto basado en mensajes textuales o mensajes del usuario. Alineación: Eres un asistente diseñado para generar imágenes de alta calidad con el mayor grado de alineación imagen-texto basado en mensajes textuales."
      },
      "user_prompt": {
        "name": "user_prompt",
        "tooltip": "El texto a codificar."
      }
    },
    "outputs": {
      "0": {
        "tooltip": "Una condición que contiene el texto incrustado utilizado para guiar el modelo de difusión."
      }
    }
  },
  "CLIPTextEncodePixArtAlpha": {
    "description": "Codifica el texto y establece la condición de resolución para PixArt Alpha. No se aplica a PixArt Sigma.",
    "display_name": "CLIPTextEncodePixArtAlpha",
    "inputs": {
      "clip": {
        "name": "clip"
      },
      "height": {
        "name": "height"
      },
      "text": {
        "name": "text"
      },
      "width": {
        "name": "width"
      }
    }
  },
  "CLIPTextEncodeSD3": {
    "display_name": "CLIPTextEncodeSD3",
    "inputs": {
      "clip": {
        "name": "clip"
      },
      "clip_g": {
        "name": "clip_g"
      },
      "clip_l": {
        "name": "clip_l"
      },
      "empty_padding": {
        "name": "empty_padding"
      },
      "t5xxl": {
        "name": "t5xxl"
      }
    }
  },
  "CLIPTextEncodeSDXL": {
    "display_name": "CLIPTextEncodeSDXL",
    "inputs": {
      "clip": {
        "name": "clip"
      },
      "crop_h": {
        "name": "crop_h"
      },
      "crop_w": {
        "name": "crop_w"
      },
      "height": {
        "name": "height"
      },
      "target_height": {
        "name": "target_height"
      },
      "target_width": {
        "name": "target_width"
      },
      "text_g": {
        "name": "text_g"
      },
      "text_l": {
        "name": "text_l"
      },
      "width": {
        "name": "width"
      }
    }
  },
  "CLIPTextEncodeSDXLRefiner": {
    "display_name": "CLIPTextEncodeSDXLRefiner",
    "inputs": {
      "ascore": {
        "name": "ascore"
      },
      "clip": {
        "name": "clip"
      },
      "height": {
        "name": "height"
      },
      "text": {
        "name": "text"
      },
      "width": {
        "name": "width"
      }
    }
  },
  "CLIPVisionEncode": {
    "display_name": "CLIP Vision Encode",
    "inputs": {
      "clip_vision": {
        "name": "clip_vision"
      },
      "crop": {
        "name": "crop"
      },
      "image": {
        "name": "image"
      }
    }
  },
  "CLIPVisionLoader": {
    "display_name": "Cargar CLIP Vision",
    "inputs": {
      "clip_name": {
        "name": "clip_name"
      }
    }
  },
  "Canny": {
    "display_name": "Canny",
    "inputs": {
      "high_threshold": {
        "name": "umbral_alto"
      },
      "image": {
        "name": "imagen"
      },
      "low_threshold": {
        "name": "umbral_bajo"
      }
    }
  },
  "CheckpointLoader": {
    "display_name": "Cargar Punto de Control Con Configuración (OBSOLETO)",
    "inputs": {
      "ckpt_name": {
        "name": "nombre_ckpt"
      },
      "config_name": {
        "name": "nombre_configuración"
      }
    }
  },
  "CheckpointLoaderSimple": {
    "description": "Carga un punto de control del modelo de difusión, los modelos de difusión se utilizan para desruidar latentes.",
    "display_name": "Cargar Punto de Control",
    "inputs": {
      "ckpt_name": {
        "name": "nombre_ckpt",
        "tooltip": "El nombre del punto de control (modelo) a cargar."
      }
    },
    "outputs": {
      "0": {
        "tooltip": "El modelo utilizado para desruidar latentes."
      },
      "1": {
        "tooltip": "El modelo CLIP utilizado para codificar textos de prompts."
      },
      "2": {
        "tooltip": "El modelo VAE utilizado para codificar y decodificar imágenes a y desde el espacio latente."
      }
    }
  },
  "CheckpointSave": {
    "display_name": "Guardar Punto de Control",
    "inputs": {
      "clip": {
        "name": "clip"
      },
      "filename_prefix": {
        "name": "prefijo_nombre_archivo"
      },
      "model": {
        "name": "modelo"
      },
      "vae": {
        "name": "vae"
      }
    }
  },
  "CombineHooks2": {
    "display_name": "Combinar Hooks [2]",
    "inputs": {
      "hooks_A": {
        "name": "hooks_A"
      },
      "hooks_B": {
        "name": "hooks_B"
      }
    }
  },
  "CombineHooks4": {
    "display_name": "Combine Hooks [4]",
    "inputs": {
      "hooks_A": {
        "name": "hooks_A"
      },
      "hooks_B": {
        "name": "hooks_B"
      },
      "hooks_C": {
        "name": "hooks_C"
      },
      "hooks_D": {
        "name": "hooks_D"
      }
    }
  },
  "CombineHooks8": {
    "display_name": "Combine Hooks [8]",
    "inputs": {
      "hooks_A": {
        "name": "hooks_A"
      },
      "hooks_B": {
        "name": "hooks_B"
      },
      "hooks_C": {
        "name": "hooks_C"
      },
      "hooks_D": {
        "name": "hooks_D"
      },
      "hooks_E": {
        "name": "hooks_E"
      },
      "hooks_F": {
        "name": "hooks_F"
      },
      "hooks_G": {
        "name": "hooks_G"
      },
      "hooks_H": {
        "name": "hooks_H"
      }
    }
  },
  "ConditioningAverage": {
    "display_name": "Promedio de Acondicionamiento",
    "inputs": {
      "conditioning_from": {
        "name": "acondicionamiento_de"
      },
      "conditioning_to": {
        "name": "acondicionamiento_a"
      },
      "conditioning_to_strength": {
        "name": "fuerza_de_acondicionamiento_a"
      }
    }
  },
  "ConditioningCombine": {
    "display_name": "Acondicionamiento (Combinar)",
    "inputs": {
      "conditioning_1": {
        "name": "acondicionamiento_1"
      },
      "conditioning_2": {
        "name": "acondicionamiento_2"
      }
    }
  },
  "ConditioningConcat": {
    "display_name": "Acondicionamiento (Concatenar)",
    "inputs": {
      "conditioning_from": {
        "name": "acondicionamiento_de"
      },
      "conditioning_to": {
        "name": "acondicionamiento_a"
      }
    }
  },
  "ConditioningSetArea": {
    "display_name": "Acondicionamiento (Establecer Área)",
    "inputs": {
      "conditioning": {
        "name": "acondicionamiento"
      },
      "height": {
        "name": "alto"
      },
      "strength": {
        "name": "fuerza"
      },
      "width": {
        "name": "ancho"
      },
      "x": {
        "name": "x"
      },
      "y": {
        "name": "y"
      }
    }
  },
  "ConditioningSetAreaPercentage": {
    "display_name": "Acondicionamiento (Establecer Área con Porcentaje)",
    "inputs": {
      "conditioning": {
        "name": "acondicionamiento"
      },
      "height": {
        "name": "alto"
      },
      "strength": {
        "name": "fuerza"
      },
      "width": {
        "name": "ancho"
      },
      "x": {
        "name": "x"
      },
      "y": {
        "name": "y"
      }
    }
  },
  "ConditioningSetAreaPercentageVideo": {
    "display_name": "AcondicionamientoEstablecerAreaPorcentajeVideo",
    "inputs": {
      "conditioning": {
        "name": "acondicionamiento"
      },
      "height": {
        "name": "alto"
      },
      "strength": {
        "name": "fuerza"
      },
      "temporal": {
        "name": "temporal"
      },
      "width": {
        "name": "ancho"
      },
      "x": {
        "name": "x"
      },
      "y": {
        "name": "y"
      },
      "z": {
        "name": "z"
      }
    }
  },
  "ConditioningSetAreaStrength": {
    "display_name": "AcondicionamientoEstablecerFuerzaArea",
    "inputs": {
      "conditioning": {
        "name": "acondicionamiento"
      },
      "strength": {
        "name": "fuerza"
      }
    }
  },
  "ConditioningSetDefaultCombine": {
    "display_name": "Cond Establecer Combinación Predeterminada",
    "inputs": {
      "cond": {
        "name": "cond"
      },
      "cond_DEFAULT": {
        "name": "cond_DEFAULT"
      },
      "hooks": {
        "name": "hooks"
      }
    }
  },
  "ConditioningSetMask": {
    "display_name": "Acondicionamiento (Establecer Máscara)",
    "inputs": {
      "conditioning": {
        "name": "acondicionamiento"
      },
      "mask": {
        "name": "máscara"
      },
      "set_cond_area": {
        "name": "establecer_area_cond"
      },
      "strength": {
        "name": "fuerza"
      }
    }
  },
  "ConditioningSetProperties": {
    "display_name": "Establecer Propiedades Cond",
    "inputs": {
      "cond_NEW": {
        "name": "cond_NEW"
      },
      "hooks": {
        "name": "ganchos"
      },
      "mask": {
        "name": "máscara"
      },
      "set_cond_area": {
        "name": "establecer_area_cond"
      },
      "strength": {
        "name": "fuerza"
      },
      "timesteps": {
        "name": "pasos_de_tiempo"
      }
    }
  },
  "ConditioningSetPropertiesAndCombine": {
    "display_name": "Establecer Propiedades Cond Combinar",
    "inputs": {
      "cond": {
        "name": "cond"
      },
      "cond_NEW": {
        "name": "cond_NEW"
      },
      "hooks": {
        "name": "ganchos"
      },
      "mask": {
        "name": "máscara"
      },
      "set_cond_area": {
        "name": "establecer_area_cond"
      },
      "strength": {
        "name": "fuerza"
      },
      "timesteps": {
        "name": "pasos_de_tiempo"
      }
    }
  },
  "ConditioningSetTimestepRange": {
    "display_name": "Establecer Rango de Pasos de Tiempo de Acondicionamiento",
    "inputs": {
      "conditioning": {
        "name": "acondicionamiento"
      },
      "end": {
        "name": "fin"
      },
      "start": {
        "name": "inicio"
      }
    }
  },
  "ConditioningStableAudio": {
    "display_name": "Acondicionamiento Audio Estable",
    "inputs": {
      "negative": {
        "name": "negativo"
      },
      "positive": {
        "name": "positivo"
      },
      "seconds_start": {
        "name": "segundos_inicio"
      },
      "seconds_total": {
        "name": "segundos_total"
      }
    },
    "outputs": {
      "0": {
        "name": "positivo"
      },
      "1": {
        "name": "negativo"
      }
    }
  },
  "ConditioningTimestepsRange": {
    "display_name": "Rango de Pasos de Tiempo",
    "inputs": {
      "end_percent": {
        "name": "porcentaje_fin"
      },
      "start_percent": {
        "name": "porcentaje_inicio"
      }
    },
    "outputs": {
      "1": {
        "name": "ANTES_DE_RANGO"
      },
      "2": {
        "name": "DESPUÉS_DE_RANGO"
      }
    }
  },
  "ConditioningZeroOut": {
    "display_name": "Acondicionamiento Cero",
    "inputs": {
      "conditioning": {
        "name": "acondicionamiento"
      }
    }
  },
  "ControlNetApply": {
    "display_name": "Aplicar ControlNet (ANTIGUO)",
    "inputs": {
      "conditioning": {
        "name": "acondicionamiento"
      },
      "control_net": {
        "name": "control_net"
      },
      "image": {
        "name": "imagen"
      },
      "strength": {
        "name": "fuerza"
      }
    }
  },
  "ControlNetApplyAdvanced": {
    "display_name": "Aplicar ControlNet",
    "inputs": {
      "control_net": {
        "name": "control_net"
      },
      "end_percent": {
        "name": "porcentaje_fin"
      },
      "image": {
        "name": "imagen"
      },
      "negative": {
        "name": "negativo"
      },
      "positive": {
        "name": "positivo"
      },
      "start_percent": {
        "name": "porcentaje_inicio"
      },
      "strength": {
        "name": "fuerza"
      },
      "vae": {
        "name": "vae"
      }
    },
    "outputs": {
      "0": {
        "name": "positivo"
      },
      "1": {
        "name": "negativo"
      }
    }
  },
  "ControlNetApplySD3": {
    "display_name": "Aplicar Controlnet con VAE",
    "inputs": {
      "control_net": {
        "name": "control_net"
      },
      "end_percent": {
        "name": "porcentaje_final"
      },
      "image": {
        "name": "imagen"
      },
      "negative": {
        "name": "negativo"
      },
      "positive": {
        "name": "positivo"
      },
      "start_percent": {
        "name": "porcentaje_inicio"
      },
      "strength": {
        "name": "fuerza"
      },
      "vae": {
        "name": "vae"
      }
    },
    "outputs": {
      "0": {
        "name": "positivo"
      },
      "1": {
        "name": "negativo"
      }
    }
  },
  "ControlNetInpaintingAliMamaApply": {
    "display_name": "ControlNetInpaintingAliMamaApply",
    "inputs": {
      "control_net": {
        "name": "control_net"
      },
      "end_percent": {
        "name": "porcentaje_final"
      },
      "image": {
        "name": "imagen"
      },
      "mask": {
        "name": "máscara"
      },
      "negative": {
        "name": "negativo"
      },
      "positive": {
        "name": "positivo"
      },
      "start_percent": {
        "name": "porcentaje_inicio"
      },
      "strength": {
        "name": "fuerza"
      },
      "vae": {
        "name": "vae"
      }
    },
    "outputs": {
      "0": {
        "name": "positivo"
      },
      "1": {
        "name": "negativo"
      }
    }
  },
  "ControlNetLoader": {
    "display_name": "Cargar Modelo ControlNet",
    "inputs": {
      "control_net_name": {
        "name": "nombre_control_net"
      }
    }
  },
  "CosmosImageToVideoLatent": {
    "display_name": "CosmosImageToVideoLatent",
    "inputs": {
      "batch_size": {
        "name": "tamaño_lote"
      },
      "end_image": {
        "name": "imagen_final"
      },
      "height": {
        "name": "altura"
      },
      "length": {
        "name": "longitud"
      },
      "start_image": {
        "name": "imagen_inicio"
      },
      "vae": {
        "name": "vae"
      },
      "width": {
        "name": "ancho"
      }
    }
  },
  "CreateHookKeyframe": {
    "display_name": "Crear Hook Keyframe",
    "inputs": {
      "prev_hook_kf": {
        "name": "prev_hook_kf"
      },
      "start_percent": {
        "name": "porcentaje_inicio"
      },
      "strength_mult": {
        "name": "multiplicador_fuerza"
      }
    },
    "outputs": {
      "0": {
        "name": "HOOK_KF"
      }
    }
  },
  "CreateHookKeyframesFromFloats": {
    "display_name": "Crear Hook Keyframes Desde Flotantes",
    "inputs": {
      "end_percent": {
        "name": "porcentaje_final"
      },
      "floats_strength": {
        "name": "fuerza_flotantes"
      },
      "prev_hook_kf": {
        "name": "prev_hook_kf"
      },
      "print_keyframes": {
        "name": "imprimir_keyframes"
      },
      "start_percent": {
        "name": "porcentaje_inicio"
      }
    },
    "outputs": {
      "0": {
        "name": "HOOK_KF"
      }
    }
  },
  "CreateHookKeyframesInterpolated": {
    "display_name": "Crear Hook Keyframes Interp.",
    "inputs": {
      "end_percent": {
        "name": "end_percent"
      },
      "interpolation": {
        "name": "interpolación"
      },
      "keyframes_count": {
        "name": "keyframes_count"
      },
      "prev_hook_kf": {
        "name": "prev_hook_kf"
      },
      "print_keyframes": {
        "name": "print_keyframes"
      },
      "start_percent": {
        "name": "start_percent"
      },
      "strength_end": {
        "name": "strength_end"
      },
      "strength_start": {
        "name": "strength_start"
      }
    },
    "outputs": {
      "0": {
        "name": "HOOK_KF"
      }
    }
  },
  "CreateHookLora": {
    "display_name": "Crear Hook LoRA",
    "inputs": {
      "lora_name": {
        "name": "lora_name"
      },
      "prev_hooks": {
        "name": "prev_hooks"
      },
      "strength_clip": {
        "name": "strength_clip"
      },
      "strength_model": {
        "name": "strength_model"
      }
    }
  },
  "CreateHookLoraModelOnly": {
    "display_name": "Crear Hook LoRA (MO)",
    "inputs": {
      "lora_name": {
        "name": "lora_name"
      },
      "prev_hooks": {
        "name": "prev_hooks"
      },
      "strength_model": {
        "name": "strength_model"
      }
    }
  },
  "CreateHookModelAsLora": {
    "display_name": "Crear Hook Model como LoRA",
    "inputs": {
      "ckpt_name": {
        "name": "ckpt_name"
      },
      "prev_hooks": {
        "name": "prev_hooks"
      },
      "strength_clip": {
        "name": "strength_clip"
      },
      "strength_model": {
        "name": "strength_model"
      }
    }
  },
  "CreateHookModelAsLoraModelOnly": {
    "display_name": "Crear Hook Model como LoRA (MO)",
    "inputs": {
      "ckpt_name": {
        "name": "ckpt_name"
      },
      "prev_hooks": {
        "name": "prev_hooks"
      },
      "strength_model": {
        "name": "strength_model"
      }
    }
  },
  "CreateVideo": {
    "description": "Crea un video a partir de imágenes.",
    "display_name": "Crear video",
    "inputs": {
      "audio": {
        "name": "audio",
        "tooltip": "El audio que se añadirá al video."
      },
      "fps": {
        "name": "fps"
      },
      "images": {
        "name": "imágenes",
        "tooltip": "Las imágenes de las que se creará el video."
      }
    }
  },
  "CropMask": {
    "display_name": "CropMask",
    "inputs": {
      "height": {
        "name": "altura"
      },
      "mask": {
        "name": "máscara"
      },
      "width": {
        "name": "ancho"
      },
      "x": {
        "name": "x"
      },
      "y": {
        "name": "y"
      }
    }
  },
  "DiffControlNetLoader": {
    "display_name": "Cargar Modelo ControlNet (diff)",
    "inputs": {
      "control_net_name": {
        "name": "control_net_name"
      },
      "model": {
        "name": "modelo"
      }
    }
  },
  "DifferentialDiffusion": {
    "display_name": "Difusión Diferencial",
    "inputs": {
      "model": {
        "name": "modelo"
      }
    }
  },
  "DiffusersLoader": {
    "display_name": "Cargador de Difusores",
    "inputs": {
      "model_path": {
        "name": "ruta_del_modelo"
      }
    }
  },
  "DisableNoise": {
    "display_name": "DesactivarRuido"
  },
  "DualCFGGuider": {
    "display_name": "Guía Dual CFG",
    "inputs": {
      "cfg_cond2_negative": {
        "name": "cfg_cond2_negativo"
      },
      "cfg_conds": {
        "name": "cfg_conds"
      },
      "cond1": {
        "name": "cond1"
      },
      "cond2": {
        "name": "cond2"
      },
      "model": {
        "name": "modelo"
      },
      "negative": {
        "name": "negativo"
      }
    }
  },
  "DualCLIPLoader": {
    "description": "[Recetas]\n\nsdxl: clip-l, clip-g\nsd3: clip-l, clip-g / clip-l, t5 / clip-g, t5\nflux: clip-l, t5",
    "display_name": "DualCLIPLoader",
    "inputs": {
      "clip_name1": {
        "name": "clip_name1"
      },
      "clip_name2": {
        "name": "clip_name2"
      },
      "device": {
        "name": "dispositivo"
      },
      "type": {
        "name": "tipo"
      }
    }
  },
  "EmptyCosmosLatentVideo": {
    "display_name": "EmptyCosmosLatentVideo",
    "inputs": {
      "batch_size": {
        "name": "tamaño_del_lote"
      },
      "height": {
        "name": "altura"
      },
      "length": {
        "name": "longitud"
      },
      "width": {
        "name": "ancho"
      }
    }
  },
  "EmptyHunyuanLatentVideo": {
    "display_name": "EmptyHunyuanLatentVideo",
    "inputs": {
      "batch_size": {
        "name": "tamaño_del_lote"
      },
      "height": {
        "name": "altura"
      },
      "length": {
        "name": "longitud"
      },
      "width": {
        "name": "ancho"
      }
    }
  },
  "EmptyImage": {
    "display_name": "EmptyImage",
    "inputs": {
      "batch_size": {
        "name": "tamaño_del_lote"
      },
      "color": {
        "name": "color"
      },
      "height": {
        "name": "altura"
      },
      "width": {
        "name": "ancho"
      }
    }
  },
  "EmptyLTXVLatentVideo": {
    "display_name": "EmptyLTXVLatentVideo",
    "inputs": {
      "batch_size": {
        "name": "tamaño_del_lote"
      },
      "height": {
        "name": "altura"
      },
      "length": {
        "name": "longitud"
      },
      "width": {
        "name": "ancho"
      }
    }
  },
  "EmptyLatentAudio": {
    "display_name": "EmptyLatentAudio",
    "inputs": {
      "batch_size": {
        "name": "tamaño_del_lote",
        "tooltip": "El número de imágenes latentes en el lote."
      },
      "seconds": {
        "name": "segundos"
      }
    }
  },
  "EmptyLatentHunyuan3Dv2": {
    "display_name": "EmptyLatentHunyuan3Dv2",
    "inputs": {
      "batch_size": {
        "name": "tamaño_del_lote",
        "tooltip": "El número de imágenes latentes en el lote."
      },
      "resolution": {
        "name": "resolución"
      }
    }
  },
  "EmptyLatentImage": {
    "description": "Crea un nuevo lote de imágenes latentes vacías para ser desruidadas mediante muestreo.",
    "display_name": "Imagen Latente Vacía",
    "inputs": {
      "batch_size": {
        "name": "tamaño_del_lote",
        "tooltip": "El número de imágenes latentes en el lote."
      },
      "height": {
        "name": "altura",
        "tooltip": "La altura de las imágenes latentes en píxeles."
      },
      "width": {
        "name": "ancho",
        "tooltip": "El ancho de las imágenes latentes en píxeles."
      }
    },
    "outputs": {
      "0": {
        "tooltip": "El lote de imágenes latentes vacías."
      }
    }
  },
  "EmptyMochiLatentVideo": {
    "display_name": "EmptyMochiLatentVideo",
    "inputs": {
      "batch_size": {
        "name": "tamaño_del_lote"
      },
      "height": {
        "name": "altura"
      },
      "length": {
        "name": "longitud"
      },
      "width": {
        "name": "ancho"
      }
    }
  },
  "EmptySD3LatentImage": {
    "display_name": "EmptySD3LatentImage",
    "inputs": {
      "batch_size": {
        "name": "tamaño_del_lote"
      },
      "height": {
        "name": "altura"
      },
      "width": {
        "name": "ancho"
      }
    }
  },
  "ExponentialScheduler": {
    "display_name": "ExponentialScheduler",
    "inputs": {
      "sigma_max": {
        "name": "sigma_max"
      },
      "sigma_min": {
        "name": "sigma_min"
      },
      "steps": {
        "name": "pasos"
      }
    }
  },
  "ExtendIntermediateSigmas": {
    "display_name": "ExtendIntermediateSigmas",
    "inputs": {
      "end_at_sigma": {
        "name": "terminar_en_sigma"
      },
      "sigmas": {
        "name": "sigmas"
      },
      "spacing": {
        "name": "espaciado"
      },
      "start_at_sigma": {
        "name": "comenzar_en_sigma"
      },
      "steps": {
        "name": "pasos"
      }
    }
  },
  "FeatherMask": {
    "display_name": "FeatherMask",
    "inputs": {
      "bottom": {
        "name": "abajo"
      },
      "left": {
        "name": "izquierda"
      },
      "mask": {
        "name": "máscara"
      },
      "right": {
        "name": "derecha"
      },
      "top": {
        "name": "arriba"
      }
    }
  },
  "FlipSigmas": {
    "display_name": "FlipSigmas",
    "inputs": {
      "sigmas": {
        "name": "sigmas"
      }
    }
  },
  "FluxDisableGuidance": {
    "description": "Este nodo desactiva completamente la guía incrustada en Flux y modelos similares a Flux",
    "display_name": "FluxDisableGuidance",
    "inputs": {
      "conditioning": {
        "name": "acondicionamiento"
      }
    }
  },
  "FluxGuidance": {
    "display_name": "FluxGuidance",
    "inputs": {
      "conditioning": {
        "name": "acondicionamiento"
      },
      "guidance": {
        "name": "guía"
      }
    }
  },
  "FluxProCannyNode": {
    "description": "Genera una imagen usando una imagen de control (canny).",
    "display_name": "Flux.1 Imagen de Control Canny",
    "inputs": {
      "canny_high_threshold": {
        "name": "canny_high_threshold",
        "tooltip": "Umbral alto para la detección de bordes Canny; se ignora si skip_processing es True"
      },
      "canny_low_threshold": {
        "name": "canny_low_threshold",
        "tooltip": "Umbral bajo para la detección de bordes Canny; se ignora si skip_processing es True"
      },
      "control_after_generate": {
        "name": "control after generate"
      },
      "control_image": {
        "name": "control_image"
      },
      "guidance": {
        "name": "guidance",
        "tooltip": "Fuerza de la guía para el proceso de generación de la imagen"
      },
      "prompt": {
        "name": "prompt",
        "tooltip": "Prompt para la generación de la imagen"
      },
      "prompt_upsampling": {
        "name": "prompt_upsampling",
        "tooltip": "Indica si se debe realizar upsampling en el prompt. Si está activo, modifica automáticamente el prompt para una generación más creativa, pero los resultados son no deterministas (la misma semilla no producirá exactamente el mismo resultado)."
      },
      "seed": {
        "name": "seed",
        "tooltip": "La semilla aleatoria utilizada para crear el ruido."
      },
      "skip_preprocessing": {
        "name": "skip_preprocessing",
        "tooltip": "Indica si se debe omitir el preprocesamiento; establecer en True si control_image ya está canny-fied, False si es una imagen sin procesar."
      },
      "steps": {
        "name": "steps",
        "tooltip": "Número de pasos para el proceso de generación de la imagen"
      }
    }
  },
  "FluxProDepthNode": {
    "description": "Genera una imagen usando una imagen de control (profundidad).",
    "display_name": "Flux.1 Control de Profundidad de Imagen",
    "inputs": {
      "control_after_generate": {
        "name": "control after generate"
      },
      "control_image": {
        "name": "control_image"
      },
      "guidance": {
        "name": "guidance",
        "tooltip": "Fuerza de la guía para el proceso de generación de imagen"
      },
      "prompt": {
        "name": "prompt",
        "tooltip": "Prompt para la generación de la imagen"
      },
      "prompt_upsampling": {
        "name": "prompt_upsampling",
        "tooltip": "Indica si se realiza upsampling en el prompt. Si está activo, modifica automáticamente el prompt para una generación más creativa, pero los resultados no son deterministas (la misma semilla no producirá exactamente el mismo resultado)."
      },
      "seed": {
        "name": "seed",
        "tooltip": "La semilla aleatoria utilizada para crear el ruido."
      },
      "skip_preprocessing": {
        "name": "skip_preprocessing",
        "tooltip": "Indica si se omite el preprocesamiento; establece en True si control_image ya tiene profundidad, False si es una imagen sin procesar."
      },
      "steps": {
        "name": "steps",
        "tooltip": "Número de pasos para el proceso de generación de imagen"
      }
    }
  },
  "FluxProExpandNode": {
    "description": "Expande la imagen según el prompt.",
    "display_name": "Flux.1 Expandir imagen",
    "inputs": {
      "bottom": {
        "name": "abajo",
        "tooltip": "Número de píxeles a expandir en la parte inferior de la imagen"
      },
      "control_after_generate": {
        "name": "control después de generar"
      },
      "guidance": {
        "name": "guía",
        "tooltip": "Fuerza de la guía para el proceso de generación de imagen"
      },
      "image": {
        "name": "imagen"
      },
      "left": {
        "name": "izquierda",
        "tooltip": "Número de píxeles a expandir en el lado izquierdo de la imagen"
      },
      "prompt": {
        "name": "prompt",
        "tooltip": "Prompt para la generación de la imagen"
      },
      "prompt_upsampling": {
        "name": "reescaleado de prompt",
        "tooltip": "Si se realiza reescaleado en el prompt. Si está activo, modifica automáticamente el prompt para una generación más creativa, pero los resultados son no deterministas (la misma semilla no producirá exactamente el mismo resultado)."
      },
      "right": {
        "name": "derecha",
        "tooltip": "Número de píxeles a expandir en el lado derecho de la imagen"
      },
      "seed": {
        "name": "semilla",
        "tooltip": "La semilla aleatoria utilizada para crear el ruido."
      },
      "steps": {
        "name": "pasos",
        "tooltip": "Número de pasos para el proceso de generación de imagen"
      },
      "top": {
        "name": "arriba",
        "tooltip": "Número de píxeles a expandir en la parte superior de la imagen"
      }
    }
  },
  "FluxProFillNode": {
    "description": "Rellena la imagen según la mask y el prompt.",
    "display_name": "Flux.1 Rellenar Imagen",
    "inputs": {
      "control_after_generate": {
        "name": "controlar después de generar"
      },
      "guidance": {
        "name": "guía",
        "tooltip": "Fuerza de la guía para el proceso de generación de imagen"
      },
      "image": {
        "name": "imagen"
      },
      "mask": {
        "name": "mask"
      },
      "prompt": {
        "name": "prompt",
        "tooltip": "Prompt para la generación de la imagen"
      },
      "prompt_upsampling": {
        "name": "re-muestreo de prompt",
        "tooltip": "Indica si se realiza re-muestreo en el prompt. Si está activo, modifica automáticamente el prompt para una generación más creativa, pero los resultados no son deterministas (la misma semilla no producirá exactamente el mismo resultado)."
      },
      "seed": {
        "name": "semilla",
        "tooltip": "La semilla aleatoria utilizada para crear el ruido."
      },
      "steps": {
        "name": "pasos",
        "tooltip": "Número de pasos para el proceso de generación de imagen"
      }
    }
  },
  "FluxProUltraImageNode": {
    "description": "Genera imágenes usando Flux Pro 1.1 Ultra vía API basado en el prompt y la resolución.",
    "display_name": "Flux 1.1 [pro] Ultra Image",
    "inputs": {
      "aspect_ratio": {
        "name": "aspect_ratio",
        "tooltip": "Relación de aspecto de la imagen; debe estar entre 1:4 y 4:1."
      },
      "control_after_generate": {
        "name": "control after generate"
      },
      "image_prompt": {
        "name": "image_prompt"
      },
      "image_prompt_strength": {
        "name": "image_prompt_strength",
        "tooltip": "Mezcla entre el prompt y el image prompt."
      },
      "prompt": {
        "name": "prompt",
        "tooltip": "Prompt para la generación de la imagen"
      },
      "prompt_upsampling": {
        "name": "prompt_upsampling",
        "tooltip": "Indica si se realiza upsampling en el prompt. Si está activo, modifica automáticamente el prompt para una generación más creativa, pero los resultados son no deterministas (la misma semilla no producirá exactamente el mismo resultado)."
      },
      "raw": {
        "name": "raw",
        "tooltip": "Cuando es Verdadero, genera imágenes menos procesadas y de aspecto más natural."
      },
      "seed": {
        "name": "seed",
        "tooltip": "La semilla aleatoria utilizada para crear el ruido."
      }
    }
  },
  "FreSca": {
    "description": "Aplica un escalado dependiente de la frecuencia a la guía",
    "display_name": "FreSca",
    "inputs": {
      "freq_cutoff": {
        "name": "corte_frecuencia",
        "tooltip": "Número de índices de frecuencia alrededor del centro a considerar como baja frecuencia"
      },
      "model": {
        "name": "modelo"
      },
      "scale_high": {
        "name": "escala_alta",
        "tooltip": "Factor de escala para los componentes de alta frecuencia"
      },
      "scale_low": {
        "name": "escala_baja",
        "tooltip": "Factor de escala para los componentes de baja frecuencia"
      }
    }
  },
  "FreeU": {
    "display_name": "FreeU",
    "inputs": {
      "b1": {
        "name": "b1"
      },
      "b2": {
        "name": "b2"
      },
      "model": {
        "name": "modelo"
      },
      "s1": {
        "name": "s1"
      },
      "s2": {
        "name": "s2"
      }
    }
  },
  "FreeU_V2": {
    "display_name": "FreeU_V2",
    "inputs": {
      "b1": {
        "name": "b1"
      },
      "b2": {
        "name": "b2"
      },
      "model": {
        "name": "modelo"
      },
      "s1": {
        "name": "s1"
      },
      "s2": {
        "name": "s2"
      }
    }
  },
  "GITSScheduler": {
    "display_name": "GITSScheduler",
    "inputs": {
      "coeff": {
        "name": "coef"
      },
      "denoise": {
        "name": "denoise"
      },
      "steps": {
        "name": "pasos"
      }
    }
  },
  "GLIGENLoader": {
    "display_name": "GLIGENLoader",
    "inputs": {
      "gligen_name": {
        "name": "nombre_gligen"
      }
    }
  },
  "GLIGENTextBoxApply": {
    "display_name": "GLIGENTextBoxApply",
    "inputs": {
      "clip": {
        "name": "clip"
      },
      "conditioning_to": {
        "name": "acondicionamiento_a"
      },
      "gligen_textbox_model": {
        "name": "modelo_caja_texto_gligen"
      },
      "height": {
        "name": "altura"
      },
      "text": {
        "name": "texto"
      },
      "width": {
        "name": "ancho"
      },
      "x": {
        "name": "x"
      },
      "y": {
        "name": "y"
      }
    }
  },
  "GetVideoComponents": {
    "description": "Extrae todos los componentes de un video: fotogramas, audio y velocidad de fotogramas.",
    "display_name": "Obtener componentes de video",
    "inputs": {
      "video": {
        "name": "video",
        "tooltip": "El video del que extraer los componentes."
      }
    },
    "outputs": {
      "0": {
        "name": "imágenes"
      },
      "1": {
        "name": "audio"
      },
      "2": {
        "name": "fps"
      }
    }
  },
  "GrowMask": {
    "display_name": "GrowMask",
    "inputs": {
      "expand": {
        "name": "expandir"
      },
      "mask": {
        "name": "máscara"
      },
      "tapered_corners": {
        "name": "esquinas_afiladas"
      }
    }
  },
  "Hunyuan3Dv2Conditioning": {
    "display_name": "Hunyuan3Dv2Conditioning",
    "inputs": {
      "clip_vision_output": {
        "name": "salida_vision_clip"
      }
    },
    "outputs": {
      "0": {
        "name": "positivo"
      },
      "1": {
        "name": "negativo"
      }
    }
  },
  "Hunyuan3Dv2ConditioningMultiView": {
    "display_name": "Hunyuan3Dv2ConditioningMultiView",
    "inputs": {
      "back": {
        "name": "atrás"
      },
      "front": {
        "name": "frente"
      },
      "left": {
        "name": "izquierda"
      },
      "right": {
        "name": "derecha"
      }
    },
    "outputs": {
      "0": {
        "name": "positivo"
      },
      "1": {
        "name": "negativo"
      }
    }
  },
  "HunyuanImageToVideo": {
    "display_name": "HunyuanImageToVideo",
    "inputs": {
      "batch_size": {
        "name": "tamaño_del_lote"
      },
      "guidance_type": {
        "name": "tipo_de_orientación"
      },
      "height": {
        "name": "altura"
      },
      "length": {
        "name": "longitud"
      },
      "positive": {
        "name": "positivo"
      },
      "start_image": {
        "name": "imagen_inicial"
      },
      "vae": {
        "name": "vae"
      },
      "width": {
        "name": "ancho"
      }
    },
    "outputs": {
      "0": {
        "name": "positivo"
      },
      "1": {
        "name": "latente"
      }
    }
  },
  "HyperTile": {
    "display_name": "HyperTile",
    "inputs": {
      "max_depth": {
        "name": "profundidad_máxima"
      },
      "model": {
        "name": "modelo"
      },
      "scale_depth": {
        "name": "escala_de_profundidad"
      },
      "swap_size": {
        "name": "tamaño_de_intercambio"
      },
      "tile_size": {
        "name": "tamaño_de_mosaico"
      }
    }
  },
  "HypernetworkLoader": {
    "display_name": "CargadorHypernetwork",
    "inputs": {
      "hypernetwork_name": {
        "name": "nombre_hypernetwork"
      },
      "model": {
        "name": "modelo"
      },
      "strength": {
        "name": "fuerza"
      }
    }
  },
  "IdeogramV1": {
    "description": "Genera imágenes de forma sincrónica usando el modelo Ideogram V1.\n\nLos enlaces de las imágenes están disponibles por un período limitado; si deseas conservar la imagen, debes descargarla.",
    "display_name": "Ideogram V1",
    "inputs": {
      "aspect_ratio": {
        "name": "aspect_ratio",
        "tooltip": "La relación de aspecto para la generación de la imagen."
      },
      "control_after_generate": {
        "name": "control after generate"
      },
      "magic_prompt_option": {
        "name": "magic_prompt_option",
        "tooltip": "Determina si se debe usar MagicPrompt en la generación"
      },
      "negative_prompt": {
        "name": "negative_prompt",
        "tooltip": "Descripción de lo que se debe excluir de la imagen"
      },
      "num_images": {
        "name": "num_images"
      },
      "prompt": {
        "name": "prompt",
        "tooltip": "Prompt para la generación de la imagen"
      },
      "seed": {
        "name": "seed"
      },
      "turbo": {
        "name": "turbo",
        "tooltip": "Indica si se debe usar el modo turbo (generación más rápida, potencialmente menor calidad)"
      }
    }
  },
  "IdeogramV2": {
    "description": "Genera imágenes de forma sincrónica usando el modelo Ideogram V2.\n\nLos enlaces de las imágenes están disponibles por un período limitado; si deseas conservar la imagen, debes descargarla.",
    "display_name": "Ideogram V2",
    "inputs": {
      "aspect_ratio": {
        "name": "aspect_ratio",
        "tooltip": "La relación de aspecto para la generación de la imagen. Se ignora si la resolución no está configurada en AUTO."
      },
      "control_after_generate": {
        "name": "control after generate"
      },
      "magic_prompt_option": {
        "name": "magic_prompt_option",
        "tooltip": "Determina si se debe usar MagicPrompt en la generación"
      },
      "negative_prompt": {
        "name": "negative_prompt",
        "tooltip": "Descripción de lo que se debe excluir de la imagen"
      },
      "num_images": {
        "name": "num_images"
      },
      "prompt": {
        "name": "prompt",
        "tooltip": "Prompt para la generación de la imagen"
      },
      "resolution": {
        "name": "resolution",
        "tooltip": "La resolución para la generación de la imagen. Si no está configurada en AUTO, esto sobrescribe el ajuste de aspect_ratio."
      },
      "seed": {
        "name": "seed"
      },
      "style_type": {
        "name": "style_type",
        "tooltip": "Tipo de estilo para la generación (solo V2)"
      },
      "turbo": {
        "name": "turbo",
        "tooltip": "Indica si se debe usar el modo turbo (generación más rápida, potencialmente menor calidad)"
      }
    }
  },
  "IdeogramV3": {
    "description": "Genera imágenes de forma síncrona usando el modelo Ideogram V3.\n\nAdmite tanto la generación regular de imágenes a partir de indicaciones de texto como la edición de imágenes con mask.\nLos enlaces de las imágenes están disponibles por un período limitado; si deseas conservar la imagen, debes descargarla.",
    "display_name": "Ideogram V3",
    "inputs": {
      "aspect_ratio": {
        "name": "aspect_ratio",
        "tooltip": "La relación de aspecto para la generación de imagen. Se ignora si la resolución no está en Automático."
      },
      "control_after_generate": {
        "name": "control after generate"
      },
      "image": {
        "name": "image",
        "tooltip": "Imagen de referencia opcional para la edición de imagen."
      },
      "magic_prompt_option": {
        "name": "magic_prompt_option",
        "tooltip": "Determina si MagicPrompt debe usarse en la generación"
      },
      "mask": {
        "name": "mask",
        "tooltip": "Mask opcional para inpainting (las áreas blancas serán reemplazadas)"
      },
      "num_images": {
        "name": "num_images"
      },
      "prompt": {
        "name": "prompt",
        "tooltip": "Indicación para la generación o edición de la imagen"
      },
      "rendering_speed": {
        "name": "rendering_speed",
        "tooltip": "Controla el equilibrio entre la velocidad de generación y la calidad"
      },
      "resolution": {
        "name": "resolution",
        "tooltip": "La resolución para la generación de imagen. Si no está en Automático, esto sobrescribe la configuración de aspect_ratio."
      },
      "seed": {
        "name": "seed"
      }
    }
  },
  "ImageBatch": {
    "display_name": "Lote de Imágenes",
    "inputs": {
      "image1": {
        "name": "imagen1"
      },
      "image2": {
        "name": "imagen2"
      }
    }
  },
  "ImageBlend": {
    "display_name": "Mezcla de Imágenes",
    "inputs": {
      "blend_factor": {
        "name": "factor_de_mezcla"
      },
      "blend_mode": {
        "name": "modo_de_mezcla"
      },
      "image1": {
        "name": "imagen1"
      },
      "image2": {
        "name": "imagen2"
      }
    }
  },
  "ImageBlur": {
    "display_name": "Desenfoque de Imagen",
    "inputs": {
      "blur_radius": {
        "name": "radio_de_desenfoque"
      },
      "image": {
        "name": "imagen"
      },
      "sigma": {
        "name": "sigma"
      }
    }
  },
  "ImageColorToMask": {
    "display_name": "ImageColorToMask",
    "inputs": {
      "color": {
        "name": "color"
      },
      "image": {
        "name": "imagen"
      }
    }
  },
  "ImageCompositeMasked": {
    "display_name": "ImageCompositeMasked",
    "inputs": {
      "destination": {
        "name": "destino"
      },
      "mask": {
        "name": "máscara"
      },
      "resize_source": {
        "name": "redimensionar_fuente"
      },
      "source": {
        "name": "fuente"
      },
      "x": {
        "name": "x"
      },
      "y": {
        "name": "y"
      }
    }
  },
  "ImageCrop": {
    "display_name": "Recorte de Imagen",
    "inputs": {
      "height": {
        "name": "altura"
      },
      "image": {
        "name": "imagen"
      },
      "width": {
        "name": "ancho"
      },
      "x": {
        "name": "x"
      },
      "y": {
        "name": "y"
      }
    }
  },
  "ImageFromBatch": {
    "display_name": "ImagenDeLote",
    "inputs": {
      "batch_index": {
        "name": "indice_lote"
      },
      "image": {
        "name": "imagen"
      },
      "length": {
        "name": "longitud"
      }
    }
  },
  "ImageInvert": {
    "display_name": "Invertir Imagen",
    "inputs": {
      "image": {
        "name": "imagen"
      }
    }
  },
  "ImageOnlyCheckpointLoader": {
    "display_name": "Cargador de Puntos de Control Solo de Imagen (modelo img2vid)",
    "inputs": {
      "ckpt_name": {
        "name": "nombre_ckpt"
      }
    }
  },
  "ImageOnlyCheckpointSave": {
    "display_name": "GuardarPuntoDeControlSoloDeImagen",
    "inputs": {
      "clip_vision": {
        "name": "clip_vision"
      },
      "filename_prefix": {
        "name": "prefijo_nombre_archivo"
      },
      "model": {
        "name": "modelo"
      },
      "vae": {
        "name": "vae"
      }
    }
  },
  "ImagePadForOutpaint": {
    "display_name": "Rellenar Imagen para Pintar Fuera",
    "inputs": {
      "bottom": {
        "name": "abajo"
      },
      "feathering": {
        "name": "difuminado"
      },
      "image": {
        "name": "imagen"
      },
      "left": {
        "name": "izquierda"
      },
      "right": {
        "name": "derecha"
      },
      "top": {
        "name": "arriba"
      }
    }
  },
  "ImageQuantize": {
    "display_name": "Cuantizar Imagen",
    "inputs": {
      "colors": {
        "name": "colores"
      },
      "dither": {
        "name": "difuminado"
      },
      "image": {
        "name": "imagen"
      }
    }
  },
  "ImageRGBToYUV": {
    "display_name": "ImageRGBToYUV",
    "inputs": {
      "image": {
        "name": "imagen"
      }
    },
    "outputs": {
      "0": {
        "name": "Y"
      },
      "1": {
        "name": "U"
      },
      "2": {
        "name": "V"
      }
    }
  },
  "ImageScale": {
    "display_name": "Ampliar Imagen",
    "inputs": {
      "crop": {
        "name": "recorte"
      },
      "height": {
        "name": "altura"
      },
      "image": {
        "name": "imagen"
      },
      "upscale_method": {
        "name": "metodo_ampliacion"
      },
      "width": {
        "name": "ancho"
      }
    }
  },
  "ImageScaleBy": {
    "display_name": "Ampliar Imagen Por",
    "inputs": {
      "image": {
        "name": "imagen"
      },
      "scale_by": {
        "name": "escalar_por"
      },
      "upscale_method": {
        "name": "metodo_ampliacion"
      }
    }
  },
  "ImageScaleToTotalPixels": {
    "display_name": "Escalar Imagen a Total de Pixeles",
    "inputs": {
      "image": {
        "name": "imagen"
      },
      "megapixels": {
        "name": "megapixeles"
      },
      "upscale_method": {
        "name": "metodo_ampliacion"
      }
    }
  },
  "ImageSharpen": {
    "display_name": "Afinar Imagen",
    "inputs": {
      "alpha": {
        "name": "alfa"
      },
      "image": {
        "name": "imagen"
      },
      "sharpen_radius": {
        "name": "radio_afinado"
      },
      "sigma": {
        "name": "sigma"
      }
    }
  },
  "ImageToMask": {
    "display_name": "Convertir Imagen a Máscara",
    "inputs": {
      "channel": {
        "name": "canal"
      },
      "image": {
        "name": "imagen"
      }
    }
  },
  "ImageUpscaleWithModel": {
    "display_name": "Ampliar Imagen (usando Modelo)",
    "inputs": {
      "image": {
        "name": "imagen"
      },
      "upscale_model": {
        "name": "modelo_ampliacion"
      }
    }
  },
  "ImageYUVToRGB": {
    "display_name": "ImageYUVToRGB",
    "inputs": {
      "U": {
        "name": "U"
      },
      "V": {
        "name": "V"
      },
      "Y": {
        "name": "Y"
      }
    }
  },
  "InpaintModelConditioning": {
    "display_name": "InpaintModelConditioning",
    "inputs": {
      "mask": {
        "name": "máscara"
      },
      "negative": {
        "name": "negativo"
      },
      "noise_mask": {
        "name": "máscara de ruido",
        "tooltip": "Agrega una máscara de ruido al latente para que el muestreo solo ocurra dentro de la máscara. Puede mejorar los resultados o romper completamente las cosas dependiendo del modelo."
      },
      "pixels": {
        "name": "píxeles"
      },
      "positive": {
        "name": "positivo"
      },
      "vae": {
        "name": "vae"
      }
    },
    "outputs": {
      "0": {
        "name": "positivo"
      },
      "1": {
        "name": "negativo"
      },
      "2": {
        "name": "latente"
      }
    }
  },
  "InstructPixToPixConditioning": {
    "display_name": "InstructPixToPixConditioning",
    "inputs": {
      "negative": {
        "name": "negativo"
      },
      "pixels": {
        "name": "píxeles"
      },
      "positive": {
        "name": "positivo"
      },
      "vae": {
        "name": "vae"
      }
    },
    "outputs": {
      "0": {
        "name": "positivo"
      },
      "1": {
        "name": "negativo"
      },
      "2": {
        "name": "latente"
      }
    }
  },
  "InvertMask": {
    "display_name": "InvertirMáscara",
    "inputs": {
      "mask": {
        "name": "máscara"
      }
    }
  },
  "JoinImageWithAlpha": {
    "display_name": "Unir Imagen con Alfa",
    "inputs": {
      "alpha": {
        "name": "alfa"
      },
      "image": {
        "name": "imagen"
      }
    }
  },
  "KSampler": {
    "description": "Utiliza el modelo proporcionado, el acondicionamiento positivo y negativo para deshacer el ruido de la imagen latente.",
    "display_name": "KSampler",
    "inputs": {
      "cfg": {
        "name": "cfg",
        "tooltip": "La escala de Orientación Libre de Clasificador equilibra la creatividad y la adherencia al indicador. Los valores más altos resultan en imágenes que se asemejan más al indicador, sin embargo, valores demasiado altos afectarán negativamente la calidad."
      },
      "control_after_generate": {
        "name": "control después de generar"
      },
      "denoise": {
        "name": "deshacer_ruido",
        "tooltip": "La cantidad de eliminación de ruido aplicada, los valores más bajos mantendrán la estructura de la imagen inicial permitiendo el muestreo de imagen a imagen."
      },
      "latent_image": {
        "name": "imagen_latente",
        "tooltip": "La imagen latente a deshacer el ruido."
      },
      "model": {
        "name": "modelo",
        "tooltip": "El modelo utilizado para eliminar el ruido de la entrada latente."
      },
      "negative": {
        "name": "negativo",
        "tooltip": "El acondicionamiento que describe los atributos que quieres excluir de la imagen."
      },
      "positive": {
        "name": "positivo",
        "tooltip": "El acondicionamiento que describe los atributos que quieres incluir en la imagen."
      },
      "sampler_name": {
        "name": "nombre_muestreador",
        "tooltip": "El algoritmo utilizado al muestrear, esto puede afectar la calidad, velocidad y estilo de la salida generada."
      },
      "scheduler": {
        "name": "programador",
        "tooltip": "El programador controla cómo se elimina gradualmente el ruido para formar la imagen."
      },
      "seed": {
        "name": "semilla",
        "tooltip": "La semilla aleatoria utilizada para crear el ruido."
      },
      "steps": {
        "name": "pasos",
        "tooltip": "El número de pasos utilizados en el proceso de eliminación de ruido."
      }
    },
    "outputs": {
      "0": {
        "tooltip": "El latente deshacer el ruido."
      }
    }
  },
  "KSamplerAdvanced": {
    "display_name": "KSampler (Avanzado)",
    "inputs": {
      "add_noise": {
        "name": "añadir_ruido"
      },
      "cfg": {
        "name": "cfg"
      },
      "control_after_generate": {
        "name": "control_después_de_generar"
      },
      "end_at_step": {
        "name": "terminar_en_paso"
      },
      "latent_image": {
        "name": "imagen_latente"
      },
      "model": {
        "name": "modelo"
      },
      "negative": {
        "name": "negativo"
      },
      "noise_seed": {
        "name": "semilla_de_ruido"
      },
      "positive": {
        "name": "positivo"
      },
      "return_with_leftover_noise": {
        "name": "devolver_con_ruido_sobrante"
      },
      "sampler_name": {
        "name": "nombre_del_muestreador"
      },
      "scheduler": {
        "name": "programador"
      },
      "start_at_step": {
        "name": "comenzar_en_paso"
      },
      "steps": {
        "name": "pasos"
      }
    }
  },
  "KSamplerSelect": {
    "display_name": "KSamplerSelect",
    "inputs": {
      "sampler_name": {
        "name": "nombre_del_muestreador"
      }
    }
  },
  "KarrasScheduler": {
    "display_name": "KarrasScheduler",
    "inputs": {
      "rho": {
        "name": "rho"
      },
      "sigma_max": {
        "name": "sigma_max"
      },
      "sigma_min": {
        "name": "sigma_min"
      },
      "steps": {
        "name": "pasos"
      }
    }
  },
  "KlingCameraControlI2VNode": {
    "description": "Transforma imágenes fijas en videos cinematográficos con movimientos de cámara profesionales que simulan la cinematografía del mundo real. Controla acciones de cámara virtual como zoom, rotación, paneo, inclinación y vista en primera persona, manteniendo el enfoque en tu imagen original.",
    "display_name": "Kling Imagen a Video (Control de Cámara)",
    "inputs": {
      "aspect_ratio": {
        "name": "aspect_ratio"
      },
      "camera_control": {
        "name": "camera_control",
        "tooltip": "Puede ser creado usando el nodo Kling Camera Controls. Controla el movimiento y la acción de la cámara durante la generación del video."
      },
      "cfg_scale": {
        "name": "cfg_scale"
      },
      "negative_prompt": {
        "name": "negative_prompt",
        "tooltip": "Prompt de texto negativo"
      },
      "prompt": {
        "name": "prompt",
        "tooltip": "Prompt de texto positivo"
      },
      "start_frame": {
        "name": "start_frame",
        "tooltip": "Imagen de referencia - URL o cadena codificada en Base64, no puede exceder los 10MB, resolución no menor a 300*300px, relación de aspecto entre 1:2.5 ~ 2.5:1. Base64 no debe incluir el prefijo data:image."
      }
    },
    "outputs": {
      "1": {
        "name": "video_id"
      },
      "2": {
        "name": "duration"
      }
    }
  },
  "KlingCameraControlT2VNode": {
    "description": "Transforma texto en videos cinematográficos con movimientos de cámara profesionales que simulan la cinematografía del mundo real. Controla acciones de cámara virtual como zoom, rotación, paneo, inclinación y vista en primera persona, manteniendo el enfoque en tu texto original.",
    "display_name": "Kling Texto a Video (Control de Cámara)",
    "inputs": {
      "aspect_ratio": {
        "name": "aspect_ratio"
      },
      "camera_control": {
        "name": "camera_control",
        "tooltip": "Puede ser creado usando el nodo Kling Camera Controls. Controla el movimiento y la acción de la cámara durante la generación del video."
      },
      "cfg_scale": {
        "name": "cfg_scale"
      },
      "negative_prompt": {
        "name": "negative_prompt",
        "tooltip": "Prompt de texto negativo"
      },
      "prompt": {
        "name": "prompt",
        "tooltip": "Prompt de texto positivo"
      }
    },
    "outputs": {
      "1": {
        "name": "video_id"
      },
      "2": {
        "name": "duration"
      }
    }
  },
  "KlingCameraControls": {
    "description": "Permite especificar opciones de configuración para los Controles de Cámara Kling y efectos de control de movimiento.",
    "display_name": "Controles de Cámara Kling",
    "inputs": {
      "camera_control_type": {
        "name": "camera_control_type"
      },
      "horizontal_movement": {
        "name": "horizontal_movement",
        "tooltip": "Controla el movimiento de la cámara a lo largo del eje horizontal (eje x). Negativo indica izquierda, positivo indica derecha."
      },
      "pan": {
        "name": "pan",
        "tooltip": "Controla la rotación de la cámara en el plano vertical (eje x). Negativo indica rotación hacia abajo, positivo indica rotación hacia arriba."
      },
      "roll": {
        "name": "roll",
        "tooltip": "Controla la cantidad de giro de la cámara (eje z). Negativo indica sentido antihorario, positivo indica sentido horario."
      },
      "tilt": {
        "name": "tilt",
        "tooltip": "Controla la rotación de la cámara en el plano horizontal (eje y). Negativo indica rotación hacia la izquierda, positivo indica rotación hacia la derecha."
      },
      "vertical_movement": {
        "name": "vertical_movement",
        "tooltip": "Controla el movimiento de la cámara a lo largo del eje vertical (eje y). Negativo indica hacia abajo, positivo indica hacia arriba."
      },
      "zoom": {
        "name": "zoom",
        "tooltip": "Controla el cambio en la distancia focal de la cámara. Negativo indica un campo de visión más estrecho, positivo indica un campo de visión más amplio."
      }
    },
    "outputs": {
      "0": {
        "name": "camera_control"
      }
    }
  },
  "KlingDualCharacterVideoEffectNode": {
    "description": "Logra diferentes efectos especiales al generar un video basado en el effect_scene. La primera imagen se posicionará en el lado izquierdo y la segunda en el lado derecho de la composición.",
    "display_name": "Efectos de Video de Doble Personaje Kling",
    "inputs": {
      "duration": {
        "name": "duración"
      },
      "effect_scene": {
        "name": "effect_scene"
      },
      "image_left": {
        "name": "imagen_izquierda",
        "tooltip": "Imagen del lado izquierdo"
      },
      "image_right": {
        "name": "imagen_derecha",
        "tooltip": "Imagen del lado derecho"
      },
      "mode": {
        "name": "modo"
      },
      "model_name": {
        "name": "model_name"
      }
    },
    "outputs": {
      "1": {
        "name": "duración"
      }
    }
  },
  "KlingImage2VideoNode": {
    "description": "Nodo Kling Imagen a Video",
    "display_name": "Kling Imagen a Video",
    "inputs": {
      "aspect_ratio": {
        "name": "aspect_ratio"
      },
      "cfg_scale": {
        "name": "cfg_scale"
      },
      "duration": {
        "name": "duration"
      },
      "mode": {
        "name": "mode"
      },
      "model_name": {
        "name": "model_name"
      },
      "negative_prompt": {
        "name": "negative_prompt",
        "tooltip": "Prompt de texto negativo"
      },
      "prompt": {
        "name": "prompt",
        "tooltip": "Prompt de texto positivo"
      },
      "start_frame": {
        "name": "start_frame",
        "tooltip": "Imagen de referencia - URL o cadena codificada en Base64, no puede exceder los 10MB, resolución no menor a 300*300px, relación de aspecto entre 1:2.5 ~ 2.5:1. El Base64 no debe incluir el prefijo data:image."
      }
    },
    "outputs": {
      "1": {
        "name": "video_id"
      },
      "2": {
        "name": "duration"
      }
    }
  },
  "KlingImageGenerationNode": {
    "description": "Nodo de Generación de Imágenes Kling. Genera una imagen a partir de un prompt de texto con una imagen de referencia opcional.",
    "display_name": "Generación de Imágenes Kling",
    "inputs": {
      "aspect_ratio": {
        "name": "aspect_ratio"
      },
      "human_fidelity": {
        "name": "human_fidelity",
        "tooltip": "Similitud de referencia del sujeto"
      },
      "image": {
        "name": "image"
      },
      "image_fidelity": {
        "name": "image_fidelity",
        "tooltip": "Intensidad de referencia para imágenes subidas por el usuario"
      },
      "image_type": {
        "name": "image_type"
      },
      "model_name": {
        "name": "model_name"
      },
      "n": {
        "name": "n",
        "tooltip": "Número de imágenes generadas"
      },
      "negative_prompt": {
        "name": "negative_prompt",
        "tooltip": "Prompt de texto negativo"
      },
      "prompt": {
        "name": "prompt",
        "tooltip": "Prompt de texto positivo"
      }
    }
  },
  "KlingLipSyncAudioToVideoNode": {
    "description": "Nodo de Sincronización Labial Kling de Audio a Video. Sincroniza los movimientos de la boca en un archivo de video con el contenido de audio de un archivo de audio.",
    "display_name": "Sincronización Labial Kling: Video con Audio",
    "inputs": {
      "audio": {
        "name": "audio"
      },
      "video": {
        "name": "video"
      },
      "voice_language": {
        "name": "idioma_de_voz"
      }
    },
    "outputs": {
      "1": {
        "name": "id_de_video"
      },
      "2": {
        "name": "duración"
      }
    }
  },
  "KlingLipSyncTextToVideoNode": {
    "description": "Nodo Kling Lip Sync de Texto a Video. Sincroniza los movimientos de la boca en un archivo de video con un texto.",
    "display_name": "Sincronización Labial Kling Video con Texto",
    "inputs": {
      "text": {
        "name": "texto",
        "tooltip": "Contenido de texto para la generación de video con sincronización labial. Requerido cuando el modo es text2video. La longitud máxima es de 120 caracteres."
      },
      "video": {
        "name": "video"
      },
      "voice": {
        "name": "voz"
      },
      "voice_speed": {
        "name": "velocidad_de_voz",
        "tooltip": "Velocidad del habla. Rango válido: 0.8~2.0, con una cifra decimal."
      }
    },
    "outputs": {
      "1": {
        "name": "id_video"
      },
      "2": {
        "name": "duración"
      }
    }
  },
  "KlingSingleImageVideoEffectNode": {
    "description": "Logra diferentes efectos especiales al generar un video basado en el effect_scene.",
    "display_name": "Efectos de Video Kling",
    "inputs": {
      "duration": {
        "name": "duración"
      },
      "effect_scene": {
        "name": "effect_scene"
      },
      "image": {
        "name": "imagen",
        "tooltip": "Imagen de referencia. URL o cadena codificada en Base64 (sin el prefijo data:image). El tamaño del archivo no puede exceder los 10MB, la resolución no debe ser menor a 300*300px, y la relación de aspecto debe estar entre 1:2.5 y 2.5:1"
      },
      "model_name": {
        "name": "model_name"
      }
    },
    "outputs": {
      "1": {
        "name": "video_id"
      },
      "2": {
        "name": "duración"
      }
    }
  },
  "KlingStartEndFrameNode": {
    "description": "Genera una secuencia de video que transiciona entre las imágenes inicial y final proporcionadas. El nodo crea todos los fotogramas intermedios, produciendo una transformación suave desde el primer fotograma hasta el último.",
    "display_name": "Kling Fotograma Inicial-Final a Video",
    "inputs": {
      "aspect_ratio": {
        "name": "aspect_ratio"
      },
      "cfg_scale": {
        "name": "cfg_scale"
      },
      "end_frame": {
        "name": "end_frame",
        "tooltip": "Imagen de referencia - Control del fotograma final. URL o cadena codificada en Base64, no puede exceder los 10MB, resolución no menor a 300*300px. El Base64 no debe incluir el prefijo data:image."
      },
      "mode": {
        "name": "mode",
        "tooltip": "La configuración a usar para la generación de video siguiendo el formato: modo / duración / nombre_del_modelo."
      },
      "negative_prompt": {
        "name": "negative_prompt",
        "tooltip": "Prompt de texto negativo"
      },
      "prompt": {
        "name": "prompt",
        "tooltip": "Prompt de texto positivo"
      },
      "start_frame": {
        "name": "start_frame",
        "tooltip": "Imagen de referencia - URL o cadena codificada en Base64, no puede exceder los 10MB, resolución no menor a 300*300px, relación de aspecto entre 1:2.5 ~ 2.5:1. El Base64 no debe incluir el prefijo data:image."
      }
    },
    "outputs": {
      "1": {
        "name": "video_id"
      },
      "2": {
        "name": "duration"
      }
    }
  },
  "KlingTextToVideoNode": {
    "description": "Nodo Kling Texto a Video",
    "display_name": "Kling Texto a Video",
    "inputs": {
      "aspect_ratio": {
        "name": "aspect_ratio"
      },
      "cfg_scale": {
        "name": "cfg_scale"
      },
      "mode": {
        "name": "mode",
        "tooltip": "La configuración a usar para la generación de video siguiendo el formato: modo / duración / nombre_del_modelo."
      },
      "negative_prompt": {
        "name": "negative_prompt",
        "tooltip": "Prompt de texto negativo"
      },
      "prompt": {
        "name": "prompt",
        "tooltip": "Prompt de texto positivo"
      }
    },
    "outputs": {
      "1": {
        "name": "video_id"
      },
      "2": {
        "name": "duration"
      }
    }
  },
  "KlingVideoExtendNode": {
    "description": "Nodo Kling Video Extend. Extiende videos creados por otros nodos Kling. El video_id se crea utilizando otros nodos Kling.",
    "display_name": "Kling Video Extend",
    "inputs": {
      "cfg_scale": {
        "name": "cfg_scale"
      },
      "negative_prompt": {
        "name": "negative_prompt",
        "tooltip": "Prompt de texto negativo para los elementos a evitar en el video extendido"
      },
      "prompt": {
        "name": "prompt",
        "tooltip": "Prompt de texto positivo para guiar la extensión del video"
      },
      "video_id": {
        "name": "video_id",
        "tooltip": "El ID del video a extender. Soporta videos generados por texto a video, imagen a video y operaciones previas de extensión de video. No puede exceder los 3 minutos de duración total después de la extensión."
      }
    },
    "outputs": {
      "1": {
        "name": "video_id"
      },
      "2": {
        "name": "duration"
      }
    }
  },
  "KlingVirtualTryOnNode": {
    "description": "Nodo Kling Virtual Try On. Ingresa una imagen de una persona y una imagen de una prenda para probar la prenda en la persona.",
    "display_name": "Kling Virtual Try On",
    "inputs": {
      "cloth_image": {
        "name": "cloth_image"
      },
      "human_image": {
        "name": "human_image"
      },
      "model_name": {
        "name": "model_name"
      }
    }
  },
  "LTXVAddGuide": {
    "display_name": "LTXVAddGuide",
    "inputs": {
      "frame_idx": {
        "name": "indice_fotograma",
        "tooltip": "Índice de fotograma para comenzar la condición. Para imágenes de un solo fotograma o videos con 1-8 fotogramas, cualquier valor de indice_fotograma es aceptable. Para videos con 9+ fotogramas, indice_fotograma debe ser divisible por 8, de lo contrario se redondeará hacia abajo al múltiplo de 8 más cercano. Los valores negativos se cuentan desde el final del video."
      },
      "image": {
        "name": "imagen",
        "tooltip": "Imagen o video para condicionar el video latente. Debe ser 8*n + 1 fotogramas. Si el video no es 8*n + 1 fotogramas, se recortará a los 8*n + 1 fotogramas más cercanos."
      },
      "latent": {
        "name": "latente"
      },
      "negative": {
        "name": "negativo"
      },
      "positive": {
        "name": "positivo"
      },
      "strength": {
        "name": "fuerza"
      },
      "vae": {
        "name": "vae"
      }
    },
    "outputs": {
      "0": {
        "name": "positivo"
      },
      "1": {
        "name": "negativo"
      },
      "2": {
        "name": "latente"
      }
    }
  },
  "LTXVConditioning": {
    "display_name": "LTXVConditioning",
    "inputs": {
      "frame_rate": {
        "name": "tasa_fotogramas"
      },
      "negative": {
        "name": "negativo"
      },
      "positive": {
        "name": "positivo"
      }
    },
    "outputs": {
      "0": {
        "name": "positivo"
      },
      "1": {
        "name": "negativo"
      }
    }
  },
  "LTXVCropGuides": {
    "display_name": "LTXVCropGuides",
    "inputs": {
      "latent": {
        "name": "latente"
      },
      "negative": {
        "name": "negativo"
      },
      "positive": {
        "name": "positivo"
      }
    },
    "outputs": {
      "0": {
        "name": "positivo"
      },
      "1": {
        "name": "negativo"
      },
      "2": {
        "name": "latente"
      }
    }
  },
  "LTXVImgToVideo": {
    "display_name": "LTXVImgToVideo",
    "inputs": {
      "batch_size": {
        "name": "tamaño_lote"
      },
      "height": {
        "name": "altura"
      },
      "image": {
        "name": "imagen"
      },
      "length": {
        "name": "longitud"
      },
      "negative": {
        "name": "negativo"
      },
      "positive": {
        "name": "positivo"
      },
      "strength": {
        "name": "fuerza"
      },
      "vae": {
        "name": "vae"
      },
      "width": {
        "name": "ancho"
      }
    },
    "outputs": {
      "0": {
        "name": "positivo"
      },
      "1": {
        "name": "negativo"
      },
      "2": {
        "name": "latente"
      }
    }
  },
  "LTXVPreprocess": {
    "display_name": "LTXVPreprocesar",
    "inputs": {
      "image": {
        "name": "imagen"
      },
      "img_compression": {
        "name": "img_compresion",
        "tooltip": "Cantidad de compresión para aplicar en la imagen."
      }
    },
    "outputs": {
      "0": {
        "name": "imagen_salida"
      }
    }
  },
  "LTXVScheduler": {
    "display_name": "LTXVProgramador",
    "inputs": {
      "base_shift": {
        "name": "base_desplazamiento"
      },
      "latent": {
        "name": "latente"
      },
      "max_shift": {
        "name": "max_desplazamiento"
      },
      "steps": {
        "name": "pasos"
      },
      "stretch": {
        "name": "estiramiento",
        "tooltip": "Estira las sigmas para estar en el rango [terminal, 1]."
      },
      "terminal": {
        "name": "terminal",
        "tooltip": "El valor terminal de las sigmas después del estiramiento."
      }
    }
  },
  "LaplaceScheduler": {
    "display_name": "LaplaceScheduler",
    "inputs": {
      "beta": {
        "name": "beta"
      },
      "mu": {
        "name": "mu"
      },
      "sigma_max": {
        "name": "sigma_max"
      },
      "sigma_min": {
        "name": "sigma_min"
      },
      "steps": {
        "name": "pasos"
      }
    }
  },
  "LatentAdd": {
    "display_name": "LatentAdd",
    "inputs": {
      "samples1": {
        "name": "muestras1"
      },
      "samples2": {
        "name": "muestras2"
      }
    }
  },
  "LatentApplyOperation": {
    "display_name": "LatentApplyOperation",
    "inputs": {
      "operation": {
        "name": "operación"
      },
      "samples": {
        "name": "muestras"
      }
    }
  },
  "LatentApplyOperationCFG": {
    "display_name": "LatentApplyOperationCFG",
    "inputs": {
      "model": {
        "name": "modelo"
      },
      "operation": {
        "name": "operación"
      }
    }
  },
  "LatentBatch": {
    "display_name": "LatentBatch",
    "inputs": {
      "samples1": {
        "name": "muestras1"
      },
      "samples2": {
        "name": "muestras2"
      }
    }
  },
  "LatentBatchSeedBehavior": {
    "display_name": "LatentBatchSeedBehavior",
    "inputs": {
      "samples": {
        "name": "muestras"
      },
      "seed_behavior": {
        "name": "comportamiento_de_semilla"
      }
    }
  },
  "LatentBlend": {
    "display_name": "Mezcla Latente",
    "inputs": {
      "blend_factor": {
        "name": "factor_de_mezcla"
      },
      "samples1": {
        "name": "muestras1"
      },
      "samples2": {
        "name": "muestras2"
      }
    }
  },
  "LatentComposite": {
    "display_name": "Compuesto Latente",
    "inputs": {
      "feather": {
        "name": "pluma"
      },
      "samples_from": {
        "name": "muestras_de"
      },
      "samples_to": {
        "name": "muestras_a"
      },
      "x": {
        "name": "x"
      },
      "y": {
        "name": "y"
      }
    }
  },
  "LatentCompositeMasked": {
    "display_name": "CompuestoLatenteEnmascarado",
    "inputs": {
      "destination": {
        "name": "destino"
      },
      "mask": {
        "name": "máscara"
      },
      "resize_source": {
        "name": "redimensionar_fuente"
      },
      "source": {
        "name": "fuente"
      },
      "x": {
        "name": "x"
      },
      "y": {
        "name": "y"
      }
    }
  },
  "LatentCrop": {
    "display_name": "Recortar Latente",
    "inputs": {
      "height": {
        "name": "altura"
      },
      "samples": {
        "name": "muestras"
      },
      "width": {
        "name": "ancho"
      },
      "x": {
        "name": "x"
      },
      "y": {
        "name": "y"
      }
    }
  },
  "LatentFlip": {
    "display_name": "Voltear Latente",
    "inputs": {
      "flip_method": {
        "name": "método_volteo"
      },
      "samples": {
        "name": "muestras"
      }
    }
  },
  "LatentFromBatch": {
    "display_name": "Latente De Lote",
    "inputs": {
      "batch_index": {
        "name": "índice_lote"
      },
      "length": {
        "name": "longitud"
      },
      "samples": {
        "name": "muestras"
      }
    }
  },
  "LatentInterpolate": {
    "display_name": "Interpolar Latente",
    "inputs": {
      "ratio": {
        "name": "proporción"
      },
      "samples1": {
        "name": "muestras1"
      },
      "samples2": {
        "name": "muestras2"
      }
    }
  },
  "LatentMultiply": {
    "display_name": "Multiplicar Latente",
    "inputs": {
      "multiplier": {
        "name": "multiplicador"
      },
      "samples": {
        "name": "muestras"
      }
    }
  },
  "LatentOperationSharpen": {
    "display_name": "OperaciónAfiladoLatente",
    "inputs": {
      "alpha": {
        "name": "alfa"
      },
      "sharpen_radius": {
        "name": "radio_afilado"
      },
      "sigma": {
        "name": "sigma"
      }
    }
  },
  "LatentOperationTonemapReinhard": {
    "display_name": "OperaciónTonemapReinhardLatente",
    "inputs": {
      "multiplier": {
        "name": "multiplicador"
      }
    }
  },
  "LatentRotate": {
    "display_name": "Rotar Latente",
    "inputs": {
      "rotation": {
        "name": "rotación"
      },
      "samples": {
        "name": "muestras"
      }
    }
  },
  "LatentSubtract": {
    "display_name": "Restar Latente",
    "inputs": {
      "samples1": {
        "name": "muestras1"
      },
      "samples2": {
        "name": "muestras2"
      }
    }
  },
  "LatentUpscale": {
    "display_name": "Escalar Latente",
    "inputs": {
      "crop": {
        "name": "recorte"
      },
      "height": {
        "name": "altura"
      },
      "samples": {
        "name": "muestras"
      },
      "upscale_method": {
        "name": "método_escala"
      },
      "width": {
        "name": "ancho"
      }
    }
  },
  "LatentUpscaleBy": {
    "display_name": "Escalar Latente Por",
    "inputs": {
      "samples": {
        "name": "muestras"
      },
      "scale_by": {
        "name": "escalar_por"
      },
      "upscale_method": {
        "name": "método_escala"
      }
    }
  },
  "Load3D": {
    "display_name": "Cargar 3D",
    "inputs": {
      "clear": {
      },
      "height": {
        "name": "alto"
      },
      "image": {
        "name": "imagen"
      },
      "model_file": {
        "name": "archivo_modelo"
      },
      "upload 3d model": {
      },
      "width": {
        "name": "ancho"
      }
    },
    "outputs": {
      "0": {
        "name": "imagen"
      },
      "1": {
        "name": "mask"
      },
      "2": {
        "name": "ruta_malla"
      },
      "3": {
        "name": "normal"
      },
      "4": {
        "name": "lineart"
      },
      "5": {
        "name": "info_cámara"
      }
    }
  },
  "Load3DAnimation": {
    "display_name": "Cargar 3D - Animación",
    "inputs": {
      "clear": {
      },
      "height": {
        "name": "alto"
      },
      "image": {
        "name": "imagen"
      },
      "model_file": {
        "name": "archivo_modelo"
      },
      "upload 3d model": {
      },
      "width": {
        "name": "ancho"
      }
    },
    "outputs": {
      "0": {
        "name": "imagen"
      },
      "1": {
        "name": "mask"
      },
      "2": {
        "name": "ruta_malla"
      },
      "3": {
        "name": "normal"
      },
      "4": {
        "name": "info_cámara"
      }
    }
  },
  "LoadAudio": {
    "display_name": "CargarAudio",
    "inputs": {
      "audio": {
        "name": "audio"
      },
      "audioUI": {
        "name": "audioUI"
      },
      "upload": {
        "name": "elige archivo para subir"
      }
    }
  },
  "LoadImage": {
    "display_name": "Cargar Imagen",
    "inputs": {
      "image": {
        "name": "imagen"
      },
      "upload": {
        "name": "elige archivo para subir"
      }
    }
  },
  "LoadImageMask": {
    "display_name": "Cargar Imagen (como Máscara)",
    "inputs": {
      "channel": {
        "name": "canal"
      },
      "image": {
        "name": "imagen"
      },
      "upload": {
        "name": "elige archivo para subir"
      }
    }
  },
  "LoadImageOutput": {
    "description": "Carga una imagen desde la carpeta de salida. Cuando se hace clic en el botón de actualizar, el nodo actualizará la lista de imágenes y seleccionará automáticamente la primera imagen, permitiendo una fácil iteración.",
    "display_name": "Cargar Imagen (desde Salidas)",
    "inputs": {
      "image": {
        "name": "imagen"
      },
      "refresh": {
      },
      "upload": {
        "name": "elige archivo para subir"
      }
    }
  },
  "LoadLatent": {
    "display_name": "CargarLatente",
    "inputs": {
      "latent": {
        "name": "latente"
      }
    }
  },
  "LoadVideo": {
    "display_name": "Cargar video",
    "inputs": {
      "file": {
        "name": "archivo"
      },
      "upload": {
        "name": "elegir archivo para subir"
      }
    }
  },
  "LoraLoader": {
    "description": "Las LoRAs se utilizan para modificar los modelos de difusión y CLIP, alterando la forma en que se desruidan los latentes, como la aplicación de estilos. Se pueden vincular varios nodos de LoRA.",
    "display_name": "Cargar LoRA",
    "inputs": {
      "clip": {
        "name": "clip",
        "tooltip": "El modelo CLIP al que se aplicará la LoRA."
      },
      "lora_name": {
        "name": "nombre_lora",
        "tooltip": "El nombre de la LoRA."
      },
      "model": {
        "name": "modelo",
        "tooltip": "El modelo de difusión al que se aplicará la LoRA."
      },
      "strength_clip": {
        "name": "fuerza_clip",
        "tooltip": "Cuánto modificar el modelo CLIP. Este valor puede ser negativo."
      },
      "strength_model": {
        "name": "fuerza_modelo",
        "tooltip": "Cuánto modificar el modelo de difusión. Este valor puede ser negativo."
      }
    },
    "outputs": {
      "0": {
        "tooltip": "El modelo de difusión modificado."
      },
      "1": {
        "tooltip": "El modelo CLIP modificado."
      }
    }
  },
  "LoraLoaderModelOnly": {
    "description": "Las LoRAs se utilizan para modificar los modelos de difusión y CLIP, alterando la forma en que se desruidan los latentes, como la aplicación de estilos. Se pueden vincular varios nodos de LoRA.",
    "display_name": "CargadorLoRAModeloSolo",
    "inputs": {
      "lora_name": {
        "name": "nombre_lora"
      },
      "model": {
        "name": "modelo"
      },
      "strength_model": {
        "name": "fuerza_modelo"
      }
    },
    "outputs": {
      "0": {
        "tooltip": "El modelo de difusión modificado."
      }
    }
  },
  "LoraSave": {
    "display_name": "Extraer y Guardar Lora",
    "inputs": {
      "bias_diff": {
        "name": "diferencia_sesgo"
      },
      "filename_prefix": {
        "name": "prefijo_nombre_archivo"
      },
      "lora_type": {
        "name": "tipo_lora"
      },
      "model_diff": {
        "name": "diferencia_modelo",
        "tooltip": "La salida de ModelSubtract para ser convertida a una lora."
      },
      "rank": {
        "name": "rango"
      },
      "text_encoder_diff": {
        "name": "diferencia_codificador_texto",
        "tooltip": "La salida de CLIPSubtract para ser convertida a una lora."
      }
    }
  },
  "LotusConditioning": {
    "display_name": "LotusConditioning",
    "outputs": {
      "0": {
        "name": "condicionamiento"
      }
    }
  },
  "LumaConceptsNode": {
    "description": "Contiene uno o más Conceptos de Cámara para usar con los nodos Luma Text to Video y Luma Image to Video.",
    "display_name": "Luma Concepts",
    "inputs": {
      "concept1": {
        "name": "concept1"
      },
      "concept2": {
        "name": "concept2"
      },
      "concept3": {
        "name": "concept3"
      },
      "concept4": {
        "name": "concept4"
      },
      "luma_concepts": {
        "name": "luma_concepts",
        "tooltip": "Conceptos de Cámara opcionales para añadir a los seleccionados aquí."
      }
    },
    "outputs": {
      "0": {
        "name": "luma_concepts"
      }
    }
  },
  "LumaImageModifyNode": {
    "description": "Modifica imágenes de forma sincrónica según el prompt y la relación de aspecto.",
    "display_name": "Luma Imagen a Imagen",
    "inputs": {
      "control_after_generate": {
        "name": "controlar después de generar"
      },
      "image": {
        "name": "imagen"
      },
      "image_weight": {
        "name": "peso_imagen",
        "tooltip": "Peso de la imagen; cuanto más cerca de 1.0, menos se modificará la imagen."
      },
      "model": {
        "name": "modelo"
      },
      "prompt": {
        "name": "prompt",
        "tooltip": "Prompt para la generación de la imagen"
      },
      "seed": {
        "name": "semilla",
        "tooltip": "Semilla para determinar si el nodo debe ejecutarse de nuevo; los resultados reales son no deterministas independientemente de la semilla."
      }
    }
  },
  "LumaImageNode": {
    "description": "Genera imágenes de forma sincrónica según el prompt y la relación de aspecto.",
    "display_name": "Luma Texto a Imagen",
    "inputs": {
      "aspect_ratio": {
        "name": "aspect_ratio"
      },
      "character_image": {
        "name": "character_image",
        "tooltip": "Imágenes de referencia de personaje; puede ser un lote de varias, se pueden considerar hasta 4 imágenes."
      },
      "control_after_generate": {
        "name": "control after generate"
      },
      "image_luma_ref": {
        "name": "image_luma_ref",
        "tooltip": "Conexión de nodo de referencia Luma para influir en la generación con imágenes de entrada; se pueden considerar hasta 4 imágenes."
      },
      "model": {
        "name": "model"
      },
      "prompt": {
        "name": "prompt",
        "tooltip": "Prompt para la generación de la imagen"
      },
      "seed": {
        "name": "seed",
        "tooltip": "Semilla para determinar si el nodo debe ejecutarse de nuevo; los resultados reales son no deterministas independientemente de la semilla."
      },
      "style_image": {
        "name": "style_image",
        "tooltip": "Imagen de referencia de estilo; solo se usará 1 imagen."
      },
      "style_image_weight": {
        "name": "style_image_weight",
        "tooltip": "Peso de la imagen de estilo. Se ignora si no se proporciona style_image."
      }
    }
  },
  "LumaImageToVideoNode": {
    "description": "Genera videos de forma sincrónica basados en el prompt, imágenes de entrada y output_size.",
    "display_name": "Luma Image to Video",
    "inputs": {
      "control_after_generate": {
        "name": "control después de generar"
      },
      "duration": {
        "name": "duración"
      },
      "first_image": {
        "name": "primera_imagen",
        "tooltip": "Primer fotograma del video generado."
      },
      "last_image": {
        "name": "última_imagen",
        "tooltip": "Último fotograma del video generado."
      },
      "loop": {
        "name": "bucle"
      },
      "luma_concepts": {
        "name": "luma_concepts",
        "tooltip": "Conceptos de cámara opcionales para dictar el movimiento de cámara a través del nodo Luma Concepts."
      },
      "model": {
        "name": "model"
      },
      "prompt": {
        "name": "prompt",
        "tooltip": "Prompt para la generación de video"
      },
      "resolution": {
        "name": "resolución"
      },
      "seed": {
        "name": "semilla",
        "tooltip": "Semilla para determinar si el nodo debe ejecutarse de nuevo; los resultados reales son no deterministas independientemente de la semilla."
      }
    }
  },
  "LumaReferenceNode": {
    "description": "Contiene una imagen y un peso para usar con el nodo Luma Generate Image.",
    "display_name": "Referencia Luma",
    "inputs": {
      "image": {
        "name": "imagen",
        "tooltip": "Imagen a usar como referencia."
      },
      "luma_ref": {
        "name": "luma_ref"
      },
      "weight": {
        "name": "peso",
        "tooltip": "Peso de la referencia de imagen."
      }
    },
    "outputs": {
      "0": {
        "name": "luma_ref"
      }
    }
  },
  "LumaVideoNode": {
    "description": "Genera videos de forma sincrónica según el prompt y el tamaño de salida.",
    "display_name": "Luma Texto a Video",
    "inputs": {
      "aspect_ratio": {
        "name": "relación de aspecto"
      },
      "control_after_generate": {
        "name": "control después de generar"
      },
      "duration": {
        "name": "duración"
      },
      "loop": {
        "name": "bucle"
      },
      "luma_concepts": {
        "name": "luma_concepts",
        "tooltip": "Conceptos de cámara opcionales para dictar el movimiento de cámara a través del nodo Luma Concepts."
      },
      "model": {
        "name": "modelo"
      },
      "prompt": {
        "name": "prompt",
        "tooltip": "Prompt para la generación de video"
      },
      "resolution": {
        "name": "resolución"
      },
      "seed": {
        "name": "semilla",
        "tooltip": "Semilla para determinar si el nodo debe ejecutarse de nuevo; los resultados reales son no deterministas independientemente de la semilla."
      }
    }
  },
  "Mahiro": {
    "description": "Modifica la guía para escalar más en la 'dirección' del indicador positivo en lugar de la diferencia entre el indicador negativo.",
    "display_name": "¡Mahiro es tan linda que merece una mejor función de guía!! (。・ω・。)",
    "inputs": {
      "model": {
        "name": "modelo"
      }
    },
    "outputs": {
      "0": {
        "name": "modelo_parcheado"
      }
    }
  },
  "MaskComposite": {
    "display_name": "Composición de Máscara",
    "inputs": {
      "destination": {
        "name": "destino"
      },
      "operation": {
        "name": "operación"
      },
      "source": {
        "name": "fuente"
      },
      "x": {
        "name": "x"
      },
      "y": {
        "name": "y"
      }
    }
  },
  "MaskPreview": {
    "description": "Guarda las imágenes de entrada en tu directorio de salida de ComfyUI.",
    "display_name": "MaskPreview",
    "inputs": {
      "mask": {
        "name": "mask"
      }
    }
  },
  "MaskToImage": {
    "display_name": "Convertir Máscara a Imagen",
    "inputs": {
      "mask": {
        "name": "máscara"
      }
    }
  },
  "MinimaxImageToVideoNode": {
    "description": "Genera videos a partir de una imagen y prompts usando la API de MiniMax",
    "display_name": "MiniMax Imagen a Video",
    "inputs": {
      "control_after_generate": {
        "name": "control después de generar"
      },
      "image": {
        "name": "imagen",
        "tooltip": "Imagen a usar como primer fotograma de la generación de video"
      },
      "model": {
        "name": "modelo",
        "tooltip": "Modelo a usar para la generación de video"
      },
      "prompt_text": {
        "name": "texto de prompt",
        "tooltip": "Prompt de texto para guiar la generación de video"
      },
      "seed": {
        "name": "semilla",
        "tooltip": "La semilla aleatoria utilizada para crear el ruido."
      }
    }
  },
  "MinimaxTextToVideoNode": {
    "description": "Genera videos a partir de indicaciones usando la API de MiniMax",
    "display_name": "MiniMax Texto a Video",
    "inputs": {
      "control_after_generate": {
        "name": "controlar después de generar"
      },
      "model": {
        "name": "modelo",
        "tooltip": "Modelo a utilizar para la generación de video"
      },
      "prompt_text": {
        "name": "texto_de_indicación",
        "tooltip": "Texto de indicación para guiar la generación del video"
      },
      "seed": {
        "name": "semilla",
        "tooltip": "La semilla aleatoria utilizada para crear el ruido."
      }
    }
  },
  "ModelComputeDtype": {
    "display_name": "ModeloCalcularDtype",
    "inputs": {
      "dtype": {
        "name": "dtype"
      },
      "model": {
        "name": "modelo"
      }
    }
  },
  "ModelMergeAdd": {
    "display_name": "ModeloFusionarAgregar",
    "inputs": {
      "model1": {
        "name": "modelo1"
      },
      "model2": {
        "name": "modelo2"
      }
    }
  },
  "ModelMergeAuraflow": {
    "display_name": "ModelMergeAuraflow",
    "inputs": {
      "cond_seq_linear_": {
        "name": "cond_seq_linear."
      },
      "double_layers_0_": {
        "name": "capas_dobles.0."
      },
      "double_layers_1_": {
        "name": "capas_dobles.1."
      },
      "double_layers_2_": {
        "name": "capas_dobles.2."
      },
      "double_layers_3_": {
        "name": "capas_dobles.3."
      },
      "final_linear_": {
        "name": "final_linear."
      },
      "init_x_linear_": {
        "name": "init_x_linear."
      },
      "modF_": {
        "name": "modF."
      },
      "model1": {
        "name": "modelo1"
      },
      "model2": {
        "name": "modelo2"
      },
      "positional_encoding": {
        "name": "codificación_posicional"
      },
      "register_tokens": {
        "name": "registrar_tokens"
      },
      "single_layers_0_": {
        "name": "capas_simples.0."
      },
      "single_layers_10_": {
        "name": "capas_simples.10."
      },
      "single_layers_11_": {
        "name": "capas_simples.11."
      },
      "single_layers_12_": {
        "name": "capas_simples.12."
      },
      "single_layers_13_": {
        "name": "capas_simples.13."
      },
      "single_layers_14_": {
        "name": "capas_simples.14."
      },
      "single_layers_15_": {
        "name": "capas_simples.15."
      },
      "single_layers_16_": {
        "name": "capas_simples.16."
      },
      "single_layers_17_": {
        "name": "capas_simples.17."
      },
      "single_layers_18_": {
        "name": "capas_simples.18."
      },
      "single_layers_19_": {
        "name": "capas_simples.19."
      },
      "single_layers_1_": {
        "name": "capas_simples.1."
      },
      "single_layers_20_": {
        "name": "capas_simples.20."
      },
      "single_layers_21_": {
        "name": "capas_simples.21."
      },
      "single_layers_22_": {
        "name": "capas_simples.22."
      },
      "single_layers_23_": {
        "name": "capas_simples.23."
      },
      "single_layers_24_": {
        "name": "capas_simples.24."
      },
      "single_layers_25_": {
        "name": "capas_simples.25."
      },
      "single_layers_26_": {
        "name": "capas_simples.26."
      },
      "single_layers_27_": {
        "name": "capas_simples.27."
      },
      "single_layers_28_": {
        "name": "capas_simples.28."
      },
      "single_layers_29_": {
        "name": "capas_simples.29."
      },
      "single_layers_2_": {
        "name": "capas_simples.2."
      },
      "single_layers_30_": {
        "name": "capas_simples.30."
      },
      "single_layers_31_": {
        "name": "capas_simples.31."
      },
      "single_layers_3_": {
        "name": "capas_simples.3."
      },
      "single_layers_4_": {
        "name": "capas_simples.4."
      },
      "single_layers_5_": {
        "name": "capas_simples.5."
      },
      "single_layers_6_": {
        "name": "capas_simples.6."
      },
      "single_layers_7_": {
        "name": "capas_simples.7."
      },
      "single_layers_8_": {
        "name": "capas_simples.8."
      },
      "single_layers_9_": {
        "name": "capas_simples.9."
      },
      "t_embedder_": {
        "name": "t_embedder."
      }
    }
  },
  "ModelMergeBlocks": {
    "display_name": "ModelMergeBlocks",
    "inputs": {
      "input": {
        "name": "entrada"
      },
      "middle": {
        "name": "medio"
      },
      "model1": {
        "name": "modelo1"
      },
      "model2": {
        "name": "modelo2"
      },
      "out": {
        "name": "salida"
      }
    }
  },
  "ModelMergeCosmos14B": {
    "display_name": "ModelMergeCosmos14B",
    "inputs": {
      "affline_norm_": {
        "name": "affline_norm."
      },
      "blocks_block0_": {
        "name": "blocks.block0."
      },
      "blocks_block10_": {
        "name": "blocks.block10."
      },
      "blocks_block11_": {
        "name": "blocks.block11."
      },
      "blocks_block12_": {
        "name": "blocks.block12."
      },
      "blocks_block13_": {
        "name": "blocks.block13."
      },
      "blocks_block14_": {
        "name": "blocks.block14."
      },
      "blocks_block15_": {
        "name": "blocks.block15."
      },
      "blocks_block16_": {
        "name": "blocks.block16."
      },
      "blocks_block17_": {
        "name": "blocks.block17."
      },
      "blocks_block18_": {
        "name": "blocks.block18."
      },
      "blocks_block19_": {
        "name": "blocks.block19."
      },
      "blocks_block1_": {
        "name": "blocks.block1."
      },
      "blocks_block20_": {
        "name": "blocks.block20."
      },
      "blocks_block21_": {
        "name": "blocks.block21."
      },
      "blocks_block22_": {
        "name": "blocks.block22."
      },
      "blocks_block23_": {
        "name": "blocks.block23."
      },
      "blocks_block24_": {
        "name": "blocks.block24."
      },
      "blocks_block25_": {
        "name": "blocks.block25."
      },
      "blocks_block26_": {
        "name": "blocks.block26."
      },
      "blocks_block27_": {
        "name": "blocks.block27."
      },
      "blocks_block28_": {
        "name": "blocks.block28."
      },
      "blocks_block29_": {
        "name": "blocks.block29."
      },
      "blocks_block2_": {
        "name": "blocks.block2."
      },
      "blocks_block30_": {
        "name": "blocks.block30."
      },
      "blocks_block31_": {
        "name": "blocks.block31."
      },
      "blocks_block32_": {
        "name": "blocks.block32."
      },
      "blocks_block33_": {
        "name": "blocks.block33."
      },
      "blocks_block34_": {
        "name": "blocks.block34."
      },
      "blocks_block35_": {
        "name": "final_layer."
      },
      "blocks_block3_": {
        "name": "blocks.block3."
      },
      "blocks_block4_": {
        "name": "blocks.block4."
      },
      "blocks_block5_": {
        "name": "blocks.block5."
      },
      "blocks_block6_": {
        "name": "blocks.block6."
      },
      "blocks_block7_": {
        "name": "blocks.block7."
      },
      "blocks_block8_": {
        "name": "blocks.block8."
      },
      "blocks_block9_": {
        "name": "blocks.block9."
      },
      "extra_pos_embedder_": {
        "name": "extra_pos_embedder."
      },
      "final_layer_": {
        "name": "capa_final."
      },
      "model1": {
        "name": "model1"
      },
      "model2": {
        "name": "model2"
      },
      "pos_embedder_": {
        "name": "pos_embedder."
      },
      "t_embedder_": {
        "name": "t_embedder."
      },
      "x_embedder_": {
        "name": "x_embedder."
      }
    }
  },
  "ModelMergeCosmos7B": {
    "display_name": "ModelMergeCosmos7B",
    "inputs": {
      "affline_norm_": {
        "name": "affline_norm."
      },
      "blocks_block0_": {
        "name": "blocks.block0."
      },
      "blocks_block10_": {
        "name": "blocks.block10."
      },
      "blocks_block11_": {
        "name": "blocks.block11."
      },
      "blocks_block12_": {
        "name": "blocks.block12."
      },
      "blocks_block13_": {
        "name": "blocks.block13."
      },
      "blocks_block14_": {
        "name": "blocks.block14."
      },
      "blocks_block15_": {
        "name": "blocks.block15."
      },
      "blocks_block16_": {
        "name": "blocks.block16."
      },
      "blocks_block17_": {
        "name": "blocks.block17."
      },
      "blocks_block18_": {
        "name": "blocks.block18."
      },
      "blocks_block19_": {
        "name": "blocks.block19."
      },
      "blocks_block1_": {
        "name": "blocks.block1."
      },
      "blocks_block20_": {
        "name": "blocks.block20."
      },
      "blocks_block21_": {
        "name": "blocks.block21."
      },
      "blocks_block22_": {
        "name": "blocks.block22."
      },
      "blocks_block23_": {
        "name": "blocks.block23."
      },
      "blocks_block24_": {
        "name": "blocks.block24."
      },
      "blocks_block25_": {
        "name": "blocks.block25."
      },
      "blocks_block26_": {
        "name": "blocks.block26."
      },
      "blocks_block27_": {
        "name": "blocks.block27."
      },
      "blocks_block2_": {
        "name": "blocks.block2."
      },
      "blocks_block3_": {
        "name": "blocks.block3."
      },
      "blocks_block4_": {
        "name": "blocks.block4."
      },
      "blocks_block5_": {
        "name": "blocks.block5."
      },
      "blocks_block6_": {
        "name": "blocks.block6."
      },
      "blocks_block7_": {
        "name": "blocks.block7."
      },
      "blocks_block8_": {
        "name": "blocks.block8."
      },
      "blocks_block9_": {
        "name": "blocks.block9."
      },
      "extra_pos_embedder_": {
        "name": "extra_pos_embedder."
      },
      "final_layer_": {
        "name": "final_layer."
      },
      "model1": {
        "name": "model1"
      },
      "model2": {
        "name": "model2"
      },
      "pos_embedder_": {
        "name": "pos_embedder."
      },
      "t_embedder_": {
        "name": "t_embedder."
      },
      "x_embedder_": {
        "name": "x_embedder."
      }
    }
  },
  "ModelMergeFlux1": {
    "display_name": "ModelMergeFlux1",
    "inputs": {
      "double_blocks_0_": {
        "name": "bloques_dobles.0."
      },
      "double_blocks_10_": {
        "name": "bloques_dobles.10."
      },
      "double_blocks_11_": {
        "name": "bloques_dobles.11."
      },
      "double_blocks_12_": {
        "name": "bloques_dobles.12."
      },
      "double_blocks_13_": {
        "name": "bloques_dobles.13."
      },
      "double_blocks_14_": {
        "name": "bloques_dobles.14."
      },
      "double_blocks_15_": {
        "name": "bloques_dobles.15."
      },
      "double_blocks_16_": {
        "name": "bloques_dobles.16."
      },
      "double_blocks_17_": {
        "name": "bloques_dobles.17."
      },
      "double_blocks_18_": {
        "name": "bloques_dobles.18."
      },
      "double_blocks_1_": {
        "name": "bloques_dobles.1."
      },
      "double_blocks_2_": {
        "name": "bloques_dobles.2."
      },
      "double_blocks_3_": {
        "name": "bloques_dobles.3."
      },
      "double_blocks_4_": {
        "name": "bloques_dobles.4."
      },
      "double_blocks_5_": {
        "name": "bloques_dobles.5."
      },
      "double_blocks_6_": {
        "name": "bloques_dobles.6."
      },
      "double_blocks_7_": {
        "name": "bloques_dobles.7."
      },
      "double_blocks_8_": {
        "name": "bloques_dobles.8."
      },
      "double_blocks_9_": {
        "name": "bloques_dobles.9."
      },
      "final_layer_": {
        "name": "capa_final."
      },
      "guidance_in": {
        "name": "orientación_in"
      },
      "img_in_": {
        "name": "img_in."
      },
      "model1": {
        "name": "model1"
      },
      "model2": {
        "name": "model2"
      },
      "single_blocks_0_": {
        "name": "bloques_simples.0."
      },
      "single_blocks_10_": {
        "name": "bloques_simples.10."
      },
      "single_blocks_11_": {
        "name": "bloques_simples.11."
      },
      "single_blocks_12_": {
        "name": "bloques_simples.12."
      },
      "single_blocks_13_": {
        "name": "bloques_simples.13."
      },
      "single_blocks_14_": {
        "name": "bloques_simples.14."
      },
      "single_blocks_15_": {
        "name": "bloques_simples.15."
      },
      "single_blocks_16_": {
        "name": "bloques_simples.16."
      },
      "single_blocks_17_": {
        "name": "bloques_simples.17."
      },
      "single_blocks_18_": {
        "name": "bloques_simples.18."
      },
      "single_blocks_19_": {
        "name": "bloques_simples.19."
      },
      "single_blocks_1_": {
        "name": "bloques_simples.1."
      },
      "single_blocks_20_": {
        "name": "bloques_simples.20."
      },
      "single_blocks_21_": {
        "name": "bloques_simples.21."
      },
      "single_blocks_22_": {
        "name": "bloques_simples.22."
      },
      "single_blocks_23_": {
        "name": "bloques_simples.23."
      },
      "single_blocks_24_": {
        "name": "bloques_simples.24."
      },
      "single_blocks_25_": {
        "name": "bloques_simples.25."
      },
      "single_blocks_26_": {
        "name": "bloques_simples.26."
      },
      "single_blocks_27_": {
        "name": "bloques_simples.27."
      },
      "single_blocks_28_": {
        "name": "bloques_simples.28."
      },
      "single_blocks_29_": {
        "name": "bloques_simples.29."
      },
      "single_blocks_2_": {
        "name": "bloques_simples.2."
      },
      "single_blocks_30_": {
        "name": "bloques_simples.30."
      },
      "single_blocks_31_": {
        "name": "bloques_simples.31."
      },
      "single_blocks_32_": {
        "name": "bloques_simples.32."
      },
      "single_blocks_33_": {
        "name": "bloques_simples.33."
      },
      "single_blocks_34_": {
        "name": "bloques_simples.34."
      },
      "single_blocks_35_": {
        "name": "bloques_simples.35."
      },
      "single_blocks_36_": {
        "name": "bloques_simples.36."
      },
      "single_blocks_37_": {
        "name": "bloques_simples.37."
      },
      "single_blocks_3_": {
        "name": "bloques_simples.3."
      },
      "single_blocks_4_": {
        "name": "bloques_simples.4."
      },
      "single_blocks_5_": {
        "name": "bloques_simples.5."
      },
      "single_blocks_6_": {
        "name": "bloques_simples.6."
      },
      "single_blocks_7_": {
        "name": "bloques_simples.7."
      },
      "single_blocks_8_": {
        "name": "bloques_simples.8."
      },
      "single_blocks_9_": {
        "name": "bloques_simples.9."
      },
      "time_in_": {
        "name": "time_in."
      },
      "txt_in_": {
        "name": "txt_in."
      },
      "vector_in_": {
        "name": "vector_in."
      }
    }
  },
  "ModelMergeLTXV": {
    "display_name": "ModelMergeLTXV",
    "inputs": {
      "adaln_single_": {
        "name": "adaln_single."
      },
      "caption_projection_": {
        "name": "caption_projection."
      },
      "model1": {
        "name": "model1"
      },
      "model2": {
        "name": "model2"
      },
      "patchify_proj_": {
        "name": "patchify_proj."
      },
      "proj_out_": {
        "name": "proj_out."
      },
      "scale_shift_table": {
        "name": "scale_shift_table"
      },
      "transformer_blocks_0_": {
        "name": "transformer_blocks.0."
      },
      "transformer_blocks_10_": {
        "name": "transformer_blocks.10."
      },
      "transformer_blocks_11_": {
        "name": "transformer_blocks.11."
      },
      "transformer_blocks_12_": {
        "name": "transformer_blocks.12."
      },
      "transformer_blocks_13_": {
        "name": "transformer_blocks.13."
      },
      "transformer_blocks_14_": {
        "name": "transformer_blocks.14."
      },
      "transformer_blocks_15_": {
        "name": "transformer_blocks.15."
      },
      "transformer_blocks_16_": {
        "name": "transformer_blocks.16."
      },
      "transformer_blocks_17_": {
        "name": "transformer_blocks.17."
      },
      "transformer_blocks_18_": {
        "name": "transformer_blocks.18."
      },
      "transformer_blocks_19_": {
        "name": "transformer_blocks.19."
      },
      "transformer_blocks_1_": {
        "name": "transformer_blocks.1."
      },
      "transformer_blocks_20_": {
        "name": "transformer_blocks.20."
      },
      "transformer_blocks_21_": {
        "name": "transformer_blocks.21."
      },
      "transformer_blocks_22_": {
        "name": "transformer_blocks.22."
      },
      "transformer_blocks_23_": {
        "name": "transformer_blocks.23."
      },
      "transformer_blocks_24_": {
        "name": "transformer_blocks.24."
      },
      "transformer_blocks_25_": {
        "name": "transformer_blocks.25."
      },
      "transformer_blocks_26_": {
        "name": "transformer_blocks.26."
      },
      "transformer_blocks_27_": {
        "name": "transformer_blocks.27."
      },
      "transformer_blocks_2_": {
        "name": "transformer_blocks.2."
      },
      "transformer_blocks_3_": {
        "name": "transformer_blocks.3."
      },
      "transformer_blocks_4_": {
        "name": "transformer_blocks.4."
      },
      "transformer_blocks_5_": {
        "name": "transformer_blocks.5."
      },
      "transformer_blocks_6_": {
        "name": "transformer_blocks.6."
      },
      "transformer_blocks_7_": {
        "name": "transformer_blocks.7."
      },
      "transformer_blocks_8_": {
        "name": "transformer_blocks.8."
      },
      "transformer_blocks_9_": {
        "name": "transformer_blocks.9."
      }
    }
  },
  "ModelMergeMochiPreview": {
    "display_name": "ModelMergeMochiPreview",
    "inputs": {
      "blocks_0_": {
        "name": "blocks.0."
      },
      "blocks_10_": {
        "name": "blocks.10."
      },
      "blocks_11_": {
        "name": "blocks.11."
      },
      "blocks_12_": {
        "name": "blocks.12."
      },
      "blocks_13_": {
        "name": "blocks.13."
      },
      "blocks_14_": {
        "name": "blocks.14."
      },
      "blocks_15_": {
        "name": "blocks.15."
      },
      "blocks_16_": {
        "name": "blocks.16."
      },
      "blocks_17_": {
        "name": "blocks.17."
      },
      "blocks_18_": {
        "name": "blocks.18."
      },
      "blocks_19_": {
        "name": "blocks.19."
      },
      "blocks_1_": {
        "name": "blocks.1."
      },
      "blocks_20_": {
        "name": "blocks.20."
      },
      "blocks_21_": {
        "name": "blocks.21."
      },
      "blocks_22_": {
        "name": "blocks.22."
      },
      "blocks_23_": {
        "name": "blocks.23."
      },
      "blocks_24_": {
        "name": "blocks.24."
      },
      "blocks_25_": {
        "name": "blocks.25."
      },
      "blocks_26_": {
        "name": "blocks.26."
      },
      "blocks_27_": {
        "name": "blocks.27."
      },
      "blocks_28_": {
        "name": "blocks.28."
      },
      "blocks_29_": {
        "name": "blocks.29."
      },
      "blocks_2_": {
        "name": "blocks.2."
      },
      "blocks_30_": {
        "name": "blocks.30."
      },
      "blocks_31_": {
        "name": "blocks.31."
      },
      "blocks_32_": {
        "name": "blocks.32."
      },
      "blocks_33_": {
        "name": "blocks.33."
      },
      "blocks_34_": {
        "name": "blocks.34."
      },
      "blocks_35_": {
        "name": "blocks.35."
      },
      "blocks_36_": {
        "name": "blocks.36."
      },
      "blocks_37_": {
        "name": "blocks.37."
      },
      "blocks_38_": {
        "name": "blocks.38."
      },
      "blocks_39_": {
        "name": "blocks.39."
      },
      "blocks_3_": {
        "name": "blocks.3."
      },
      "blocks_40_": {
        "name": "blocks.40."
      },
      "blocks_41_": {
        "name": "blocks.41."
      },
      "blocks_42_": {
        "name": "blocks.42."
      },
      "blocks_43_": {
        "name": "blocks.43."
      },
      "blocks_44_": {
        "name": "blocks.44."
      },
      "blocks_45_": {
        "name": "blocks.45."
      },
      "blocks_46_": {
        "name": "blocks.46."
      },
      "blocks_47_": {
        "name": "blocks.47."
      },
      "blocks_4_": {
        "name": "blocks.4."
      },
      "blocks_5_": {
        "name": "blocks.5."
      },
      "blocks_6_": {
        "name": "blocks.6."
      },
      "blocks_7_": {
        "name": "blocks.7."
      },
      "blocks_8_": {
        "name": "blocks.8."
      },
      "blocks_9_": {
        "name": "blocks.9."
      },
      "final_layer_": {
        "name": "final_layer."
      },
      "model1": {
        "name": "model1"
      },
      "model2": {
        "name": "model2"
      },
      "pos_frequencies_": {
        "name": "pos_frequencies."
      },
      "t5_y_embedder_": {
        "name": "t5_y_embedder."
      },
      "t5_yproj_": {
        "name": "t5_yproj."
      },
      "t_embedder_": {
        "name": "t_embedder."
      }
    }
  },
  "ModelMergeSD1": {
    "display_name": "ModelMergeSD1",
    "inputs": {
      "input_blocks_0_": {
        "name": "input_blocks.0."
      },
      "input_blocks_10_": {
        "name": "input_blocks.10."
      },
      "input_blocks_11_": {
        "name": "input_blocks.11."
      },
      "input_blocks_1_": {
        "name": "input_blocks.1."
      },
      "input_blocks_2_": {
        "name": "input_blocks.2."
      },
      "input_blocks_3_": {
        "name": "input_blocks.3."
      },
      "input_blocks_4_": {
        "name": "input_blocks.4."
      },
      "input_blocks_5_": {
        "name": "input_blocks.5."
      },
      "input_blocks_6_": {
        "name": "input_blocks.6."
      },
      "input_blocks_7_": {
        "name": "input_blocks.7."
      },
      "input_blocks_8_": {
        "name": "input_blocks.8."
      },
      "input_blocks_9_": {
        "name": "input_blocks.9."
      },
      "label_emb_": {
        "name": "label_emb."
      },
      "middle_block_0_": {
        "name": "middle_block.0."
      },
      "middle_block_1_": {
        "name": "middle_block.1."
      },
      "middle_block_2_": {
        "name": "middle_block.2."
      },
      "model1": {
        "name": "model1"
      },
      "model2": {
        "name": "model2"
      },
      "out_": {
        "name": "out."
      },
      "output_blocks_0_": {
        "name": "output_blocks.0."
      },
      "output_blocks_10_": {
        "name": "output_blocks.10."
      },
      "output_blocks_11_": {
        "name": "output_blocks.11."
      },
      "output_blocks_1_": {
        "name": "output_blocks.1."
      },
      "output_blocks_2_": {
        "name": "output_blocks.2."
      },
      "output_blocks_3_": {
        "name": "output_blocks.3."
      },
      "output_blocks_4_": {
        "name": "output_blocks.4."
      },
      "output_blocks_5_": {
        "name": "output_blocks.5."
      },
      "output_blocks_6_": {
        "name": "output_blocks.6."
      },
      "output_blocks_7_": {
        "name": "output_blocks.7."
      },
      "output_blocks_8_": {
        "name": "output_blocks.8."
      },
      "output_blocks_9_": {
        "name": "output_blocks.9."
      },
      "time_embed_": {
        "name": "time_embed."
      }
    }
  },
  "ModelMergeSD2": {
    "display_name": "ModelMergeSD2",
    "inputs": {
      "input_blocks_0_": {
        "name": "input_blocks.0."
      },
      "input_blocks_10_": {
        "name": "input_blocks.10."
      },
      "input_blocks_11_": {
        "name": "input_blocks.11."
      },
      "input_blocks_1_": {
        "name": "input_blocks.1."
      },
      "input_blocks_2_": {
        "name": "input_blocks.2."
      },
      "input_blocks_3_": {
        "name": "input_blocks.3."
      },
      "input_blocks_4_": {
        "name": "input_blocks.4."
      },
      "input_blocks_5_": {
        "name": "input_blocks.5."
      },
      "input_blocks_6_": {
        "name": "input_blocks.6."
      },
      "input_blocks_7_": {
        "name": "input_blocks.7."
      },
      "input_blocks_8_": {
        "name": "input_blocks.8."
      },
      "input_blocks_9_": {
        "name": "input_blocks.9."
      },
      "label_emb_": {
        "name": "label_emb."
      },
      "middle_block_0_": {
        "name": "middle_block.0."
      },
      "middle_block_1_": {
        "name": "middle_block.1."
      },
      "middle_block_2_": {
        "name": "middle_block.2."
      },
      "model1": {
        "name": "model1"
      },
      "model2": {
        "name": "model2"
      },
      "out_": {
        "name": "out."
      },
      "output_blocks_0_": {
        "name": "output_blocks.0."
      },
      "output_blocks_10_": {
        "name": "output_blocks.10."
      },
      "output_blocks_11_": {
        "name": "output_blocks.11."
      },
      "output_blocks_1_": {
        "name": "output_blocks.1."
      },
      "output_blocks_2_": {
        "name": "output_blocks.2."
      },
      "output_blocks_3_": {
        "name": "output_blocks.3."
      },
      "output_blocks_4_": {
        "name": "output_blocks.4."
      },
      "output_blocks_5_": {
        "name": "output_blocks.5."
      },
      "output_blocks_6_": {
        "name": "output_blocks.6."
      },
      "output_blocks_7_": {
        "name": "output_blocks.7."
      },
      "output_blocks_8_": {
        "name": "output_blocks.8."
      },
      "output_blocks_9_": {
        "name": "output_blocks.9."
      },
      "time_embed_": {
        "name": "time_embed."
      }
    }
  },
  "ModelMergeSD35_Large": {
    "display_name": "ModelMergeSD35_Large",
    "inputs": {
      "context_embedder_": {
        "name": "context_embedder."
      },
      "final_layer_": {
        "name": "final_layer."
      },
      "joint_blocks_0_": {
        "name": "joint_blocks.0."
      },
      "joint_blocks_10_": {
        "name": "joint_blocks.10."
      },
      "joint_blocks_11_": {
        "name": "joint_blocks.11."
      },
      "joint_blocks_12_": {
        "name": "joint_blocks.12."
      },
      "joint_blocks_13_": {
        "name": "joint_blocks.13."
      },
      "joint_blocks_14_": {
        "name": "joint_blocks.14."
      },
      "joint_blocks_15_": {
        "name": "joint_blocks.15."
      },
      "joint_blocks_16_": {
        "name": "joint_blocks.16."
      },
      "joint_blocks_17_": {
        "name": "joint_blocks.17."
      },
      "joint_blocks_18_": {
        "name": "joint_blocks.18."
      },
      "joint_blocks_19_": {
        "name": "joint_blocks.19."
      },
      "joint_blocks_1_": {
        "name": "joint_blocks.1."
      },
      "joint_blocks_20_": {
        "name": "joint_blocks.20."
      },
      "joint_blocks_21_": {
        "name": "joint_blocks.21."
      },
      "joint_blocks_22_": {
        "name": "joint_blocks.22."
      },
      "joint_blocks_23_": {
        "name": "joint_blocks.23."
      },
      "joint_blocks_24_": {
        "name": "joint_blocks.24."
      },
      "joint_blocks_25_": {
        "name": "joint_blocks.25."
      },
      "joint_blocks_26_": {
        "name": "joint_blocks.26."
      },
      "joint_blocks_27_": {
        "name": "joint_blocks.27."
      },
      "joint_blocks_28_": {
        "name": "joint_blocks.28."
      },
      "joint_blocks_29_": {
        "name": "joint_blocks.29."
      },
      "joint_blocks_2_": {
        "name": "joint_blocks.2."
      },
      "joint_blocks_30_": {
        "name": "joint_blocks.30."
      },
      "joint_blocks_31_": {
        "name": "joint_blocks.31."
      },
      "joint_blocks_32_": {
        "name": "joint_blocks.32."
      },
      "joint_blocks_33_": {
        "name": "joint_blocks.33."
      },
      "joint_blocks_34_": {
        "name": "joint_blocks.34."
      },
      "joint_blocks_35_": {
        "name": "joint_blocks.35."
      },
      "joint_blocks_36_": {
        "name": "joint_blocks.36."
      },
      "joint_blocks_37_": {
        "name": "joint_blocks.37."
      },
      "joint_blocks_3_": {
        "name": "joint_blocks.3."
      },
      "joint_blocks_4_": {
        "name": "joint_blocks.4."
      },
      "joint_blocks_5_": {
        "name": "joint_blocks.5."
      },
      "joint_blocks_6_": {
        "name": "joint_blocks.6."
      },
      "joint_blocks_7_": {
        "name": "joint_blocks.7."
      },
      "joint_blocks_8_": {
        "name": "joint_blocks.8."
      },
      "joint_blocks_9_": {
        "name": "joint_blocks.9."
      },
      "model1": {
        "name": "model1"
      },
      "model2": {
        "name": "model2"
      },
      "pos_embed_": {
        "name": "pos_embed."
      },
      "t_embedder_": {
        "name": "t_embedder."
      },
      "x_embedder_": {
        "name": "x_embedder."
      },
      "y_embedder_": {
        "name": "y_embedder."
      }
    }
  },
  "ModelMergeSD3_2B": {
    "display_name": "ModelMergeSD3_2B",
    "inputs": {
      "context_embedder_": {
        "name": "context_embedder."
      },
      "final_layer_": {
        "name": "final_layer."
      },
      "joint_blocks_0_": {
        "name": "joint_blocks.0."
      },
      "joint_blocks_10_": {
        "name": "joint_blocks.10."
      },
      "joint_blocks_11_": {
        "name": "joint_blocks.11."
      },
      "joint_blocks_12_": {
        "name": "joint_blocks.12."
      },
      "joint_blocks_13_": {
        "name": "joint_blocks.13."
      },
      "joint_blocks_14_": {
        "name": "joint_blocks.14."
      },
      "joint_blocks_15_": {
        "name": "joint_blocks.15."
      },
      "joint_blocks_16_": {
        "name": "joint_blocks.16."
      },
      "joint_blocks_17_": {
        "name": "joint_blocks.17."
      },
      "joint_blocks_18_": {
        "name": "joint_blocks.18."
      },
      "joint_blocks_19_": {
        "name": "joint_blocks.19."
      },
      "joint_blocks_1_": {
        "name": "joint_blocks.1."
      },
      "joint_blocks_20_": {
        "name": "joint_blocks.20."
      },
      "joint_blocks_21_": {
        "name": "joint_blocks.21."
      },
      "joint_blocks_22_": {
        "name": "joint_blocks.22."
      },
      "joint_blocks_23_": {
        "name": "joint_blocks.23."
      },
      "joint_blocks_2_": {
        "name": "joint_blocks.2."
      },
      "joint_blocks_3_": {
        "name": "joint_blocks.3."
      },
      "joint_blocks_4_": {
        "name": "joint_blocks.4."
      },
      "joint_blocks_5_": {
        "name": "joint_blocks.5."
      },
      "joint_blocks_6_": {
        "name": "joint_blocks.6."
      },
      "joint_blocks_7_": {
        "name": "joint_blocks.7."
      },
      "joint_blocks_8_": {
        "name": "joint_blocks.8."
      },
      "joint_blocks_9_": {
        "name": "joint_blocks.9."
      },
      "model1": {
        "name": "model1"
      },
      "model2": {
        "name": "model2"
      },
      "pos_embed_": {
        "name": "pos_embed."
      },
      "t_embedder_": {
        "name": "t_embedder."
      },
      "x_embedder_": {
        "name": "x_embedder."
      },
      "y_embedder_": {
        "name": "y_embedder."
      }
    }
  },
  "ModelMergeSDXL": {
    "display_name": "ModelMergeSDXL",
    "inputs": {
      "input_blocks_0": {
        "name": "input_blocks.0"
      },
      "input_blocks_1": {
        "name": "input_blocks.1"
      },
      "input_blocks_2": {
        "name": "input_blocks.2"
      },
      "input_blocks_3": {
        "name": "input_blocks.3"
      },
      "input_blocks_4": {
        "name": "input_blocks.4"
      },
      "input_blocks_5": {
        "name": "input_blocks.5"
      },
      "input_blocks_6": {
        "name": "input_blocks.6"
      },
      "input_blocks_7": {
        "name": "input_blocks.7"
      },
      "input_blocks_8": {
        "name": "input_blocks.8"
      },
      "label_emb_": {
        "name": "label_emb."
      },
      "middle_block_0": {
        "name": "middle_block.0"
      },
      "middle_block_1": {
        "name": "middle_block.1"
      },
      "middle_block_2": {
        "name": "middle_block.2"
      },
      "model1": {
        "name": "model1"
      },
      "model2": {
        "name": "model2"
      },
      "out_": {
        "name": "out."
      },
      "output_blocks_0": {
        "name": "output_blocks.0"
      },
      "output_blocks_1": {
        "name": "output_blocks.1"
      },
      "output_blocks_2": {
        "name": "output_blocks.2"
      },
      "output_blocks_3": {
        "name": "output_blocks.3"
      },
      "output_blocks_4": {
        "name": "output_blocks.4"
      },
      "output_blocks_5": {
        "name": "output_blocks.5"
      },
      "output_blocks_6": {
        "name": "output_blocks.6"
      },
      "output_blocks_7": {
        "name": "output_blocks.7"
      },
      "output_blocks_8": {
        "name": "output_blocks.8"
      },
      "time_embed_": {
        "name": "time_embed."
      }
    }
  },
  "ModelMergeSimple": {
    "display_name": "ModelMergeSimple",
    "inputs": {
      "model1": {
        "name": "model1"
      },
      "model2": {
        "name": "model2"
      },
      "ratio": {
        "name": "ratio"
      }
    }
  },
  "ModelMergeSubtract": {
    "display_name": "ModelMergeSubtract",
    "inputs": {
      "model1": {
        "name": "model1"
      },
      "model2": {
        "name": "model2"
      },
      "multiplier": {
        "name": "multiplier"
      }
    }
  },
  "ModelMergeWAN2_1": {
    "description": "El modelo de 1.3B tiene 30 bloques, el modelo de 14B tiene 40 bloques. El modelo de imagen a video tiene el img_emb extra.",
    "display_name": "ModelMergeWAN2_1",
    "inputs": {
      "blocks_0_": {
        "name": "blocks.0."
      },
      "blocks_10_": {
        "name": "blocks.10."
      },
      "blocks_11_": {
        "name": "blocks.11."
      },
      "blocks_12_": {
        "name": "blocks.12."
      },
      "blocks_13_": {
        "name": "blocks.13."
      },
      "blocks_14_": {
        "name": "blocks.14."
      },
      "blocks_15_": {
        "name": "blocks.15."
      },
      "blocks_16_": {
        "name": "blocks.16."
      },
      "blocks_17_": {
        "name": "blocks.17."
      },
      "blocks_18_": {
        "name": "blocks.18."
      },
      "blocks_19_": {
        "name": "blocks.19."
      },
      "blocks_1_": {
        "name": "blocks.1."
      },
      "blocks_20_": {
        "name": "blocks.20."
      },
      "blocks_21_": {
        "name": "blocks.21."
      },
      "blocks_22_": {
        "name": "blocks.22."
      },
      "blocks_23_": {
        "name": "blocks.23."
      },
      "blocks_24_": {
        "name": "blocks.24."
      },
      "blocks_25_": {
        "name": "blocks.25."
      },
      "blocks_26_": {
        "name": "blocks.26."
      },
      "blocks_27_": {
        "name": "blocks.27."
      },
      "blocks_28_": {
        "name": "blocks.28."
      },
      "blocks_29_": {
        "name": "blocks.29."
      },
      "blocks_2_": {
        "name": "blocks.2."
      },
      "blocks_30_": {
        "name": "blocks.30."
      },
      "blocks_31_": {
        "name": "blocks.31."
      },
      "blocks_32_": {
        "name": "blocks.32."
      },
      "blocks_33_": {
        "name": "blocks.33."
      },
      "blocks_34_": {
        "name": "blocks.34."
      },
      "blocks_35_": {
        "name": "blocks.35."
      },
      "blocks_36_": {
        "name": "blocks.36."
      },
      "blocks_37_": {
        "name": "blocks.37."
      },
      "blocks_38_": {
        "name": "blocks.38."
      },
      "blocks_39_": {
        "name": "blocks.39."
      },
      "blocks_3_": {
        "name": "blocks.3."
      },
      "blocks_4_": {
        "name": "blocks.4."
      },
      "blocks_5_": {
        "name": "blocks.5."
      },
      "blocks_6_": {
        "name": "blocks.6."
      },
      "blocks_7_": {
        "name": "blocks.7."
      },
      "blocks_8_": {
        "name": "blocks.8."
      },
      "blocks_9_": {
        "name": "blocks.9."
      },
      "head_": {
        "name": "head."
      },
      "img_emb_": {
        "name": "img_emb."
      },
      "model1": {
        "name": "model1"
      },
      "model2": {
        "name": "model2"
      },
      "patch_embedding_": {
        "name": "patch_embedding."
      },
      "text_embedding_": {
        "name": "text_embedding."
      },
      "time_embedding_": {
        "name": "time_embedding."
      },
      "time_projection_": {
        "name": "time_projection."
      }
    }
  },
  "ModelSamplingAuraFlow": {
    "display_name": "ModelSamplingAuraFlow",
    "inputs": {
      "model": {
        "name": "model"
      },
      "shift": {
        "name": "shift"
      }
    }
  },
  "ModelSamplingContinuousEDM": {
    "display_name": "ModelSamplingContinuousEDM",
    "inputs": {
      "model": {
        "name": "model"
      },
      "sampling": {
        "name": "muestreo"
      },
      "sigma_max": {
        "name": "sigma_max"
      },
      "sigma_min": {
        "name": "sigma_min"
      }
    }
  },
  "ModelSamplingContinuousV": {
    "display_name": "ModelSamplingContinuousV",
    "inputs": {
      "model": {
        "name": "model"
      },
      "sampling": {
        "name": "muestreo"
      },
      "sigma_max": {
        "name": "sigma_max"
      },
      "sigma_min": {
        "name": "sigma_min"
      }
    }
  },
  "ModelSamplingDiscrete": {
    "display_name": "MuestreoDeModeloDiscreto",
    "inputs": {
      "model": {
        "name": "modelo"
      },
      "sampling": {
        "name": "muestreo"
      },
      "zsnr": {
        "name": "zsnr"
      }
    }
  },
  "ModelSamplingFlux": {
    "display_name": "MuestreoDeModeloFlux",
    "inputs": {
      "base_shift": {
        "name": "desplazamiento_base"
      },
      "height": {
        "name": "altura"
      },
      "max_shift": {
        "name": "desplazamiento_max"
      },
      "model": {
        "name": "modelo"
      },
      "width": {
        "name": "ancho"
      }
    }
  },
  "ModelSamplingLTXV": {
    "display_name": "MuestreoDeModeloLTXV",
    "inputs": {
      "base_shift": {
        "name": "desplazamiento_base"
      },
      "latent": {
        "name": "latente"
      },
      "max_shift": {
        "name": "desplazamiento_max"
      },
      "model": {
        "name": "modelo"
      }
    }
  },
  "ModelSamplingSD3": {
    "display_name": "MuestreoDeModeloSD3",
    "inputs": {
      "model": {
        "name": "modelo"
      },
      "shift": {
        "name": "desplazamiento"
      }
    }
  },
  "ModelSamplingStableCascade": {
    "display_name": "MuestreoDeModeloStableCascade",
    "inputs": {
      "model": {
        "name": "modelo"
      },
      "shift": {
        "name": "desplazamiento"
      }
    }
  },
  "ModelSave": {
    "display_name": "GuardarModelo",
    "inputs": {
      "filename_prefix": {
        "name": "prefijo_nombre_archivo"
      },
      "model": {
        "name": "modelo"
      }
    }
  },
  "Morphology": {
    "display_name": "MorfologiaDeImagen",
    "inputs": {
      "image": {
        "name": "imagen"
      },
      "kernel_size": {
        "name": "tamaño_kernel"
      },
      "operation": {
        "name": "operacion"
      }
    }
  },
  "OpenAIDalle2": {
    "description": "Genera imágenes de forma síncrona a través del endpoint DALL·E 2 de OpenAI.",
    "display_name": "OpenAI DALL·E 2",
    "inputs": {
      "control_after_generate": {
        "name": "controlar después de generar"
      },
      "image": {
        "name": "imagen",
        "tooltip": "Imagen de referencia opcional para la edición de imágenes."
      },
      "mask": {
        "name": "mask",
        "tooltip": "Máscara opcional para inpainting (las áreas blancas serán reemplazadas)"
      },
      "n": {
        "name": "n",
        "tooltip": "Cuántas imágenes generar"
      },
      "prompt": {
        "name": "prompt",
        "tooltip": "Texto de entrada para DALL·E"
      },
      "seed": {
        "name": "seed",
        "tooltip": "aún no implementado en el backend"
      },
      "size": {
        "name": "tamaño",
        "tooltip": "Tamaño de la imagen"
      }
    }
  },
  "OpenAIDalle3": {
    "description": "Genera imágenes de forma sincrónica a través del endpoint DALL·E 3 de OpenAI.",
    "display_name": "OpenAI DALL·E 3",
    "inputs": {
      "control_after_generate": {
        "name": "controlar después de generar"
      },
      "prompt": {
        "name": "prompt",
        "tooltip": "Texto de entrada para DALL·E"
      },
      "quality": {
        "name": "calidad",
        "tooltip": "Calidad de la imagen"
      },
      "seed": {
        "name": "seed",
        "tooltip": "aún no implementado en el backend"
      },
      "size": {
        "name": "tamaño",
        "tooltip": "Tamaño de la imagen"
      },
      "style": {
        "name": "estilo",
        "tooltip": "Vívido hace que el modelo tienda a generar imágenes hiperrealistas y dramáticas. Natural hace que el modelo produzca imágenes más naturales y menos hiperrealistas."
      }
    }
  },
  "OpenAIGPTImage1": {
    "description": "Genera imágenes de forma síncrona a través del endpoint GPT Image 1 de OpenAI.",
    "display_name": "OpenAI GPT Image 1",
    "inputs": {
      "background": {
        "name": "background",
        "tooltip": "Devolver imagen con o sin fondo"
      },
      "control_after_generate": {
        "name": "control after generate"
      },
      "image": {
        "name": "image",
        "tooltip": "Imagen de referencia opcional para edición de imagen."
      },
      "mask": {
        "name": "mask",
        "tooltip": "Máscara opcional para inpainting (las áreas blancas serán reemplazadas)"
      },
      "n": {
        "name": "n",
        "tooltip": "Cuántas imágenes generar"
      },
      "prompt": {
        "name": "prompt",
        "tooltip": "Texto de entrada para GPT Image 1"
      },
      "quality": {
        "name": "quality",
        "tooltip": "Calidad de la imagen, afecta el costo y el tiempo de generación."
      },
      "seed": {
        "name": "seed",
        "tooltip": "aún no implementado en el backend"
      },
      "size": {
        "name": "size",
        "tooltip": "Tamaño de la imagen"
      }
    }
  },
  "OptimalStepsScheduler": {
    "display_name": "OptimalStepsScheduler",
    "inputs": {
      "denoise": {
        "name": "eliminar ruido"
      },
      "model_type": {
        "name": "model_type"
      },
      "steps": {
        "name": "pasos"
      }
    }
  },
  "PairConditioningCombine": {
    "display_name": "CombinarCondPares",
    "inputs": {
      "negative_A": {
        "name": "negativo_A"
      },
      "negative_B": {
        "name": "negativo_B"
      },
      "positive_A": {
        "name": "positivo_A"
      },
      "positive_B": {
        "name": "positivo_B"
      }
    },
    "outputs": {
      "0": {
        "name": "positivo"
      },
      "1": {
        "name": "negativo"
      }
    }
  },
  "PairConditioningSetDefaultCombine": {
    "display_name": "CombinarCondParesEstablecerPorDefecto",
    "inputs": {
      "hooks": {
        "name": "ganchos"
      },
      "negative": {
        "name": "negativo"
      },
      "negative_DEFAULT": {
        "name": "negativo_POR_DEFECTO"
      },
      "positive": {
        "name": "positivo"
      },
      "positive_DEFAULT": {
        "name": "positivo_POR_DEFECTO"
      }
    },
    "outputs": {
      "0": {
        "name": "positivo"
      },
      "1": {
        "name": "negativo"
      }
    }
  },
  "PairConditioningSetProperties": {
    "display_name": "EstablecerPropiedadesCondPares",
    "inputs": {
      "hooks": {
        "name": "ganchos"
      },
      "mask": {
        "name": "mascara"
      },
      "negative_NEW": {
        "name": "negativo_NUEVO"
      },
      "positive_NEW": {
        "name": "positivo_NUEVO"
      },
      "set_cond_area": {
        "name": "establecer_area_cond"
      },
      "strength": {
        "name": "fuerza"
      },
      "timesteps": {
        "name": "pasos_de_tiempo"
      }
    },
    "outputs": {
      "0": {
        "name": "positivo"
      },
      "1": {
        "name": "negativo"
      }
    }
  },
  "PairConditioningSetPropertiesAndCombine": {
    "display_name": "Cond Pair Set Props Combine",
    "inputs": {
      "hooks": {
        "name": "ganchos"
      },
      "mask": {
        "name": "máscara"
      },
      "negative": {
        "name": "negativo"
      },
      "negative_NEW": {
        "name": "negativo_NUEVO"
      },
      "positive": {
        "name": "positivo"
      },
      "positive_NEW": {
        "name": "positivo_NUEVO"
      },
      "set_cond_area": {
        "name": "set_area_cond"
      },
      "strength": {
        "name": "fuerza"
      },
      "timesteps": {
        "name": "pasos_de_tiempo"
      }
    },
    "outputs": {
      "0": {
        "name": "positivo"
      },
      "1": {
        "name": "negativo"
      }
    }
  },
  "PatchModelAddDownscale": {
    "display_name": "PatchModelAddDownscale (Kohya Deep Shrink)",
    "inputs": {
      "block_number": {
        "name": "numero_de_bloque"
      },
      "downscale_after_skip": {
        "name": "reducción_después_de_omitir"
      },
      "downscale_factor": {
        "name": "factor_de_reducción"
      },
      "downscale_method": {
        "name": "método_de_reducción"
      },
      "end_percent": {
        "name": "porcentaje_final"
      },
      "model": {
        "name": "modelo"
      },
      "start_percent": {
        "name": "porcentaje_inicial"
      },
      "upscale_method": {
        "name": "método_de_ampliación"
      }
    }
  },
  "PerpNeg": {
    "display_name": "Perp-Neg (DEPRECATED by PerpNegGuider)",
    "inputs": {
      "empty_conditioning": {
        "name": "condicionamiento_vacío"
      },
      "model": {
        "name": "modelo"
      },
      "neg_scale": {
        "name": "escala_neg"
      }
    }
  },
  "PerpNegGuider": {
    "display_name": "PerpNegGuider",
    "inputs": {
      "cfg": {
        "name": "cfg"
      },
      "empty_conditioning": {
        "name": "condicionamiento_vacío"
      },
      "model": {
        "name": "modelo"
      },
      "neg_scale": {
        "name": "escala_neg"
      },
      "negative": {
        "name": "negativo"
      },
      "positive": {
        "name": "positivo"
      }
    }
  },
  "PerturbedAttentionGuidance": {
    "display_name": "PerturbedAttentionGuidance",
    "inputs": {
      "model": {
        "name": "modelo"
      },
      "scale": {
        "name": "escala"
      }
    }
  },
  "PhotoMakerEncode": {
    "display_name": "PhotoMakerEncode",
    "inputs": {
      "clip": {
        "name": "clip"
      },
      "image": {
        "name": "imagen"
      },
      "photomaker": {
        "name": "photomaker"
      },
      "text": {
        "name": "texto"
      }
    }
  },
  "PhotoMakerLoader": {
    "display_name": "PhotoMakerLoader",
    "inputs": {
      "photomaker_model_name": {
        "name": "nombre_del_modelo_photomaker"
      }
    }
  },
  "PikaImageToVideoNode2_2": {
    "description": "Envía una imagen y un prompt a la API de Pika v2.2 para generar un video.",
    "display_name": "Pika Imagen a Video",
    "inputs": {
      "control_after_generate": {
        "name": "control después de generar"
      },
      "duration": {
        "name": "duración"
      },
      "image": {
        "name": "imagen",
        "tooltip": "La imagen a convertir en video"
      },
      "negative_prompt": {
        "name": "prompt negativo"
      },
      "prompt_text": {
        "name": "texto del prompt"
      },
      "resolution": {
        "name": "resolución"
      },
      "seed": {
        "name": "semilla"
      }
    }
  },
  "PikaScenesV2_2": {
    "description": "Combina tus imágenes para crear un video con los objetos que contienen. Sube varias imágenes como ingredientes y genera un video de alta calidad que las incorpore todas.",
    "display_name": "Pika Scenes (Composición de Imágenes en Video)",
    "inputs": {
      "aspect_ratio": {
        "name": "aspect_ratio",
        "tooltip": "Relación de aspecto (ancho / alto)"
      },
      "control_after_generate": {
        "name": "control after generate"
      },
      "duration": {
        "name": "duration"
      },
      "image_ingredient_1": {
        "name": "image_ingredient_1",
        "tooltip": "Imagen que se usará como ingrediente para crear un video."
      },
      "image_ingredient_2": {
        "name": "image_ingredient_2",
        "tooltip": "Imagen que se usará como ingrediente para crear un video."
      },
      "image_ingredient_3": {
        "name": "image_ingredient_3",
        "tooltip": "Imagen que se usará como ingrediente para crear un video."
      },
      "image_ingredient_4": {
        "name": "image_ingredient_4",
        "tooltip": "Imagen que se usará como ingrediente para crear un video."
      },
      "image_ingredient_5": {
        "name": "image_ingredient_5",
        "tooltip": "Imagen que se usará como ingrediente para crear un video."
      },
      "ingredients_mode": {
        "name": "ingredients_mode"
      },
      "negative_prompt": {
        "name": "negative_prompt"
      },
      "prompt_text": {
        "name": "prompt_text"
      },
      "resolution": {
        "name": "resolution"
      },
      "seed": {
        "name": "seed"
      }
    }
  },
  "PikaStartEndFrameNode2_2": {
    "description": "Genera un video combinando tu primer y último fotograma. Sube dos imágenes para definir los puntos de inicio y fin, y deja que la IA cree una transición suave entre ellas.",
    "display_name": "Pika: Fotograma Inicial y Final a Video",
    "inputs": {
      "control_after_generate": {
        "name": "control después de generar"
      },
      "duration": {
        "name": "duración"
      },
      "image_end": {
        "name": "imagen_final",
        "tooltip": "La última imagen a combinar."
      },
      "image_start": {
        "name": "imagen_inicial",
        "tooltip": "La primera imagen a combinar."
      },
      "negative_prompt": {
        "name": "prompt_negativo"
      },
      "prompt_text": {
        "name": "texto_de_prompt"
      },
      "resolution": {
        "name": "resolución"
      },
      "seed": {
        "name": "semilla"
      }
    }
  },
  "PikaTextToVideoNode2_2": {
    "description": "Envía un prompt de texto a la API de Pika v2.2 para generar un video.",
    "display_name": "Pika Texto a Video",
    "inputs": {
      "aspect_ratio": {
        "name": "relación de aspecto",
        "tooltip": "Relación de aspecto (ancho / alto)"
      },
      "control_after_generate": {
        "name": "controlar después de generar"
      },
      "duration": {
        "name": "duración"
      },
      "negative_prompt": {
        "name": "prompt negativo"
      },
      "prompt_text": {
        "name": "texto del prompt"
      },
      "resolution": {
        "name": "resolución"
      },
      "seed": {
        "name": "semilla"
      }
    }
  },
  "Pikadditions": {
    "description": "Agrega cualquier objeto o imagen a tu video. Sube un video y especifica lo que deseas añadir para crear un resultado perfectamente integrado.",
    "display_name": "Pikadditions (Inserción de Objetos en Video)",
    "inputs": {
      "control_after_generate": {
        "name": "control después de generar"
      },
      "image": {
        "name": "imagen",
        "tooltip": "La imagen que se añadirá al video."
      },
      "negative_prompt": {
        "name": "indicación negativa"
      },
      "prompt_text": {
        "name": "texto de indicación"
      },
      "seed": {
        "name": "semilla"
      },
      "video": {
        "name": "video",
        "tooltip": "El video al que se añadirá una imagen."
      }
    }
  },
  "Pikaffects": {
    "description": "Genera un video con un Pikaffect específico. Pikaffects soportados: Cake-ify, Crumble, Crush, Decapitate, Deflate, Dissolve, Explode, Eye-pop, Inflate, Levitate, Melt, Peel, Poke, Squish, Ta-da, Tear",
    "display_name": "Pikaffects (Efectos de Video)",
    "inputs": {
      "control_after_generate": {
        "name": "control después de generar"
      },
      "image": {
        "name": "imagen",
        "tooltip": "La imagen de referencia a la que se aplicará el Pikaffect."
      },
      "negative_prompt": {
        "name": "prompt negativo"
      },
      "pikaffect": {
        "name": "pikaffect"
      },
      "prompt_text": {
        "name": "texto de prompt"
      },
      "seed": {
        "name": "semilla"
      }
    }
  },
  "Pikaswaps": {
    "description": "Sustituye cualquier objeto o región de tu video con una nueva imagen u objeto. Define las áreas a reemplazar usando una máscara o coordenadas.",
    "display_name": "Pika Swaps (Reemplazo de Objetos en Video)",
    "inputs": {
      "control_after_generate": {
        "name": "control después de generar"
      },
      "image": {
        "name": "imagen",
        "tooltip": "La imagen utilizada para reemplazar el objeto enmascarado en el video."
      },
      "mask": {
        "name": "máscara",
        "tooltip": "Usa la máscara para definir las áreas del video a reemplazar"
      },
      "negative_prompt": {
        "name": "prompt negativo"
      },
      "prompt_text": {
        "name": "texto de prompt"
      },
      "seed": {
        "name": "semilla"
      },
      "video": {
        "name": "video",
        "tooltip": "El video en el que se va a intercambiar un objeto."
      }
    }
  },
  "PixverseImageToVideoNode": {
    "description": "Genera videos de forma sincrónica según el prompt y el tamaño de salida.",
    "display_name": "PixVerse Imagen a Video",
    "inputs": {
      "control_after_generate": {
        "name": "controlar después de generar"
      },
      "duration_seconds": {
        "name": "duración_en_segundos"
      },
      "image": {
        "name": "imagen"
      },
      "motion_mode": {
        "name": "modo_de_movimiento"
      },
      "negative_prompt": {
        "name": "prompt_negativo",
        "tooltip": "Una descripción opcional en texto de los elementos no deseados en una imagen."
      },
      "pixverse_template": {
        "name": "plantilla_pixverse",
        "tooltip": "Una plantilla opcional para influir en el estilo de la generación, creada por el nodo PixVerse Template."
      },
      "prompt": {
        "name": "prompt",
        "tooltip": "Prompt para la generación del video"
      },
      "quality": {
        "name": "calidad"
      },
      "seed": {
        "name": "semilla",
        "tooltip": "Semilla para la generación del video."
      }
    }
  },
  "PixverseTemplateNode": {
    "display_name": "Plantilla de PixVerse",
    "inputs": {
      "template": {
        "name": "plantilla"
      }
    },
    "outputs": {
      "0": {
        "name": "plantilla_pixverse"
      }
    }
  },
  "PixverseTextToVideoNode": {
    "description": "Genera videos de forma sincrónica basados en el prompt y el tamaño de salida.",
    "display_name": "PixVerse Texto a Video",
    "inputs": {
      "aspect_ratio": {
        "name": "relación_de_aspecto"
      },
      "control_after_generate": {
        "name": "controlar después de generar"
      },
      "duration_seconds": {
        "name": "duración_segundos"
      },
      "motion_mode": {
        "name": "modo_de_movimiento"
      },
      "negative_prompt": {
        "name": "prompt_negativo",
        "tooltip": "Una descripción opcional en texto de los elementos no deseados en una imagen."
      },
      "pixverse_template": {
        "name": "plantilla_pixverse",
        "tooltip": "Una plantilla opcional para influir en el estilo de la generación, creada por el nodo PixVerse Template."
      },
      "prompt": {
        "name": "prompt",
        "tooltip": "Prompt para la generación de video"
      },
      "quality": {
        "name": "calidad"
      },
      "seed": {
        "name": "semilla",
        "tooltip": "Semilla para la generación de video."
      }
    }
  },
  "PixverseTransitionVideoNode": {
    "description": "Genera videos de forma sincrónica según el prompt y el tamaño de salida.",
    "display_name": "Video de Transición PixVerse",
    "inputs": {
      "control_after_generate": {
        "name": "controlar después de generar"
      },
      "duration_seconds": {
        "name": "duración en segundos"
      },
      "first_frame": {
        "name": "primer fotograma"
      },
      "last_frame": {
        "name": "último fotograma"
      },
      "motion_mode": {
        "name": "modo de movimiento"
      },
      "negative_prompt": {
        "name": "prompt negativo",
        "tooltip": "Una descripción opcional en texto de los elementos no deseados en una imagen."
      },
      "prompt": {
        "name": "prompt",
        "tooltip": "Prompt para la generación de video"
      },
      "quality": {
        "name": "calidad"
      },
      "seed": {
        "name": "semilla",
        "tooltip": "Semilla para la generación de video."
      }
    }
  },
  "PolyexponentialScheduler": {
    "display_name": "PolyexponentialScheduler",
    "inputs": {
      "rho": {
        "name": "rho"
      },
      "sigma_max": {
        "name": "sigma_max"
      },
      "sigma_min": {
        "name": "sigma_min"
      },
      "steps": {
        "name": "pasos"
      }
    }
  },
  "PorterDuffImageComposite": {
    "display_name": "Composición de Imagen Porter-Duff",
    "inputs": {
      "destination": {
        "name": "destino"
      },
      "destination_alpha": {
        "name": "alfa_destino"
      },
      "mode": {
        "name": "modo"
      },
      "source": {
        "name": "fuente"
      },
      "source_alpha": {
        "name": "alfa_fuente"
      }
    }
  },
  "Preview3D": {
    "display_name": "Vista previa 3D",
    "inputs": {
      "camera_info": {
        "name": "camera_info"
      },
      "image": {
        "name": "imagen"
      },
      "model_file": {
        "name": "archivo_modelo"
      }
    }
  },
  "Preview3DAnimation": {
    "display_name": "Vista previa 3D - Animación",
    "inputs": {
      "camera_info": {
        "name": "camera_info"
      },
      "image": {
        "name": "imagen"
      },
      "model_file": {
        "name": "archivo_modelo"
      }
    }
  },
  "PreviewAny": {
    "display_name": "Vista previa de cualquier",
    "inputs": {
      "preview": {
      },
      "source": {
        "name": "fuente"
      }
    }
  },
  "PreviewAudio": {
    "display_name": "Vista previa de audio",
    "inputs": {
      "audio": {
        "name": "audio"
      },
      "audioUI": {
        "name": "interfaz_audio"
      }
    }
  },
  "PreviewImage": {
    "description": "Guarda las imágenes de entrada en tu directorio de salida de ComfyUI.",
    "display_name": "Vista previa de imagen",
    "inputs": {
      "images": {
        "name": "imagenes"
      }
    }
  },
  "PrimitiveBoolean": {
    "display_name": "Booleano",
    "inputs": {
      "value": {
        "name": "valor"
      }
    }
  },
  "PrimitiveFloat": {
    "display_name": "Flotante",
    "inputs": {
      "value": {
        "name": "valor"
      }
    }
  },
  "PrimitiveInt": {
    "display_name": "Int",
    "inputs": {
      "control_after_generate": {
        "name": "controlar después de generar"
      },
      "value": {
        "name": "valor"
      }
    }
  },
  "PrimitiveString": {
    "display_name": "Cadena",
    "inputs": {
      "value": {
        "name": "valor"
      }
    }
  },
  "PrimitiveStringMultiline": {
    "display_name": "Cadena (Multilínea)",
    "inputs": {
      "value": {
        "name": "valor"
      }
    }
  },
  "QuadrupleCLIPLoader": {
    "description": "[Recetas]\n\nhidream: long clip-l, long clip-g, t5xxl, llama_8b_3.1_instruct",
    "display_name": "QuadrupleCLIPLoader",
    "inputs": {
      "clip_name1": {
        "name": "clip_name1"
      },
      "clip_name2": {
        "name": "clip_name2"
      },
      "clip_name3": {
        "name": "clip_name3"
      },
      "clip_name4": {
        "name": "clip_name4"
      }
    }
  },
  "RandomNoise": {
    "display_name": "Ruido aleatorio",
    "inputs": {
      "control_after_generate": {
        "name": "control después de generar"
      },
      "noise_seed": {
        "name": "semilla_ruido"
      }
    }
  },
  "RebatchImages": {
    "display_name": "Reagrupar imágenes",
    "inputs": {
      "batch_size": {
        "name": "tamaño_lote"
      },
      "images": {
        "name": "imagenes"
      }
    }
  },
  "RebatchLatents": {
    "display_name": "Reagrupar latentes",
    "inputs": {
      "batch_size": {
        "name": "tamaño_lote"
      },
      "latents": {
        "name": "latentes"
      }
    }
  },
  "RecraftColorRGB": {
    "description": "Crea un Recraft Color eligiendo valores RGB específicos.",
    "display_name": "Recraft Color RGB",
    "inputs": {
      "b": {
        "name": "b",
        "tooltip": "Valor azul del color."
      },
      "g": {
        "name": "g",
        "tooltip": "Valor verde del color."
      },
      "r": {
        "name": "r",
        "tooltip": "Valor rojo del color."
      },
      "recraft_color": {
        "name": "recraft_color"
      }
    },
    "outputs": {
      "0": {
        "name": "recraft_color"
      }
    }
  },
  "RecraftControls": {
    "description": "Crea Controles de Recraft para personalizar la generación de Recraft.",
    "display_name": "Controles de Recraft",
    "inputs": {
      "background_color": {
        "name": "color_de_fondo"
      },
      "colors": {
        "name": "colores"
      }
    },
    "outputs": {
      "0": {
        "name": "controles_recraft"
      }
    }
  },
  "RecraftCreativeUpscaleNode": {
    "description": "Aumenta la imagen de forma sincrónica.\nMejora una imagen ráster dada utilizando la herramienta de ‘creative upscale’, aumentando la resolución con un enfoque en refinar pequeños detalles y rostros.",
    "display_name": "Recraft Creative Upscale Image",
    "inputs": {
      "image": {
        "name": "imagen"
      }
    }
  },
  "RecraftCrispUpscaleNode": {
    "description": "Aumenta la imagen de forma sincrónica.\nMejora una imagen ráster dada usando la herramienta ‘crisp upscale’, aumentando la resolución de la imagen y haciéndola más nítida y clara.",
    "display_name": "Recraft Crisp Upscale Image",
    "inputs": {
      "image": {
        "name": "imagen"
      }
    }
  },
  "RecraftImageInpaintingNode": {
    "description": "Modifica la imagen según el prompt y la mask.",
    "display_name": "Recraft Relleno de Imagen",
    "inputs": {
      "control_after_generate": {
        "name": "control después de generar"
      },
      "image": {
        "name": "imagen"
      },
      "mask": {
        "name": "mask"
      },
      "n": {
        "name": "n",
        "tooltip": "El número de imágenes a generar."
      },
      "negative_prompt": {
        "name": "negative_prompt",
        "tooltip": "Una descripción opcional en texto de los elementos no deseados en una imagen."
      },
      "prompt": {
        "name": "prompt",
        "tooltip": "Prompt para la generación de la imagen."
      },
      "recraft_style": {
        "name": "recraft_style"
      },
      "seed": {
        "name": "semilla",
        "tooltip": "Semilla para determinar si el nodo debe ejecutarse de nuevo; los resultados reales son no deterministas independientemente de la semilla."
      }
    }
  },
  "RecraftImageToImageNode": {
    "description": "Modifica la imagen según el prompt y la intensidad.",
    "display_name": "Recraft Imagen a Imagen",
    "inputs": {
      "control_after_generate": {
        "name": "control after generate"
      },
      "image": {
        "name": "imagen"
      },
      "n": {
        "name": "n",
        "tooltip": "El número de imágenes a generar."
      },
      "negative_prompt": {
        "name": "negative_prompt",
        "tooltip": "Una descripción opcional en texto de los elementos no deseados en una imagen."
      },
      "prompt": {
        "name": "prompt",
        "tooltip": "Prompt para la generación de la imagen."
      },
      "recraft_controls": {
        "name": "recraft_controls",
        "tooltip": "Controles adicionales opcionales sobre la generación a través del nodo Recraft Controls."
      },
      "recraft_style": {
        "name": "recraft_style"
      },
      "seed": {
        "name": "semilla",
        "tooltip": "Semilla para determinar si el nodo debe volver a ejecutarse; los resultados reales son no deterministas independientemente de la semilla."
      },
      "strength": {
        "name": "intensidad",
        "tooltip": "Define la diferencia con la imagen original, debe estar en [0, 1], donde 0 significa casi idéntica y 1 significa muy poca similitud."
      }
    }
  },
  "RecraftRemoveBackgroundNode": {
    "description": "Elimina el fondo de la imagen y devuelve la imagen procesada y la máscara.",
    "display_name": "Recraft Remove Background",
    "inputs": {
      "image": {
        "name": "imagen"
      }
    }
  },
  "RecraftReplaceBackgroundNode": {
    "description": "Reemplaza el fondo de una imagen, basado en el prompt proporcionado.",
    "display_name": "Recraft Reemplazar Fondo",
    "inputs": {
      "control_after_generate": {
        "name": "control after generate"
      },
      "image": {
        "name": "imagen"
      },
      "n": {
        "name": "n",
        "tooltip": "El número de imágenes a generar."
      },
      "negative_prompt": {
        "name": "negative_prompt",
        "tooltip": "Una descripción de texto opcional de los elementos no deseados en una imagen."
      },
      "prompt": {
        "name": "prompt",
        "tooltip": "Prompt para la generación de la imagen."
      },
      "recraft_style": {
        "name": "recraft_style"
      },
      "seed": {
        "name": "semilla",
        "tooltip": "Semilla para determinar si el nodo debe ejecutarse de nuevo; los resultados reales son no deterministas independientemente de la semilla."
      }
    }
  },
  "RecraftStyleV3DigitalIllustration": {
    "description": "Selecciona el estilo realistic_image y un subestilo opcional.",
    "display_name": "Estilo Recraft - Ilustración Digital",
    "inputs": {
      "substyle": {
        "name": "subestilo"
      }
    },
    "outputs": {
      "0": {
        "name": "estilo_recraft"
      }
    }
  },
  "RecraftStyleV3InfiniteStyleLibrary": {
    "description": "Selecciona un estilo basado en el UUID preexistente de la Biblioteca de Estilos Infinita de Recraft.",
    "display_name": "Recraft Style - Biblioteca de Estilos Infinita",
    "inputs": {
      "style_id": {
        "name": "style_id",
        "tooltip": "UUID del estilo de la Biblioteca de Estilos Infinita."
      }
    },
    "outputs": {
      "0": {
        "name": "recraft_style"
      }
    }
  },
  "RecraftStyleV3LogoRaster": {
    "description": "Selecciona el estilo realistic_image y un subestilo opcional.",
    "display_name": "Recraft Style - Logo Raster",
    "inputs": {
      "substyle": {
        "name": "subestilo"
      }
    },
    "outputs": {
      "0": {
        "name": "recraft_style"
      }
    }
  },
  "RecraftStyleV3RealisticImage": {
    "description": "Selecciona el estilo realistic_image y un subestilo opcional.",
    "display_name": "Recraft Style - Imagen Realista",
    "inputs": {
      "substyle": {
        "name": "subestilo"
      }
    },
    "outputs": {
      "0": {
        "name": "recraft_style"
      }
    }
  },
  "RecraftTextToImageNode": {
    "description": "Genera imágenes de forma sincrónica según el prompt y la resolución.",
    "display_name": "Recraft Texto a Imagen",
    "inputs": {
      "control_after_generate": {
        "name": "controlar después de generar"
      },
      "n": {
        "name": "n",
        "tooltip": "La cantidad de imágenes a generar."
      },
      "negative_prompt": {
        "name": "negative_prompt",
        "tooltip": "Una descripción opcional en texto de los elementos no deseados en una imagen."
      },
      "prompt": {
        "name": "prompt",
        "tooltip": "Prompt para la generación de la imagen."
      },
      "recraft_controls": {
        "name": "recraft_controls",
        "tooltip": "Controles adicionales opcionales sobre la generación a través del nodo Recraft Controls."
      },
      "recraft_style": {
        "name": "recraft_style"
      },
      "seed": {
        "name": "semilla",
        "tooltip": "Semilla para determinar si el nodo debe volver a ejecutarse; los resultados reales son no deterministas independientemente de la semilla."
      },
      "size": {
        "name": "tamaño",
        "tooltip": "El tamaño de la imagen generada."
      }
    }
  },
  "RecraftTextToVectorNode": {
    "description": "Genera SVG de forma sincrónica según el prompt y la resolución.",
    "display_name": "Recraft Texto a Vector",
    "inputs": {
      "control_after_generate": {
        "name": "control después de generar"
      },
      "n": {
        "name": "n",
        "tooltip": "La cantidad de imágenes a generar."
      },
      "negative_prompt": {
        "name": "negative_prompt",
        "tooltip": "Una descripción opcional en texto de los elementos no deseados en una imagen."
      },
      "prompt": {
        "name": "prompt",
        "tooltip": "Prompt para la generación de la imagen."
      },
      "recraft_controls": {
        "name": "recraft_controls",
        "tooltip": "Controles adicionales opcionales sobre la generación a través del nodo Recraft Controls."
      },
      "seed": {
        "name": "semilla",
        "tooltip": "Semilla para determinar si el nodo debe ejecutarse de nuevo; los resultados reales son no deterministas independientemente de la semilla."
      },
      "size": {
        "name": "tamaño",
        "tooltip": "El tamaño de la imagen generada."
      },
      "substyle": {
        "name": "substyle"
      }
    }
  },
  "RecraftVectorizeImageNode": {
    "description": "Genera SVG de forma sincrónica a partir de una imagen de entrada.",
    "display_name": "Recraft Vectorizar Imagen",
    "inputs": {
      "image": {
        "name": "imagen"
      }
    }
  },
  "RenormCFG": {
    "display_name": "RenormCFG",
    "inputs": {
      "cfg_trunc": {
        "name": "cfg_trunc"
      },
      "model": {
        "name": "modelo"
      },
      "renorm_cfg": {
        "name": "renorm_cfg"
      }
    }
  },
  "RepeatImageBatch": {
    "display_name": "Repetir lote de imágenes",
    "inputs": {
      "amount": {
        "name": "cantidad"
      },
      "image": {
        "name": "imagen"
      }
    }
  },
  "RepeatLatentBatch": {
    "display_name": "Repetir lote latente",
    "inputs": {
      "amount": {
        "name": "cantidad"
      },
      "samples": {
        "name": "muestras"
      }
    }
  },
  "RescaleCFG": {
    "display_name": "ReescalarCFG",
    "inputs": {
      "model": {
        "name": "modelo"
      },
      "multiplier": {
        "name": "multiplicador"
      }
    }
  },
  "SDTurboScheduler": {
    "display_name": "SDTurboScheduler",
    "inputs": {
      "denoise": {
        "name": "reducir_ruido"
      },
      "model": {
        "name": "modelo"
      },
      "steps": {
        "name": "pasos"
      }
    }
  },
  "SD_4XUpscale_Conditioning": {
    "display_name": "SD_4XUpscale_Conditioning",
    "inputs": {
      "images": {
        "name": "imágenes"
      },
      "negative": {
        "name": "negativo"
      },
      "noise_augmentation": {
        "name": "aumento_ruido"
      },
      "positive": {
        "name": "positivo"
      },
      "scale_ratio": {
        "name": "relación_escala"
      }
    },
    "outputs": {
      "0": {
        "name": "positivo"
      },
      "1": {
        "name": "negativo"
      },
      "2": {
        "name": "latente"
      }
    }
  },
  "SV3D_Conditioning": {
    "display_name": "SV3D_Acondicionamiento",
    "inputs": {
      "clip_vision": {
        "name": "clip_vision"
      },
      "elevation": {
        "name": "elevación"
      },
      "height": {
        "name": "altura"
      },
      "init_image": {
        "name": "imagen_inicial"
      },
      "vae": {
        "name": "vae"
      },
      "video_frames": {
        "name": "cuadros_de_video"
      },
      "width": {
        "name": "ancho"
      }
    },
    "outputs": {
      "0": {
        "name": "positivo"
      },
      "1": {
        "name": "negativo"
      },
      "2": {
        "name": "latente"
      }
    }
  },
  "SVD_img2vid_Conditioning": {
    "display_name": "SVD_img2vid_Acondicionamiento",
    "inputs": {
      "augmentation_level": {
        "name": "nivel_de_aumento"
      },
      "clip_vision": {
        "name": "clip_vision"
      },
      "fps": {
        "name": "fps"
      },
      "height": {
        "name": "altura"
      },
      "init_image": {
        "name": "imagen_inicial"
      },
      "motion_bucket_id": {
        "name": "id_del_cubeta_de_movimiento"
      },
      "vae": {
        "name": "vae"
      },
      "video_frames": {
        "name": "cuadros_de_video"
      },
      "width": {
        "name": "ancho"
      }
    },
    "outputs": {
      "0": {
        "name": "positivo"
      },
      "1": {
        "name": "negativo"
      },
      "2": {
        "name": "latente"
      }
    }
  },
  "SamplerCustom": {
    "display_name": "Muestreador personalizado",
    "inputs": {
      "add_noise": {
        "name": "añadir_ruido"
      },
      "cfg": {
        "name": "cfg"
      },
      "control_after_generate": {
        "name": "control después de generar"
      },
      "latent_image": {
        "name": "imagen_latente"
      },
      "model": {
        "name": "modelo"
      },
      "negative": {
        "name": "negativo"
      },
      "noise_seed": {
        "name": "semilla_ruido"
      },
      "positive": {
        "name": "positivo"
      },
      "sampler": {
        "name": "muestreador"
      },
      "sigmas": {
        "name": "sigmas"
      }
    },
    "outputs": {
      "0": {
        "name": "salida"
      },
      "1": {
        "name": "salida_denoisada"
      }
    }
  },
  "SamplerCustomAdvanced": {
    "display_name": "SamplerCustomAdvanced",
    "inputs": {
      "guider": {
        "name": "guía"
      },
      "latent_image": {
        "name": "imagen_latente"
      },
      "noise": {
        "name": "ruido"
      },
      "sampler": {
        "name": "muestreador"
      },
      "sigmas": {
        "name": "sigmas"
      }
    },
    "outputs": {
      "0": {
        "name": "salida"
      },
      "1": {
        "name": "salida_denoised"
      }
    }
  },
  "SamplerDPMAdaptative": {
    "display_name": "SamplerDPMAdaptative",
    "inputs": {
      "accept_safety": {
        "name": "aceptar_seguridad"
      },
      "atol": {
        "name": "atol"
      },
      "dcoeff": {
        "name": "dcoeff"
      },
      "eta": {
        "name": "eta"
      },
      "h_init": {
        "name": "h_init"
      },
      "icoeff": {
        "name": "icoeff"
      },
      "order": {
        "name": "orden"
      },
      "pcoeff": {
        "name": "pcoeff"
      },
      "rtol": {
        "name": "rtol"
      },
      "s_noise": {
        "name": "s_ruido"
      }
    }
  },
  "SamplerDPMPP_2M_SDE": {
    "display_name": "SamplerDPMPP_2M_SDE",
    "inputs": {
      "eta": {
        "name": "eta"
      },
      "noise_device": {
        "name": "dispositivo_ruido"
      },
      "s_noise": {
        "name": "s_ruido"
      },
      "solver_type": {
        "name": "tipo_resolvedor"
      }
    }
  },
  "SamplerDPMPP_2S_Ancestral": {
    "display_name": "SamplerDPMPP_2S_Ancestral",
    "inputs": {
      "eta": {
        "name": "eta"
      },
      "s_noise": {
        "name": "s_ruido"
      }
    }
  },
  "SamplerDPMPP_3M_SDE": {
    "display_name": "SamplerDPMPP_3M_SDE",
    "inputs": {
      "eta": {
        "name": "eta"
      },
      "noise_device": {
        "name": "dispositivo_ruido"
      },
      "s_noise": {
        "name": "s_ruido"
      }
    }
  },
  "SamplerDPMPP_SDE": {
    "display_name": "SamplerDPMPP_SDE",
    "inputs": {
      "eta": {
        "name": "eta"
      },
      "noise_device": {
        "name": "dispositivo_ruido"
      },
      "r": {
        "name": "r"
      },
      "s_noise": {
        "name": "s_ruido"
      }
    }
  },
  "SamplerEulerAncestral": {
    "display_name": "SamplerEulerAncestral",
    "inputs": {
      "eta": {
        "name": "eta"
      },
      "s_noise": {
        "name": "s_ruido"
      }
    }
  },
  "SamplerEulerAncestralCFGPP": {
    "display_name": "SamplerEulerAncestralCFG++",
    "inputs": {
      "eta": {
        "name": "eta"
      },
      "s_noise": {
        "name": "s_ruido"
      }
    }
  },
  "SamplerEulerCFGpp": {
    "display_name": "SamplerEulerCFG++",
    "inputs": {
      "version": {
        "name": "versión"
      }
    }
  },
  "SamplerLCMUpscale": {
    "display_name": "SamplerLCMUpscale",
    "inputs": {
      "scale_ratio": {
        "name": "relación_escala"
      },
      "scale_steps": {
        "name": "pasos_escala"
      },
      "upscale_method": {
        "name": "método_aumento_escala"
      }
    }
  },
  "SamplerLMS": {
    "display_name": "SamplerLMS",
    "inputs": {
      "order": {
        "name": "orden"
      }
    }
  },
  "SaveAnimatedPNG": {
    "display_name": "GuardarPNGAnimado",
    "inputs": {
      "compress_level": {
        "name": "nivel_compresión"
      },
      "filename_prefix": {
        "name": "prefijo_nombre_archivo"
      },
      "fps": {
        "name": "fps"
      },
      "images": {
        "name": "imágenes"
      }
    }
  },
  "SaveAnimatedWEBP": {
    "display_name": "GuardarWEBPAnimado",
    "inputs": {
      "filename_prefix": {
        "name": "prefijo_nombre_archivo"
      },
      "fps": {
        "name": "fps"
      },
      "images": {
        "name": "imágenes"
      },
      "lossless": {
        "name": "sin_pérdidas"
      },
      "method": {
        "name": "método"
      },
      "quality": {
        "name": "calidad"
      }
    }
  },
  "SaveAudio": {
    "display_name": "GuardarAudio",
    "inputs": {
      "audio": {
        "name": "audio"
      },
      "audioUI": {
        "name": "interfaz_audio"
      },
      "filename_prefix": {
        "name": "prefijo_nombre_archivo"
      }
    }
  },
  "SaveGLB": {
    "display_name": "GuardarGLB",
    "inputs": {
      "filename_prefix": {
        "name": "prefijo_nombre_archivo"
      },
      "image": {
        "name": "imagen"
      },
      "mesh": {
        "name": "malla"
      }
    }
  },
  "SaveImage": {
    "description": "Guarda las imágenes de entrada en tu directorio de salida de ComfyUI.",
    "display_name": "Guardar Imagen",
    "inputs": {
      "filename_prefix": {
        "name": "prefijo_nombre_archivo",
        "tooltip": "El prefijo para el archivo a guardar. Esto puede incluir información de formato como %date:yyyy-MM-dd% o %Empty Latent Image.width% para incluir valores de los nodos."
      },
      "images": {
        "name": "imágenes",
        "tooltip": "Las imágenes a guardar."
      }
    }
  },
  "SaveImageWebsocket": {
    "display_name": "GuardarImagenWebsocket",
    "inputs": {
      "images": {
        "name": "imágenes"
      }
    }
  },
  "SaveLatent": {
    "display_name": "GuardarLatente",
    "inputs": {
      "filename_prefix": {
        "name": "prefijo_nombre_archivo"
      },
      "samples": {
        "name": "muestras"
      }
    }
  },
  "SaveSVG": {
    "description": "Guardar archivos SVG en el disco.",
    "display_name": "Guardar SVG",
    "inputs": {
      "filename_prefix": {
        "name": "prefijo_de_archivo",
        "tooltip": "El prefijo para el archivo a guardar. Esto puede incluir información de formato como %date:yyyy-MM-dd% o %Empty Latent Image.width% para incluir valores de los nodos."
      },
      "svg": {
        "name": "svg"
      }
    }
  },
  "SaveVideo": {
    "description": "Guarda las imágenes de entrada en tu directorio de salida de ComfyUI.",
    "display_name": "Guardar video",
    "inputs": {
      "codec": {
        "name": "códec",
        "tooltip": "El códec que se usará para el video."
      },
      "filename_prefix": {
        "name": "prefijo_nombre_archivo",
        "tooltip": "El prefijo para el archivo a guardar. Esto puede incluir información de formato como %date:yyyy-MM-dd% o %Empty Latent Image.width% para incluir valores de los nodos."
      },
      "format": {
        "name": "formato",
        "tooltip": "El formato en el que se guardará el video."
      },
      "video": {
        "name": "video",
        "tooltip": "El video que se va a guardar."
      }
    }
  },
  "SaveWEBM": {
    "display_name": "GuardarWEBM",
    "inputs": {
      "codec": {
        "name": "códec"
      },
      "crf": {
        "name": "crf",
        "tooltip": "Un crf más alto significa menor calidad con un tamaño de archivo más pequeño, un crf más bajo significa mayor calidad con un tamaño de archivo más grande."
      },
      "filename_prefix": {
        "name": "prefijo_nombre_archivo"
      },
      "fps": {
        "name": "fps"
      },
      "images": {
        "name": "imágenes"
      }
    }
  },
  "SelfAttentionGuidance": {
    "display_name": "Orientación de Auto-Atención",
    "inputs": {
      "blur_sigma": {
        "name": "blur_sigma"
      },
      "model": {
        "name": "modelo"
      },
      "scale": {
        "name": "escala"
      }
    }
  },
  "SetClipHooks": {
    "display_name": "Establecer Ganchos CLIP",
    "inputs": {
      "apply_to_conds": {
        "name": "aplicar_a_conds"
      },
      "clip": {
        "name": "clip"
      },
      "hooks": {
        "name": "ganchos"
      },
      "schedule_clip": {
        "name": "programar_clip"
      }
    }
  },
  "SetFirstSigma": {
    "display_name": "EstablecerPrimeraSigma",
    "inputs": {
      "sigma": {
        "name": "sigma"
      },
      "sigmas": {
        "name": "sigmas"
      }
    }
  },
  "SetHookKeyframes": {
    "display_name": "Establecer Fotogramas Clave de Gancho",
    "inputs": {
      "hook_kf": {
        "name": "gancho_kf"
      },
      "hooks": {
        "name": "ganchos"
      }
    }
  },
  "SetLatentNoiseMask": {
    "display_name": "Establecer Máscara de Ruido Latente",
    "inputs": {
      "mask": {
        "name": "máscara"
      },
      "samples": {
        "name": "muestras"
      }
    }
  },
  "SetUnionControlNetType": {
    "display_name": "EstablecerTipoDeRedDeControlUnion",
    "inputs": {
      "control_net": {
        "name": "controlnet"
      },
      "type": {
        "name": "tipo"
      }
    }
  },
  "SkipLayerGuidanceDiT": {
    "description": "Versión genérica del nodo de Orientación de Capa de Salto que se puede usar en cada modelo DiT.",
    "display_name": "Orientación de Capa de Salto DiT",
    "inputs": {
      "double_layers": {
        "name": "capas_dobles"
      },
      "end_percent": {
        "name": "porcentaje_final"
      },
      "model": {
        "name": "modelo"
      },
      "rescaling_scale": {
        "name": "escala_reescalado"
      },
      "scale": {
        "name": "escala"
      },
      "single_layers": {
        "name": "capas_simples"
      },
      "start_percent": {
        "name": "porcentaje_inicio"
      }
    }
  },
  "SkipLayerGuidanceSD3": {
    "description": "Versión genérica del nodo de Orientación de Capa de Salto que se puede usar en cada modelo DiT.",
    "display_name": "Orientación de Capa de Salto SD3",
    "inputs": {
      "end_percent": {
        "name": "porcentaje_final"
      },
      "layers": {
        "name": "capas"
      },
      "model": {
        "name": "modelo"
      },
      "scale": {
        "name": "escala"
      },
      "start_percent": {
        "name": "porcentaje_inicio"
      }
    }
  },
  "SolidMask": {
    "display_name": "Máscara Sólida",
    "inputs": {
      "height": {
        "name": "altura"
      },
      "value": {
        "name": "valor"
      },
      "width": {
        "name": "ancho"
      }
    }
  },
  "SplitImageWithAlpha": {
    "display_name": "Dividir Imagen con Alfa",
    "inputs": {
      "image": {
        "name": "imagen"
      }
    }
  },
  "SplitSigmas": {
    "display_name": "DividirSigmas",
    "inputs": {
      "sigmas": {
        "name": "sigmas"
      },
      "step": {
        "name": "paso"
      }
    },
    "outputs": {
      "0": {
        "name": "sigmas_altas"
      },
      "1": {
        "name": "sigmas_bajas"
      }
    }
  },
  "SplitSigmasDenoise": {
    "display_name": "SplitSigmasDenoise",
    "inputs": {
      "denoise": {
        "name": "denoise"
      },
      "sigmas": {
        "name": "sigmas"
      }
    },
    "outputs": {
      "0": {
        "name": "high_sigmas"
      },
      "1": {
        "name": "low_sigmas"
      }
    }
  },
  "StabilityStableImageSD_3_5Node": {
    "description": "Genera imágenes de forma sincrónica según el prompt y la resolución.",
    "display_name": "Stability AI Stable Diffusion 3.5 Imagen",
    "inputs": {
      "aspect_ratio": {
        "name": "aspect_ratio",
        "tooltip": "Relación de aspecto de la imagen generada."
      },
      "cfg_scale": {
        "name": "cfg_scale",
        "tooltip": "Qué tan estrictamente el proceso de difusión se adhiere al texto del prompt (valores más altos mantienen la imagen más cercana a tu prompt)."
      },
      "control_after_generate": {
        "name": "control after generate"
      },
      "image": {
        "name": "image"
      },
      "image_denoise": {
        "name": "image_denoise",
        "tooltip": "Reducción de ruido de la imagen de entrada; 0.0 produce una imagen idéntica a la entrada, 1.0 es como si no se hubiera proporcionado ninguna imagen."
      },
      "model": {
        "name": "model"
      },
      "negative_prompt": {
        "name": "negative_prompt",
        "tooltip": "Palabras clave de lo que no deseas ver en la imagen de salida. Esta es una función avanzada."
      },
      "prompt": {
        "name": "prompt",
        "tooltip": "Lo que deseas ver en la imagen de salida. Un prompt fuerte y descriptivo que defina claramente los elementos, colores y sujetos dará mejores resultados."
      },
      "seed": {
        "name": "seed",
        "tooltip": "La semilla aleatoria utilizada para crear el ruido."
      },
      "style_preset": {
        "name": "style_preset",
        "tooltip": "Estilo opcional deseado para la imagen generada."
      }
    }
  },
  "StabilityStableImageUltraNode": {
    "description": "Genera imágenes de forma sincrónica según el prompt y la resolución.",
    "display_name": "Stability AI Stable Image Ultra",
    "inputs": {
      "aspect_ratio": {
        "name": "aspect_ratio",
        "tooltip": "Relación de aspecto de la imagen generada."
      },
      "control_after_generate": {
        "name": "control after generate"
      },
      "image": {
        "name": "image"
      },
      "image_denoise": {
        "name": "image_denoise",
        "tooltip": "Nivel de eliminación de ruido de la imagen de entrada; 0.0 produce una imagen idéntica a la entrada, 1.0 es como si no se hubiera proporcionado ninguna imagen."
      },
      "negative_prompt": {
        "name": "negative_prompt",
        "tooltip": "Un texto que describe lo que no deseas ver en la imagen de salida. Esta es una función avanzada."
      },
      "prompt": {
        "name": "prompt",
        "tooltip": "Lo que deseas ver en la imagen de salida. Un prompt fuerte y descriptivo que defina claramente los elementos, colores y sujetos dará mejores resultados. Para controlar el peso de una palabra usa el formato `(palabra:peso)`, donde `palabra` es la palabra cuyo peso deseas controlar y `peso` es un valor entre 0 y 1. Por ejemplo: `El cielo era de un (azul:0.3) y (verde:0.8) nítidos` indicará un cielo azul y verde, pero más verde que azul."
      },
      "seed": {
        "name": "seed",
        "tooltip": "La semilla aleatoria utilizada para crear el ruido."
      },
      "style_preset": {
        "name": "style_preset",
        "tooltip": "Estilo opcional deseado para la imagen generada."
      }
    }
  },
  "StabilityUpscaleConservativeNode": {
    "description": "Aumenta la resolución de la imagen a 4K con alteraciones mínimas.",
    "display_name": "Stability AI Upscale Conservador",
    "inputs": {
      "control_after_generate": {
        "name": "controlar después de generar"
      },
      "creativity": {
        "name": "creatividad",
        "tooltip": "Controla la probabilidad de crear detalles adicionales que no estén fuertemente condicionados por la imagen inicial."
      },
      "image": {
        "name": "imagen"
      },
      "negative_prompt": {
        "name": "prompt negativo",
        "tooltip": "Palabras clave de lo que no deseas ver en la imagen de salida. Esta es una función avanzada."
      },
      "prompt": {
        "name": "prompt",
        "tooltip": "Lo que deseas ver en la imagen de salida. Un prompt fuerte y descriptivo que defina claramente los elementos, colores y sujetos dará mejores resultados."
      },
      "seed": {
        "name": "semilla",
        "tooltip": "La semilla aleatoria utilizada para crear el ruido."
      }
    }
  },
  "StabilityUpscaleCreativeNode": {
    "description": "Aumenta la resolución de la imagen a 4K con alteraciones mínimas.",
    "display_name": "Stability AI Upscale Creative",
    "inputs": {
      "control_after_generate": {
        "name": "controlar después de generar"
      },
      "creativity": {
        "name": "creatividad",
        "tooltip": "Controla la probabilidad de crear detalles adicionales que no estén fuertemente condicionados por la imagen inicial."
      },
      "image": {
        "name": "imagen"
      },
      "negative_prompt": {
        "name": "prompt negativo",
        "tooltip": "Palabras clave de lo que no deseas ver en la imagen de salida. Esta es una función avanzada."
      },
      "prompt": {
        "name": "prompt",
        "tooltip": "Lo que deseas ver en la imagen de salida. Un prompt fuerte y descriptivo que defina claramente los elementos, colores y sujetos dará mejores resultados."
      },
      "seed": {
        "name": "semilla",
        "tooltip": "La semilla aleatoria utilizada para crear el ruido."
      },
      "style_preset": {
        "name": "estilo predefinido",
        "tooltip": "Estilo opcional deseado para la imagen generada."
      }
    }
  },
  "StabilityUpscaleFastNode": {
    "description": "Aumenta rápidamente una imagen a 4x su tamaño original mediante una llamada a la API de Stability; pensado para mejorar imágenes de baja calidad o comprimidas.",
    "display_name": "Stability AI Escalado Rápido",
    "inputs": {
      "image": {
        "name": "imagen"
      }
    }
  },
  "StableCascade_EmptyLatentImage": {
    "display_name": "StableCascade_EmptyLatentImage",
    "inputs": {
      "batch_size": {
        "name": "tamaño_del_lote"
      },
      "compression": {
        "name": "compresión"
      },
      "height": {
        "name": "altura"
      },
      "width": {
        "name": "ancho"
      }
    },
    "outputs": {
      "0": {
        "name": "etapa_c"
      },
      "1": {
        "name": "etapa_b"
      }
    }
  },
  "StableCascade_StageB_Conditioning": {
    "display_name": "StableCascade_StageB_Conditioning",
    "inputs": {
      "conditioning": {
        "name": "acondicionamiento"
      },
      "stage_c": {
        "name": "etapa_c"
      }
    }
  },
  "StableCascade_StageC_VAEEncode": {
    "display_name": "StableCascade_StageC_VAEEncode",
    "inputs": {
      "compression": {
        "name": "compresión"
      },
      "image": {
        "name": "imagen"
      },
      "vae": {
        "name": "vae"
      }
    },
    "outputs": {
      "0": {
        "name": "etapa_c"
      },
      "1": {
        "name": "etapa_b"
      }
    }
  },
  "StableCascade_SuperResolutionControlnet": {
    "display_name": "StableCascade_SuperResolutionControlnet",
    "inputs": {
      "image": {
        "name": "imagen"
      },
      "vae": {
        "name": "vae"
      }
    },
    "outputs": {
      "0": {
        "name": "entrada_controlnet"
      },
      "1": {
        "name": "etapa_c"
      },
      "2": {
        "name": "etapa_b"
      }
    }
  },
  "StableZero123_Conditioning": {
    "display_name": "StableZero123_Conditioning",
    "inputs": {
      "azimuth": {
        "name": "acimut"
      },
      "batch_size": {
        "name": "tamaño_del_lote"
      },
      "clip_vision": {
        "name": "visión_clip"
      },
      "elevation": {
        "name": "elevación"
      },
      "height": {
        "name": "altura"
      },
      "init_image": {
        "name": "imagen_inicial"
      },
      "vae": {
        "name": "vae"
      },
      "width": {
        "name": "ancho"
      }
    },
    "outputs": {
      "0": {
        "name": "positivo"
      },
      "1": {
        "name": "negativo"
      },
      "2": {
        "name": "latente"
      }
    }
  },
  "StableZero123_Conditioning_Batched": {
    "display_name": "StableZero123_Conditioning_Batched",
    "inputs": {
      "azimuth": {
        "name": "acimut"
      },
      "azimuth_batch_increment": {
        "name": "incremento_de_lote_de_acimut"
      },
      "batch_size": {
        "name": "tamaño_del_lote"
      },
      "clip_vision": {
        "name": "clip_vision"
      },
      "elevation": {
        "name": "elevación"
      },
      "elevation_batch_increment": {
        "name": "incremento_de_lote_de_elevación"
      },
      "height": {
        "name": "altura"
      },
      "init_image": {
        "name": "imagen_inicial"
      },
      "vae": {
        "name": "vae"
      },
      "width": {
        "name": "ancho"
      }
    },
    "outputs": {
      "0": {
        "name": "positivo"
      },
      "1": {
        "name": "negativo"
      },
      "2": {
        "name": "latente"
      }
    }
  },
  "StyleModelApply": {
    "display_name": "Aplicar Modelo de Estilo",
    "inputs": {
      "clip_vision_output": {
        "name": "salida_de_clip_vision"
      },
      "conditioning": {
        "name": "acondicionamiento"
      },
      "strength": {
        "name": "fuerza"
      },
      "strength_type": {
        "name": "tipo_de_fuerza"
      },
      "style_model": {
        "name": "modelo_de_estilo"
      }
    }
  },
  "StyleModelLoader": {
    "display_name": "Cargar Modelo de Estilo",
    "inputs": {
      "style_model_name": {
        "name": "nombre_del_modelo_de_estilo"
      }
    }
  },
  "T5TokenizerOptions": {
    "display_name": "T5TokenizerOptions",
    "inputs": {
      "clip": {
        "name": "clip"
      },
      "min_length": {
        "name": "mín_longitud"
      },
      "min_padding": {
        "name": "mín_relleno"
      }
    }
  },
  "TextEncodeHunyuanVideo_ImageToVideo": {
    "display_name": "TextEncodeHunyuanVideo_ImagenAVideo",
    "inputs": {
      "clip": {
        "name": "clip"
      },
      "clip_vision_output": {
        "name": "salida_de_clip_vision"
      },
      "image_interleave": {
        "name": "entrelazado_de_imagen",
        "tooltip": "Cuánto influye la imagen en las cosas frente al indicación de texto. Un número más alto significa más influencia del indicación de texto."
      },
      "prompt": {
        "name": "indicación"
      }
    }
  },
  "ThresholdMask": {
    "display_name": "Máscara de Umbral",
    "inputs": {
      "mask": {
        "name": "máscara"
      },
      "value": {
        "name": "valor"
      }
    }
  },
  "TomePatchModel": {
    "display_name": "Modelo de Parche Tome",
    "inputs": {
      "model": {
        "name": "modelo"
      },
      "ratio": {
        "name": "ratio"
      }
    }
  },
  "TorchCompileModel": {
    "display_name": "Modelo de Compilación Torch",
    "inputs": {
      "backend": {
        "name": "backend"
      },
      "model": {
        "name": "modelo"
      }
    }
  },
  "TrimVideoLatent": {
    "display_name": "TrimVideoLatent",
    "inputs": {
      "samples": {
        "name": "muestras"
      },
      "trim_amount": {
        "name": "cantidad_de_recorte"
      }
    }
  },
  "TripleCLIPLoader": {
    "description": "[Recetas]\n\nsd3: clip-l, clip-g, t5",
    "display_name": "Cargador Triple CLIP",
    "inputs": {
      "clip_name1": {
        "name": "nombre_clip1"
      },
      "clip_name2": {
        "name": "nombre_clip2"
      },
      "clip_name3": {
        "name": "nombre_clip3"
      }
    }
  },
  "UNETLoader": {
    "display_name": "Cargar Modelo de Difusión",
    "inputs": {
      "unet_name": {
        "name": "nombre_unet"
      },
      "weight_dtype": {
        "name": "tipo_dato_peso"
      }
    }
  },
  "UNetCrossAttentionMultiply": {
    "display_name": "Multiplicación de Atención Cruzada UNet",
    "inputs": {
      "k": {
        "name": "k"
      },
      "model": {
        "name": "modelo"
      },
      "out": {
        "name": "salida"
      },
      "q": {
        "name": "q"
      },
      "v": {
        "name": "v"
      }
    }
  },
  "UNetSelfAttentionMultiply": {
    "display_name": "Multiplicación de Auto Atención UNet",
    "inputs": {
      "k": {
        "name": "k"
      },
      "model": {
        "name": "modelo"
      },
      "out": {
        "name": "salida"
      },
      "q": {
        "name": "q"
      },
      "v": {
        "name": "v"
      }
    }
  },
  "UNetTemporalAttentionMultiply": {
    "display_name": "Multiplicación de Atención Temporal UNet",
    "inputs": {
      "cross_structural": {
        "name": "cruz_estructural"
      },
      "cross_temporal": {
        "name": "cruz_temporal"
      },
      "model": {
        "name": "modelo"
      },
      "self_structural": {
        "name": "auto_estructural"
      },
      "self_temporal": {
        "name": "auto_temporal"
      }
    }
  },
  "UpscaleModelLoader": {
    "display_name": "Cargar Modelo de Escala Superior",
    "inputs": {
      "model_name": {
        "name": "nombre_modelo"
      }
    }
  },
  "VAEDecode": {
    "description": "Decodifica imágenes latentes de nuevo en imágenes de espacio de píxeles.",
    "display_name": "Decodificación VAE",
    "inputs": {
      "samples": {
        "name": "muestras",
        "tooltip": "El latente a ser decodificado."
      },
      "vae": {
        "name": "vae",
        "tooltip": "El modelo VAE utilizado para decodificar el latente."
      }
    },
    "outputs": {
      "0": {
        "tooltip": "La imagen decodificada."
      }
    }
  },
  "VAEDecodeAudio": {
    "display_name": "VAEDecodeAudio",
    "inputs": {
      "samples": {
        "name": "muestras"
      },
      "vae": {
        "name": "vae"
      }
    }
  },
  "VAEDecodeHunyuan3D": {
    "display_name": "VAEDecodeHunyuan3D",
    "inputs": {
      "num_chunks": {
        "name": "num_chunks"
      },
      "octree_resolution": {
        "name": "resolución_octree"
      },
      "samples": {
        "name": "muestras"
      },
      "vae": {
        "name": "vae"
      }
    }
  },
  "VAEDecodeTiled": {
    "display_name": "VAE Decodificar (Mosaico)",
    "inputs": {
      "overlap": {
        "name": "superposición"
      },
      "samples": {
        "name": "muestras"
      },
      "temporal_overlap": {
        "name": "superposición_temporal",
        "tooltip": "Solo se utiliza para VAEs de video: Cantidad de fotogramas para superponer."
      },
      "temporal_size": {
        "name": "tamaño_temporal",
        "tooltip": "Solo se utiliza para VAEs de video: Cantidad de fotogramas para decodificar a la vez."
      },
      "tile_size": {
        "name": "tamaño_mosaico"
      },
      "vae": {
        "name": "vae"
      }
    }
  },
  "VAEEncode": {
    "display_name": "VAE Codificar",
    "inputs": {
      "pixels": {
        "name": "píxeles"
      },
      "vae": {
        "name": "vae"
      }
    }
  },
  "VAEEncodeAudio": {
    "display_name": "VAEEncodeAudio",
    "inputs": {
      "audio": {
        "name": "audio"
      },
      "vae": {
        "name": "vae"
      }
    }
  },
  "VAEEncodeForInpaint": {
    "display_name": "VAE Codificar (para Inpainting)",
    "inputs": {
      "grow_mask_by": {
        "name": "crecer_máscara_por"
      },
      "mask": {
        "name": "máscara"
      },
      "pixels": {
        "name": "píxeles"
      },
      "vae": {
        "name": "vae"
      }
    }
  },
  "VAEEncodeTiled": {
    "display_name": "VAE Codificar (Mosaico)",
    "inputs": {
      "overlap": {
        "name": "superposición"
      },
      "pixels": {
        "name": "píxeles"
      },
      "temporal_overlap": {
        "name": "superposición_temporal",
        "tooltip": "Solo se utiliza para VAEs de video: Cantidad de fotogramas para superponer."
      },
      "temporal_size": {
        "name": "tamaño_temporal",
        "tooltip": "Solo se utiliza para VAEs de video: Cantidad de fotogramas para codificar a la vez."
      },
      "tile_size": {
        "name": "tamaño_mosaico"
      },
      "vae": {
        "name": "vae"
      }
    }
  },
  "VAELoader": {
    "display_name": "Cargar VAE",
    "inputs": {
      "vae_name": {
        "name": "nombre_vae"
      }
    }
  },
  "VAESave": {
    "display_name": "GuardarVAE",
    "inputs": {
      "filename_prefix": {
        "name": "prefijo_nombre_archivo"
      },
      "vae": {
        "name": "vae"
      }
    }
  },
  "VPScheduler": {
    "display_name": "VPScheduler",
    "inputs": {
      "beta_d": {
        "name": "beta_d"
      },
      "beta_min": {
        "name": "beta_min"
      },
      "eps_s": {
        "name": "eps_s"
      },
      "steps": {
        "name": "pasos"
      }
    }
  },
  "VeoVideoGenerationNode": {
    "description": "Genera videos a partir de indicaciones de texto usando la API de Veo de Google",
    "display_name": "Generación de Video Google Veo2",
    "inputs": {
      "aspect_ratio": {
        "name": "aspect_ratio",
        "tooltip": "Relación de aspecto del video de salida"
      },
      "control_after_generate": {
        "name": "control after generate"
      },
      "duration_seconds": {
        "name": "duration_seconds",
        "tooltip": "Duración del video de salida en segundos"
      },
      "enhance_prompt": {
        "name": "enhance_prompt",
        "tooltip": "Si se debe mejorar la indicación con asistencia de IA"
      },
      "image": {
        "name": "image",
        "tooltip": "Imagen de referencia opcional para guiar la generación del video"
      },
      "negative_prompt": {
        "name": "negative_prompt",
        "tooltip": "Indicaciones negativas para guiar lo que se debe evitar en el video"
      },
      "person_generation": {
        "name": "person_generation",
        "tooltip": "Si se permite generar personas en el video"
      },
      "prompt": {
        "name": "prompt",
        "tooltip": "Descripción de texto del video"
      },
      "seed": {
        "name": "seed",
        "tooltip": "Semilla para la generación de video (0 para aleatorio)"
      }
    }
  },
  "VideoLinearCFGGuidance": {
    "display_name": "OrientaciónLinealCFGVideo",
    "inputs": {
      "min_cfg": {
        "name": "min_cfg"
      },
      "model": {
        "name": "modelo"
      }
    }
  },
  "VideoTriangleCFGGuidance": {
    "display_name": "OrientaciónTriangularCFGVideo",
    "inputs": {
      "min_cfg": {
        "name": "min_cfg"
      },
      "model": {
        "name": "modelo"
      }
    }
  },
  "VoxelToMesh": {
    "display_name": "VoxelToMesh",
    "inputs": {
      "algorithm": {
        "name": "algoritmo"
      },
      "threshold": {
        "name": "umbral"
      },
      "voxel": {
        "name": "voxel"
      }
    }
  },
  "VoxelToMeshBasic": {
    "display_name": "VoxelAMallaBásico",
    "inputs": {
      "threshold": {
        "name": "umbral"
      },
      "voxel": {
        "name": "voxel"
      }
    }
  },
  "WanFirstLastFrameToVideo": {
    "display_name": "WanFirstLastFrameToVideo",
    "inputs": {
      "batch_size": {
        "name": "tamaño_lote"
      },
      "clip_vision_end_image": {
        "name": "clip_vision_end_image"
      },
      "clip_vision_start_image": {
        "name": "clip_vision_start_image"
      },
      "end_image": {
        "name": "imagen_final"
      },
      "height": {
        "name": "alto"
      },
      "length": {
        "name": "longitud"
      },
      "negative": {
        "name": "negativo"
      },
      "positive": {
        "name": "positivo"
      },
      "start_image": {
        "name": "imagen_inicial"
      },
      "vae": {
        "name": "vae"
      },
      "width": {
        "name": "ancho"
      }
    },
    "outputs": {
      "0": {
        "name": "positivo"
      },
      "1": {
        "name": "negativo"
      },
      "2": {
        "name": "latente"
      }
    }
  },
  "WanFunControlToVideo": {
    "display_name": "WanFunControlToVideo",
    "inputs": {
      "batch_size": {
        "name": "tamaño_lote"
      },
      "clip_vision_output": {
        "name": "clip_vision_output"
      },
      "control_video": {
        "name": "control_video"
      },
      "height": {
        "name": "alto"
      },
      "length": {
        "name": "longitud"
      },
      "negative": {
        "name": "negativo"
      },
      "positive": {
        "name": "positivo"
      },
      "start_image": {
        "name": "imagen_inicial"
      },
      "vae": {
        "name": "vae"
      },
      "width": {
        "name": "ancho"
      }
    },
    "outputs": {
      "0": {
        "name": "positivo"
      },
      "1": {
        "name": "negativo"
      },
      "2": {
        "name": "latente"
      }
    }
  },
  "WanFunInpaintToVideo": {
    "display_name": "WanFunInpaintToVideo",
    "inputs": {
      "batch_size": {
        "name": "tamaño_de_lote"
      },
      "clip_vision_output": {
        "name": "clip_vision_output"
      },
      "end_image": {
        "name": "imagen_final"
      },
      "height": {
        "name": "alto"
      },
      "length": {
        "name": "longitud"
      },
      "negative": {
        "name": "negativo"
      },
      "positive": {
        "name": "positivo"
      },
      "start_image": {
        "name": "imagen_inicial"
      },
      "vae": {
        "name": "vae"
      },
      "width": {
        "name": "ancho"
      }
    },
    "outputs": {
      "0": {
        "name": "positivo"
      },
      "1": {
        "name": "negativo"
      },
      "2": {
        "name": "latente"
      }
    }
  },
  "WanImageToVideo": {
    "display_name": "WanImageToVideo",
    "inputs": {
      "batch_size": {
        "name": "tamaño_del_lote"
      },
      "clip_vision_output": {
        "name": "salida_de_vision_clip"
      },
      "height": {
        "name": "altura"
      },
      "length": {
        "name": "longitud"
      },
      "negative": {
        "name": "negativo"
      },
      "positive": {
        "name": "positivo"
      },
      "start_image": {
        "name": "imagen_inicial"
      },
      "vae": {
        "name": "vae"
      },
      "width": {
        "name": "ancho"
      }
    },
    "outputs": {
      "0": {
        "name": "positivo"
      },
      "1": {
        "name": "negativo"
      },
      "2": {
        "name": "latente"
      }
    }
  },
  "WanVaceToVideo": {
    "display_name": "WanVaceToVideo",
    "inputs": {
      "batch_size": {
        "name": "tamaño_lote"
      },
      "control_masks": {
        "name": "máscaras_de_control"
      },
      "control_video": {
        "name": "control_video"
      },
      "height": {
        "name": "alto"
      },
      "length": {
        "name": "longitud"
      },
      "negative": {
        "name": "negativo"
      },
      "positive": {
        "name": "positivo"
      },
      "reference_image": {
        "name": "imagen_de_referencia"
      },
      "strength": {
        "name": "fuerza"
      },
      "vae": {
        "name": "vae"
      },
      "width": {
        "name": "ancho"
      }
    },
    "outputs": {
      "0": {
        "name": "positivo"
      },
      "1": {
        "name": "negativo"
      },
      "2": {
        "name": "latente"
      },
      "3": {
        "name": "latente_recortado"
      }
    }
  },
  "WebcamCapture": {
    "display_name": "Captura de Webcam",
    "inputs": {
      "capture_on_queue": {
        "name": "captura_en_cola"
      },
      "height": {
        "name": "altura"
      },
      "image": {
        "name": "imagen"
      },
      "waiting for camera___": {
      },
      "width": {
        "name": "ancho"
      }
    }
  },
  "unCLIPCheckpointLoader": {
    "display_name": "Cargador de Puntos de Control unCLIP",
    "inputs": {
      "ckpt_name": {
        "name": "nombre_ckpt"
      }
    }
  },
  "unCLIPConditioning": {
    "display_name": "Acondicionamiento unCLIP",
    "inputs": {
      "clip_vision_output": {
        "name": "salida_vision_clip"
      },
      "conditioning": {
        "name": "acondicionamiento"
      },
      "noise_augmentation": {
        "name": "aumento_ruido"
      },
      "strength": {
        "name": "fuerza"
      }
    }
  }
}