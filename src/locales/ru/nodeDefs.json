{
  "AddNoise": {
    "display_name": "Добавить шум",
    "inputs": {
      "latent_image": {
        "name": "латентное_изображение"
      },
      "model": {
        "name": "модель"
      },
      "noise": {
        "name": "шум"
      },
      "sigmas": {
        "name": "сигмы"
      }
    }
  },
  "AlignYourStepsScheduler": {
    "display_name": "Scheduler выравнивания шагов",
    "inputs": {
      "denoise": {
        "name": "шумоподавление"
      },
      "model_type": {
        "name": "тип_модели"
      },
      "steps": {
        "name": "шаги"
      }
    }
  },
  "BasicGuider": {
    "display_name": "Основной гид",
    "inputs": {
      "conditioning": {
        "name": "кондиционирование"
      },
      "model": {
        "name": "модель"
      }
    }
  },
  "BasicScheduler": {
    "display_name": "Основной scheduler",
    "inputs": {
      "denoise": {
        "name": "шумоподавление"
      },
      "model": {
        "name": "модель"
      },
      "scheduler": {
        "name": "scheduler"
      },
      "steps": {
        "name": "шаги"
      }
    }
  },
  "BetaSamplingScheduler": {
    "display_name": "Scheduler выборки Бета",
    "inputs": {
      "alpha": {
        "name": "альфа"
      },
      "beta": {
        "name": "бета"
      },
      "model": {
        "name": "модель"
      },
      "steps": {
        "name": "шаги"
      }
    }
  },
  "CFGGuider": {
    "display_name": "CFG Гид",
    "inputs": {
      "cfg": {
        "name": "cfg"
      },
      "model": {
        "name": "модель"
      },
      "negative": {
        "name": "отрицательный"
      },
      "positive": {
        "name": "положительный"
      }
    }
  },
  "CFGZeroStar": {
    "display_name": "CFGZeroStar",
    "inputs": {
      "model": {
        "name": "model"
      }
    },
    "outputs": {
      "0": {
        "name": "patched_model"
      }
    }
  },
  "CLIPAttentionMultiply": {
    "display_name": "Умножение внимания CLIP",
    "inputs": {
      "clip": {
        "name": "clip"
      },
      "k": {
        "name": "k"
      },
      "out": {
        "name": "выход"
      },
      "q": {
        "name": "q"
      },
      "v": {
        "name": "v"
      }
    }
  },
  "CLIPLoader": {
    "description": "[Рецепты]\n\nstable_diffusion: clip-l\nstable_cascade: clip-g\nsd3: t5 / clip-g / clip-l\nstable_audio: t5\nmochi: t5\ncosmos: old t5 xxl",
    "display_name": "Загрузить CLIP",
    "inputs": {
      "clip_name": {
        "name": "название_clip"
      },
      "device": {
        "name": "устройство"
      },
      "type": {
        "name": "тип"
      }
    }
  },
  "CLIPMergeAdd": {
    "display_name": "Сложение CLIP",
    "inputs": {
      "clip1": {
        "name": "clip1"
      },
      "clip2": {
        "name": "clip2"
      }
    }
  },
  "CLIPMergeSimple": {
    "display_name": "Простое слияние CLIP",
    "inputs": {
      "clip1": {
        "name": "clip1"
      },
      "clip2": {
        "name": "clip2"
      },
      "ratio": {
        "name": "соотношение"
      }
    }
  },
  "CLIPMergeSubtract": {
    "display_name": "Вычитание CLIP",
    "inputs": {
      "clip1": {
        "name": "clip1"
      },
      "clip2": {
        "name": "clip2"
      },
      "multiplier": {
        "name": "множитель"
      }
    }
  },
  "CLIPSave": {
    "display_name": "Сохранить CLIP",
    "inputs": {
      "clip": {
        "name": "clip"
      },
      "filename_prefix": {
        "name": "префикс_названия_файла"
      }
    }
  },
  "CLIPSetLastLayer": {
    "display_name": "Установить последний слой CLIP",
    "inputs": {
      "clip": {
        "name": "clip"
      },
      "stop_at_clip_layer": {
        "name": "остановиться_на_clip_слое"
      }
    }
  },
  "CLIPTextEncode": {
    "description": "Кодирует текстовый запрос с помощью модели CLIP в вектор, который можно использовать для управления моделью диффузии для генерации конкретных изображений.",
    "display_name": "Кодирование текста CLIP (Запрос)",
    "inputs": {
      "clip": {
        "name": "clip",
        "tooltip": "Модель CLIP, используемая для кодирования текста."
      },
      "text": {
        "name": "текст",
        "tooltip": "Текст для кодирования."
      }
    },
    "outputs": {
      "0": {
        "tooltip": "Условие, содержащее встроенный текст, используемое для управления моделью диффузии."
      }
    }
  },
  "CLIPTextEncodeControlnet": {
    "display_name": "Кодирование текста CLIP для Controlnet",
    "inputs": {
      "clip": {
        "name": "clip"
      },
      "conditioning": {
        "name": "кондиционирование"
      },
      "text": {
        "name": "текст"
      }
    }
  },
  "CLIPTextEncodeFlux": {
    "display_name": "Кодирование текста CLIP Flux",
    "inputs": {
      "clip": {
        "name": "clip"
      },
      "clip_l": {
        "name": "clip_l"
      },
      "guidance": {
        "name": "руководство"
      },
      "t5xxl": {
        "name": "t5xxl"
      }
    }
  },
  "CLIPTextEncodeHiDream": {
    "display_name": "CLIPTextEncodeHiDream",
    "inputs": {
      "clip": {
        "name": "clip"
      },
      "clip_g": {
        "name": "clip_g"
      },
      "clip_l": {
        "name": "clip_l"
      },
      "llama": {
        "name": "llama"
      },
      "t5xxl": {
        "name": "t5xxl"
      }
    }
  },
  "CLIPTextEncodeHunyuanDiT": {
    "display_name": "Кодирование текста CLIP HunyuanDiT",
    "inputs": {
      "bert": {
        "name": "bert"
      },
      "clip": {
        "name": "clip"
      },
      "mt5xl": {
        "name": "mt5xl"
      }
    }
  },
  "CLIPTextEncodeLumina2": {
    "description": "Кодирует системный запрос и запрос пользователя с помощью модели CLIP во встраиваемый элемент, который можно использовать для направления модели диффузии на генерацию конкретных изображений.",
    "display_name": "CLIP Text Encode для Lumina2",
    "inputs": {
      "clip": {
        "name": "clip",
        "tooltip": "Модель CLIP, используемая для кодирования текста."
      },
      "system_prompt": {
        "name": "system_prompt",
        "tooltip": "Lumina2 предоставляет два типа системных запросов: Высший: Вы - помощник, разработанный для генерации высококачественных изображений с наивысшей степенью соответствия текста и изображения на основе текстовых запросов или запросов пользователя. Соответствие: Вы - помощник, разработанный для генерации высококачественных изображений с наивысшей степенью соответствия текста и изображения на основе текстовых запросов."
      },
      "user_prompt": {
        "name": "user_prompt",
        "tooltip": "Текст для кодирования."
      }
    },
    "outputs": {
      "0": {
        "tooltip": "Условие, содержащее встроенный текст, используемый для направления модели диффузии."
      }
    }
  },
  "CLIPTextEncodePixArtAlpha": {
    "description": "Кодирует текст и устанавливает условие разрешения для PixArt Alpha. Не применяется к PixArt Sigma.",
    "display_name": "CLIPTextEncodePixArtAlpha",
    "inputs": {
      "clip": {
        "name": "clip"
      },
      "height": {
        "name": "высота"
      },
      "text": {
        "name": "текст"
      },
      "width": {
        "name": "ширина"
      }
    }
  },
  "CLIPTextEncodeSD3": {
    "display_name": "Кодирование текста CLIP SD3",
    "inputs": {
      "clip": {
        "name": "clip"
      },
      "clip_g": {
        "name": "clip_g"
      },
      "clip_l": {
        "name": "clip_l"
      },
      "empty_padding": {
        "name": "пустое_заполнение"
      },
      "t5xxl": {
        "name": "t5xxl"
      }
    }
  },
  "CLIPTextEncodeSDXL": {
    "display_name": "Кодирование текста CLIP SDXL",
    "inputs": {
      "clip": {
        "name": "clip"
      },
      "crop_h": {
        "name": "обрезка_высоты"
      },
      "crop_w": {
        "name": "обрезка_ширины"
      },
      "height": {
        "name": "высота"
      },
      "target_height": {
        "name": "целевая_высота"
      },
      "target_width": {
        "name": "целевая_ширина"
      },
      "text_g": {
        "name": "текст_g"
      },
      "text_l": {
        "name": "текст_l"
      },
      "width": {
        "name": "ширина"
      }
    }
  },
  "CLIPTextEncodeSDXLRefiner": {
    "display_name": "Кодирование текста CLIP SDXL Refinement",
    "inputs": {
      "ascore": {
        "name": "ascore"
      },
      "clip": {
        "name": "clip"
      },
      "height": {
        "name": "высота"
      },
      "text": {
        "name": "текст"
      },
      "width": {
        "name": "ширина"
      }
    }
  },
  "CLIPVisionEncode": {
    "display_name": "Кодирование видения CLIP",
    "inputs": {
      "clip_vision": {
        "name": "clip_vision"
      },
      "crop": {
        "name": "обрезка"
      },
      "image": {
        "name": "изображение"
      }
    }
  },
  "CLIPVisionLoader": {
    "display_name": "Загрузить видение CLIP",
    "inputs": {
      "clip_name": {
        "name": "название_clip"
      }
    }
  },
  "Canny": {
    "display_name": "Canny",
    "inputs": {
      "high_threshold": {
        "name": "верхний_порог"
      },
      "image": {
        "name": "изображение"
      },
      "low_threshold": {
        "name": "нижний_порог"
      }
    }
  },
  "CheckpointLoader": {
    "display_name": "Загрузить сheckpoint с конфигурацией (УСТАРЕЛО)",
    "inputs": {
      "ckpt_name": {
        "name": "название_точки_проверки"
      },
      "config_name": {
        "name": "название_конфигурации"
      }
    }
  },
  "CheckpointLoaderSimple": {
    "description": "Загружает сheckpoint-модели диффузии, модели диффузии используются для удаления шума из латентов.",
    "display_name": "Загрузить сheckpoint",
    "inputs": {
      "ckpt_name": {
        "name": "название_точки_проверки",
        "tooltip": "Название сheckpoint (модели) для загрузки."
      }
    },
    "outputs": {
      "0": {
        "tooltip": "Модель, используемая для шумоподавления латентов."
      },
      "1": {
        "tooltip": "Модель CLIP, используемая для кодирования текстовых подсказок."
      },
      "2": {
        "tooltip": "Модель VAE, используемая для кодирования и декодирования изображений из и в латентное пространство."
      }
    }
  },
  "CheckpointSave": {
    "display_name": "Сохранить сheckpoint",
    "inputs": {
      "clip": {
        "name": "clip"
      },
      "filename_prefix": {
        "name": "префикс_названия_файла"
      },
      "model": {
        "name": "модель"
      },
      "vae": {
        "name": "vae"
      }
    }
  },
  "CombineHooks2": {
    "display_name": "Объединить хуки [2]",
    "inputs": {
      "hooks_A": {
        "name": "hooks_A"
      },
      "hooks_B": {
        "name": "hooks_B"
      }
    }
  },
  "CombineHooks4": {
    "display_name": "Объединить хуки [4]",
    "inputs": {
      "hooks_A": {
        "name": "hooks_A"
      },
      "hooks_B": {
        "name": "hooks_B"
      },
      "hooks_C": {
        "name": "hooks_C"
      },
      "hooks_D": {
        "name": "hooks_D"
      }
    }
  },
  "CombineHooks8": {
    "display_name": "Объединить хуки [8]",
    "inputs": {
      "hooks_A": {
        "name": "hooks_A"
      },
      "hooks_B": {
        "name": "hooks_B"
      },
      "hooks_C": {
        "name": "hooks_C"
      },
      "hooks_D": {
        "name": "hooks_D"
      },
      "hooks_E": {
        "name": "hooks_E"
      },
      "hooks_F": {
        "name": "hooks_F"
      },
      "hooks_G": {
        "name": "hooks_G"
      },
      "hooks_H": {
        "name": "hooks_H"
      }
    }
  },
  "ConditioningAverage": {
    "display_name": "Среднее кондиционирование",
    "inputs": {
      "conditioning_from": {
        "name": "условие_от"
      },
      "conditioning_to": {
        "name": "условие_к"
      },
      "conditioning_to_strength": {
        "name": "сила_условия_к"
      }
    }
  },
  "ConditioningCombine": {
    "display_name": "Кондиционирование (Объединение)",
    "inputs": {
      "conditioning_1": {
        "name": "условие_1"
      },
      "conditioning_2": {
        "name": "условие_2"
      }
    }
  },
  "ConditioningConcat": {
    "display_name": "Кондиционирование (Конкатенация)",
    "inputs": {
      "conditioning_from": {
        "name": "условие_от"
      },
      "conditioning_to": {
        "name": "условие_к"
      }
    }
  },
  "ConditioningSetArea": {
    "display_name": "Кондиционирование (Установить область)",
    "inputs": {
      "conditioning": {
        "name": "условие"
      },
      "height": {
        "name": "высота"
      },
      "strength": {
        "name": "сила"
      },
      "width": {
        "name": "ширина"
      },
      "x": {
        "name": "x"
      },
      "y": {
        "name": "y"
      }
    }
  },
  "ConditioningSetAreaPercentage": {
    "display_name": "Кондиционирование (Установить область с процентом)",
    "inputs": {
      "conditioning": {
        "name": "условие"
      },
      "height": {
        "name": "высота"
      },
      "strength": {
        "name": "сила"
      },
      "width": {
        "name": "ширина"
      },
      "x": {
        "name": "x"
      },
      "y": {
        "name": "y"
      }
    }
  },
  "ConditioningSetAreaPercentageVideo": {
    "display_name": "УсловныйНаборПроцентПлощадиВидео",
    "inputs": {
      "conditioning": {
        "name": "условие"
      },
      "height": {
        "name": "высота"
      },
      "strength": {
        "name": "сила"
      },
      "temporal": {
        "name": "временной"
      },
      "width": {
        "name": "ширина"
      },
      "x": {
        "name": "x"
      },
      "y": {
        "name": "y"
      },
      "z": {
        "name": "z"
      }
    }
  },
  "ConditioningSetAreaStrength": {
    "display_name": "Сила установки области кондиционирования",
    "inputs": {
      "conditioning": {
        "name": "условие"
      },
      "strength": {
        "name": "сила"
      }
    }
  },
  "ConditioningSetDefaultCombine": {
    "display_name": "Установить значение по умолчанию для объединения кондиционирования",
    "inputs": {
      "cond": {
        "name": "условие"
      },
      "cond_DEFAULT": {
        "name": "условие_ПО_УМОЛЧАНИЮ"
      },
      "hooks": {
        "name": "hooks"
      }
    }
  },
  "ConditioningSetMask": {
    "display_name": "Кондиционирование (Установить маску)",
    "inputs": {
      "conditioning": {
        "name": "условие"
      },
      "mask": {
        "name": "маска"
      },
      "set_cond_area": {
        "name": "установить_область_условия"
      },
      "strength": {
        "name": "сила"
      }
    }
  },
  "ConditioningSetProperties": {
    "display_name": "Установить свойства кондиционирования",
    "inputs": {
      "cond_NEW": {
        "name": "новое_условие"
      },
      "hooks": {
        "name": "хуки"
      },
      "mask": {
        "name": "маска"
      },
      "set_cond_area": {
        "name": "установить_область_условия"
      },
      "strength": {
        "name": "сила"
      },
      "timesteps": {
        "name": "временные_шаги"
      }
    }
  },
  "ConditioningSetPropertiesAndCombine": {
    "display_name": "Установить свойства кондиционирования и объединить",
    "inputs": {
      "cond": {
        "name": "условие"
      },
      "cond_NEW": {
        "name": "новое_условие"
      },
      "hooks": {
        "name": "хуки"
      },
      "mask": {
        "name": "маска"
      },
      "set_cond_area": {
        "name": "установить_область_условия"
      },
      "strength": {
        "name": "сила"
      },
      "timesteps": {
        "name": "временные_шаги"
      }
    }
  },
  "ConditioningSetTimestepRange": {
    "display_name": "Установить диапазон временных шагов кондиционирования",
    "inputs": {
      "conditioning": {
        "name": "условие"
      },
      "end": {
        "name": "конец"
      },
      "start": {
        "name": "начало"
      }
    }
  },
  "ConditioningStableAudio": {
    "display_name": "ConditioningStableAudio",
    "inputs": {
      "negative": {
        "name": "отрицательный"
      },
      "positive": {
        "name": "положительный"
      },
      "seconds_start": {
        "name": "секунды_начала"
      },
      "seconds_total": {
        "name": "всего_секунд"
      }
    },
    "outputs": {
      "0": {
        "name": "положительный"
      },
      "1": {
        "name": "отрицательный"
      }
    }
  },
  "ConditioningTimestepsRange": {
    "display_name": "Диапазон временных шагов",
    "inputs": {
      "end_percent": {
        "name": "процент_конца"
      },
      "start_percent": {
        "name": "процент_начала"
      }
    },
    "outputs": {
      "1": {
        "name": "ДО_ДИАПАЗОНА"
      },
      "2": {
        "name": "ПОСЛЕ_ДИАПАЗОНА"
      }
    }
  },
  "ConditioningZeroOut": {
    "display_name": "Обнуление кондиционирования",
    "inputs": {
      "conditioning": {
        "name": "условие"
      }
    }
  },
  "ControlNetApply": {
    "display_name": "Применить ControlNet (УСТАРЕЛО)",
    "inputs": {
      "conditioning": {
        "name": "условие"
      },
      "control_net": {
        "name": "control_net"
      },
      "image": {
        "name": "изображение"
      },
      "strength": {
        "name": "сила"
      }
    }
  },
  "ControlNetApplyAdvanced": {
    "display_name": "Применить ControlNet",
    "inputs": {
      "control_net": {
        "name": "control_net"
      },
      "end_percent": {
        "name": "процент_конца"
      },
      "image": {
        "name": "изображение"
      },
      "negative": {
        "name": "отрицательный"
      },
      "positive": {
        "name": "положительный"
      },
      "start_percent": {
        "name": "процент_начала"
      },
      "strength": {
        "name": "сила"
      },
      "vae": {
        "name": "vae"
      }
    },
    "outputs": {
      "0": {
        "name": "положительный"
      },
      "1": {
        "name": "отрицательный"
      }
    }
  },
  "ControlNetApplySD3": {
    "display_name": "Применить ControlNet с VAE",
    "inputs": {
      "control_net": {
        "name": "control_net"
      },
      "end_percent": {
        "name": "процент_конца"
      },
      "image": {
        "name": "изображение"
      },
      "negative": {
        "name": "отрицательный"
      },
      "positive": {
        "name": "положительный"
      },
      "start_percent": {
        "name": "процент_начала"
      },
      "strength": {
        "name": "сила"
      },
      "vae": {
        "name": "vae"
      }
    },
    "outputs": {
      "0": {
        "name": "положительный"
      },
      "1": {
        "name": "отрицательный"
      }
    }
  },
  "ControlNetInpaintingAliMamaApply": {
    "display_name": "Применить ControlNet для инпейнтинга AliMama",
    "inputs": {
      "control_net": {
        "name": "control_net"
      },
      "end_percent": {
        "name": "процент_конца"
      },
      "image": {
        "name": "изображение"
      },
      "mask": {
        "name": "маска"
      },
      "negative": {
        "name": "отрицательный"
      },
      "positive": {
        "name": "положительный"
      },
      "start_percent": {
        "name": "процент_начала"
      },
      "strength": {
        "name": "сила"
      },
      "vae": {
        "name": "vae"
      }
    },
    "outputs": {
      "0": {
        "name": "положительный"
      },
      "1": {
        "name": "отрицательный"
      }
    }
  },
  "ControlNetLoader": {
    "display_name": "Загрузить модель ControlNet",
    "inputs": {
      "control_net_name": {
        "name": "название_control_net"
      }
    }
  },
  "CosmosImageToVideoLatent": {
    "display_name": "CosmosImageToVideoLatent",
    "inputs": {
      "batch_size": {
        "name": "размер_пакета"
      },
      "end_image": {
        "name": "конечное_изображение"
      },
      "height": {
        "name": "высота"
      },
      "length": {
        "name": "длина"
      },
      "start_image": {
        "name": "начальное_изображение"
      },
      "vae": {
        "name": "vae"
      },
      "width": {
        "name": "ширина"
      }
    }
  },
  "CreateHookKeyframe": {
    "display_name": "Создать ключевой кадр хука",
    "inputs": {
      "prev_hook_kf": {
        "name": "предыдущий_hook_kf"
      },
      "start_percent": {
        "name": "процент_начала"
      },
      "strength_mult": {
        "name": "множитель_силы"
      }
    },
    "outputs": {
      "0": {
        "name": "КЛЮЧЕВОЙ_КАДР"
      }
    }
  },
  "CreateHookKeyframesFromFloats": {
    "display_name": "Создать ключевые кадры хука из чисел с плавающей запятой",
    "inputs": {
      "end_percent": {
        "name": "процент_конца"
      },
      "floats_strength": {
        "name": "сила_в_виде_чисел"
      },
      "prev_hook_kf": {
        "name": "предыдущий_hook_kf"
      },
      "print_keyframes": {
        "name": "печать_ключевых_кадров"
      },
      "start_percent": {
        "name": "процент_начала"
      }
    },
    "outputs": {
      "0": {
        "name": "КЛЮЧЕВОЙ_КАДР"
      }
    }
  },
  "CreateHookKeyframesInterpolated": {
    "display_name": "Создать интерполированные ключевые кадры хука",
    "inputs": {
      "end_percent": {
        "name": "конечный_процент"
      },
      "interpolation": {
        "name": "интерполяция"
      },
      "keyframes_count": {
        "name": "количество_ключевых_кадров"
      },
      "prev_hook_kf": {
        "name": "предыдущий_хук_kf"
      },
      "print_keyframes": {
        "name": "печать_ключевых_кадров"
      },
      "start_percent": {
        "name": "начальный_процент"
      },
      "strength_end": {
        "name": "конечная_сила"
      },
      "strength_start": {
        "name": "начальная_сила"
      }
    },
    "outputs": {
      "0": {
        "name": "КЛЮЧЕВОЙ_КАДР"
      }
    }
  },
  "CreateHookLora": {
    "display_name": "Создать хук LoRA",
    "inputs": {
      "lora_name": {
        "name": "название_lora"
      },
      "prev_hooks": {
        "name": "предыдущие_хуки"
      },
      "strength_clip": {
        "name": "сила_клипа"
      },
      "strength_model": {
        "name": "сила_модели"
      }
    }
  },
  "CreateHookLoraModelOnly": {
    "display_name": "Создать хук LoRA (Только модель)",
    "inputs": {
      "lora_name": {
        "name": "название_lora"
      },
      "prev_hooks": {
        "name": "предыдущие_хуки"
      },
      "strength_model": {
        "name": "сила_модели"
      }
    }
  },
  "CreateHookModelAsLora": {
    "display_name": "Создать хук модели как LoRA",
    "inputs": {
      "ckpt_name": {
        "name": "название_ckpt"
      },
      "prev_hooks": {
        "name": "предыдущие_хуки"
      },
      "strength_clip": {
        "name": "сила_клипа"
      },
      "strength_model": {
        "name": "сила_модели"
      }
    }
  },
  "CreateHookModelAsLoraModelOnly": {
    "display_name": "Создать хук модели как LoRA (Только модель)",
    "inputs": {
      "ckpt_name": {
        "name": "название_ckpt"
      },
      "prev_hooks": {
        "name": "предыдущие_хуки"
      },
      "strength_model": {
        "name": "сила_модели"
      }
    }
  },
  "CreateVideo": {
    "description": "Создайте видео из изображений.",
    "display_name": "Создать видео",
    "inputs": {
      "audio": {
        "name": "аудио",
        "tooltip": "Аудио, которое будет добавлено к видео."
      },
      "fps": {
        "name": "кадров в секунду"
      },
      "images": {
        "name": "изображения",
        "tooltip": "Изображения, из которых будет создано видео."
      }
    }
  },
  "CropMask": {
    "display_name": "Обрезать маску",
    "inputs": {
      "height": {
        "name": "высота"
      },
      "mask": {
        "name": "маска"
      },
      "width": {
        "name": "ширина"
      },
      "x": {
        "name": "x"
      },
      "y": {
        "name": "y"
      }
    }
  },
  "DiffControlNetLoader": {
    "display_name": "Загрузить модель ControlNet (дифф)",
    "inputs": {
      "control_net_name": {
        "name": "название_control_net"
      },
      "model": {
        "name": "модель"
      }
    }
  },
  "DifferentialDiffusion": {
    "display_name": "Дифференциальная диффузия",
    "inputs": {
      "model": {
        "name": "модель"
      }
    }
  },
  "DiffusersLoader": {
    "display_name": "Загрузчик диффузоров",
    "inputs": {
      "model_path": {
        "name": "путь_модели"
      }
    }
  },
  "DisableNoise": {
    "display_name": "Отключить шум"
  },
  "DualCFGGuider": {
    "display_name": "Двойной CFG Гид",
    "inputs": {
      "cfg_cond2_negative": {
        "name": "cfg_cond2_negative"
      },
      "cfg_conds": {
        "name": "cfg_conds"
      },
      "cond1": {
        "name": "cond1"
      },
      "cond2": {
        "name": "cond2"
      },
      "model": {
        "name": "модель"
      },
      "negative": {
        "name": "отрицательный"
      }
    }
  },
  "DualCLIPLoader": {
    "description": "[Рецепты]\n\nsdxl: clip-l, clip-g\nsd3: clip-l, clip-g / clip-l, t5 / clip-g, t5\nflux: clip-l, t5",
    "display_name": "Двойной загрузчик CLIP",
    "inputs": {
      "clip_name1": {
        "name": "clip_name1"
      },
      "clip_name2": {
        "name": "clip_name2"
      },
      "device": {
        "name": "устройство"
      },
      "type": {
        "name": "тип"
      }
    }
  },
  "EmptyCosmosLatentVideo": {
    "display_name": "EmptyCosmosLatentVideo",
    "inputs": {
      "batch_size": {
        "name": "размер_пакета"
      },
      "height": {
        "name": "высота"
      },
      "length": {
        "name": "длина"
      },
      "width": {
        "name": "ширина"
      }
    }
  },
  "EmptyHunyuanLatentVideo": {
    "display_name": "Пустой HunyuanLatentVideo",
    "inputs": {
      "batch_size": {
        "name": "размер_пакета"
      },
      "height": {
        "name": "высота"
      },
      "length": {
        "name": "длина"
      },
      "width": {
        "name": "ширина"
      }
    }
  },
  "EmptyImage": {
    "display_name": "Пустое изображение",
    "inputs": {
      "batch_size": {
        "name": "размер_пакета"
      },
      "color": {
        "name": "цвет"
      },
      "height": {
        "name": "высота"
      },
      "width": {
        "name": "ширина"
      }
    }
  },
  "EmptyLTXVLatentVideo": {
    "display_name": "Пустой LTXVLatentVideo",
    "inputs": {
      "batch_size": {
        "name": "размер_пакета"
      },
      "height": {
        "name": "высота"
      },
      "length": {
        "name": "длина"
      },
      "width": {
        "name": "ширина"
      }
    }
  },
  "EmptyLatentAudio": {
    "display_name": "Пустой LatentAudio",
    "inputs": {
      "batch_size": {
        "name": "размер_пакета",
        "tooltip": "Количество латентных изображений в партии."
      },
      "seconds": {
        "name": "секунды"
      }
    }
  },
  "EmptyLatentHunyuan3Dv2": {
    "display_name": "EmptyLatentHunyuan3Dv2",
    "inputs": {
      "batch_size": {
        "name": "размер_пакета",
        "tooltip": "Количество скрытых изображений в пакете."
      },
      "resolution": {
        "name": "разрешение"
      }
    }
  },
  "EmptyLatentImage": {
    "description": "Создаёт новую партию пустых латентных изображений для удаления шума через выборку.",
    "display_name": "Пустое латентное изображение",
    "inputs": {
      "batch_size": {
        "name": "размер_пакета",
        "tooltip": "Количество латентных изображений в партии."
      },
      "height": {
        "name": "высота",
        "tooltip": "Высота латентных изображений в пикселях."
      },
      "width": {
        "name": "ширина",
        "tooltip": "Ширина латентных изображений в пикселях."
      }
    },
    "outputs": {
      "0": {
        "tooltip": "Пустая партия латентных изображений."
      }
    }
  },
  "EmptyMochiLatentVideo": {
    "display_name": "Пустой MochiLatentVideo",
    "inputs": {
      "batch_size": {
        "name": "размер_пакета"
      },
      "height": {
        "name": "высота"
      },
      "length": {
        "name": "длина"
      },
      "width": {
        "name": "ширина"
      }
    }
  },
  "EmptySD3LatentImage": {
    "display_name": "Пустой SD3LatentImage",
    "inputs": {
      "batch_size": {
        "name": "размер_пакета"
      },
      "height": {
        "name": "высота"
      },
      "width": {
        "name": "ширина"
      }
    }
  },
  "ExponentialScheduler": {
    "display_name": "Экспоненциальный scheduler",
    "inputs": {
      "sigma_max": {
        "name": "sigma_max"
      },
      "sigma_min": {
        "name": "sigma_min"
      },
      "steps": {
        "name": "шаги"
      }
    }
  },
  "ExtendIntermediateSigmas": {
    "display_name": "ExtendIntermediateSigmas",
    "inputs": {
      "end_at_sigma": {
        "name": "закончить_на_sigma"
      },
      "sigmas": {
        "name": "sigmas"
      },
      "spacing": {
        "name": "интервал"
      },
      "start_at_sigma": {
        "name": "начать_с_sigma"
      },
      "steps": {
        "name": "шаги"
      }
    }
  },
  "FeatherMask": {
    "display_name": "Пернатая маска",
    "inputs": {
      "bottom": {
        "name": "снизу"
      },
      "left": {
        "name": "слева"
      },
      "mask": {
        "name": "маска"
      },
      "right": {
        "name": "справа"
      },
      "top": {
        "name": "сверху"
      }
    }
  },
  "FlipSigmas": {
    "display_name": "Перевернуть сигмы",
    "inputs": {
      "sigmas": {
        "name": "sigmas"
      }
    }
  },
  "FluxDisableGuidance": {
    "description": "Этот узел полностью отключает встраиваемое руководство на Flux и подобных моделях Flux",
    "display_name": "FluxDisableGuidance",
    "inputs": {
      "conditioning": {
        "name": "conditioning"
      }
    }
  },
  "FluxGuidance": {
    "display_name": "Направление Flux",
    "inputs": {
      "conditioning": {
        "name": "условие"
      },
      "guidance": {
        "name": "руководство"
      }
    }
  },
  "FluxProCannyNode": {
    "description": "Генерировать изображение с использованием контрольного изображения (canny).",
    "display_name": "Flux.1 Canny контрольное изображение",
    "inputs": {
      "canny_high_threshold": {
        "name": "canny_high_threshold",
        "tooltip": "Верхний порог для детектирования границ Canny; игнорируется, если skip_processing установлен в True"
      },
      "canny_low_threshold": {
        "name": "canny_low_threshold",
        "tooltip": "Нижний порог для детектирования границ Canny; игнорируется, если skip_processing установлен в True"
      },
      "control_after_generate": {
        "name": "control after generate"
      },
      "control_image": {
        "name": "control_image"
      },
      "guidance": {
        "name": "guidance",
        "tooltip": "Сила направляющего сигнала для процесса генерации изображения"
      },
      "prompt": {
        "name": "prompt",
        "tooltip": "Промпт для генерации изображения"
      },
      "prompt_upsampling": {
        "name": "prompt_upsampling",
        "tooltip": "Выполнять ли апсемплинг промпта. Если активно, автоматически изменяет промпт для более креативной генерации, но результаты будут недетерминированными (одинаковое зерно не даст точно такой же результат)."
      },
      "seed": {
        "name": "seed",
        "tooltip": "Случайное зерно, используемое для создания шума."
      },
      "skip_preprocessing": {
        "name": "skip_preprocessing",
        "tooltip": "Пропускать ли предварительную обработку; установите True, если control_image уже обработано Canny, False — если это исходное изображение."
      },
      "steps": {
        "name": "steps",
        "tooltip": "Количество шагов для процесса генерации изображения"
      }
    }
  },
  "FluxProDepthNode": {
    "description": "Генерировать изображение с использованием контрольного изображения (глубина).",
    "display_name": "Flux.1 Контроль изображения по глубине",
    "inputs": {
      "control_after_generate": {
        "name": "control after generate"
      },
      "control_image": {
        "name": "control_image"
      },
      "guidance": {
        "name": "guidance",
        "tooltip": "Сила направляющего сигнала для процесса генерации изображения"
      },
      "prompt": {
        "name": "prompt",
        "tooltip": "Промпт для генерации изображения"
      },
      "prompt_upsampling": {
        "name": "prompt_upsampling",
        "tooltip": "Выполнять ли апсемплинг промпта. Если активно, автоматически изменяет промпт для более креативной генерации, но результаты будут недетерминированными (одинаковое зерно не даст точно такой же результат)."
      },
      "seed": {
        "name": "seed",
        "tooltip": "Случайное зерно, используемое для создания шума."
      },
      "skip_preprocessing": {
        "name": "skip_preprocessing",
        "tooltip": "Пропустить ли предварительную обработку; установите True, если control_image уже содержит глубину, False — если это исходное изображение."
      },
      "steps": {
        "name": "steps",
        "tooltip": "Количество шагов для процесса генерации изображения"
      }
    }
  },
  "FluxProExpandNode": {
    "description": "Дорисовывает изображение на основе запроса.",
    "display_name": "Flux.1 Расширить изображение",
    "inputs": {
      "bottom": {
        "name": "низ",
        "tooltip": "Количество пикселей для расширения снизу изображения"
      },
      "control_after_generate": {
        "name": "контроль после генерации"
      },
      "guidance": {
        "name": "направление",
        "tooltip": "Сила направляющего сигнала для процесса генерации изображения"
      },
      "image": {
        "name": "изображение"
      },
      "left": {
        "name": "слева",
        "tooltip": "Количество пикселей для расширения слева изображения"
      },
      "prompt": {
        "name": "запрос",
        "tooltip": "Запрос для генерации изображения"
      },
      "prompt_upsampling": {
        "name": "апсемплинг запроса",
        "tooltip": "Выполнять ли апсемплинг запроса. Если включено, запрос автоматически модифицируется для более креативной генерации, но результаты будут недетерминированными (одинаковое зерно не даст точно такой же результат)."
      },
      "right": {
        "name": "справа",
        "tooltip": "Количество пикселей для расширения справа изображения"
      },
      "seed": {
        "name": "seed",
        "tooltip": "Случайное зерно, используемое для создания шума."
      },
      "steps": {
        "name": "шаги",
        "tooltip": "Количество шагов для процесса генерации изображения"
      },
      "top": {
        "name": "верх",
        "tooltip": "Количество пикселей для расширения сверху изображения"
      }
    }
  },
  "FluxProFillNode": {
    "description": "Дорисовывает изображение на основе mask и prompt.",
    "display_name": "Flux.1 Заполнение изображения",
    "inputs": {
      "control_after_generate": {
        "name": "контроль после генерации"
      },
      "guidance": {
        "name": "направление",
        "tooltip": "Сила направляющего сигнала для процесса генерации изображения"
      },
      "image": {
        "name": "image"
      },
      "mask": {
        "name": "mask"
      },
      "prompt": {
        "name": "prompt",
        "tooltip": "Промпт для генерации изображения"
      },
      "prompt_upsampling": {
        "name": "повышение разрешения промпта",
        "tooltip": "Выполнять ли повышение разрешения промпта. Если активно, автоматически изменяет промпт для более креативной генерации, но результаты будут недетерминированными (одинаковое значение seed не даст точно такой же результат)."
      },
      "seed": {
        "name": "seed",
        "tooltip": "Случайное значение seed, используемое для создания шума."
      },
      "steps": {
        "name": "шаги",
        "tooltip": "Количество шагов для процесса генерации изображения"
      }
    }
  },
  "FluxProUltraImageNode": {
    "description": "Генерирует изображения с помощью Flux Pro 1.1 Ultra через API на основе запроса и разрешения.",
    "display_name": "Flux 1.1 [pro] Ultra Image",
    "inputs": {
      "aspect_ratio": {
        "name": "aspect_ratio",
        "tooltip": "Соотношение сторон изображения; должно быть между 1:4 и 4:1."
      },
      "control_after_generate": {
        "name": "control after generate"
      },
      "image_prompt": {
        "name": "image_prompt"
      },
      "image_prompt_strength": {
        "name": "image_prompt_strength",
        "tooltip": "Смешивание между текстовым запросом и image prompt."
      },
      "prompt": {
        "name": "prompt",
        "tooltip": "Запрос для генерации изображения"
      },
      "prompt_upsampling": {
        "name": "prompt_upsampling",
        "tooltip": "Выполнять ли апсемплинг запроса. Если включено, автоматически изменяет запрос для более креативной генерации, но результаты будут недетерминированными (одинаковое зерно не даст точно такой же результат)."
      },
      "raw": {
        "name": "raw",
        "tooltip": "Если True, генерирует менее обработанные, более естественные изображения."
      },
      "seed": {
        "name": "seed",
        "tooltip": "Случайное зерно, используемое для создания шума."
      }
    }
  },
  "FreSca": {
    "description": "Применяет масштабирование, зависящее от частоты, к управлению",
    "display_name": "FreSca",
    "inputs": {
      "freq_cutoff": {
        "name": "freq_cutoff",
        "tooltip": "Количество частотных индексов вокруг центра, считающихся низкочастотными"
      },
      "model": {
        "name": "model"
      },
      "scale_high": {
        "name": "scale_high",
        "tooltip": "Масштабный коэффициент для высокочастотных компонентов"
      },
      "scale_low": {
        "name": "scale_low",
        "tooltip": "Масштабный коэффициент для низкочастотных компонентов"
      }
    }
  },
  "FreeU": {
    "display_name": "FreeU",
    "inputs": {
      "b1": {
        "name": "b1"
      },
      "b2": {
        "name": "b2"
      },
      "model": {
        "name": "модель"
      },
      "s1": {
        "name": "s1"
      },
      "s2": {
        "name": "s2"
      }
    }
  },
  "FreeU_V2": {
    "display_name": "FreeU_V2",
    "inputs": {
      "b1": {
        "name": "b1"
      },
      "b2": {
        "name": "b2"
      },
      "model": {
        "name": "модель"
      },
      "s1": {
        "name": "s1"
      },
      "s2": {
        "name": "s2"
      }
    }
  },
  "GITSScheduler": {
    "display_name": "GITSScheduler",
    "inputs": {
      "coeff": {
        "name": "коэфф"
      },
      "denoise": {
        "name": "шумоподавление"
      },
      "steps": {
        "name": "шаги"
      }
    }
  },
  "GLIGENLoader": {
    "display_name": "Загрузчик GLIGEN",
    "inputs": {
      "gligen_name": {
        "name": "название_gligen"
      }
    }
  },
  "GLIGENTextBoxApply": {
    "display_name": "Применить текстовое поле GLIGEN",
    "inputs": {
      "clip": {
        "name": "clip"
      },
      "conditioning_to": {
        "name": "условие_для"
      },
      "gligen_textbox_model": {
        "name": "модель_текстового_поля_gligen"
      },
      "height": {
        "name": "высота"
      },
      "text": {
        "name": "текст"
      },
      "width": {
        "name": "ширина"
      },
      "x": {
        "name": "x"
      },
      "y": {
        "name": "y"
      }
    }
  },
  "GetVideoComponents": {
    "description": "Извлекает все компоненты из видео: кадры, аудио и частоту кадров.",
    "display_name": "Извлечь компоненты видео",
    "inputs": {
      "video": {
        "name": "видео",
        "tooltip": "Видео, из которого нужно извлечь компоненты."
      }
    },
    "outputs": {
      "0": {
        "name": "изображения"
      },
      "1": {
        "name": "аудио"
      },
      "2": {
        "name": "fps"
      }
    }
  },
  "GrowMask": {
    "display_name": "Увеличить маску",
    "inputs": {
      "expand": {
        "name": "расширить"
      },
      "mask": {
        "name": "маска"
      },
      "tapered_corners": {
        "name": "заостренные_углы"
      }
    }
  },
  "Hunyuan3Dv2Conditioning": {
    "display_name": "Hunyuan3Dv2Conditioning",
    "inputs": {
      "clip_vision_output": {
        "name": "выход_clip_vision"
      }
    },
    "outputs": {
      "0": {
        "name": "положительный"
      },
      "1": {
        "name": "отрицательный"
      }
    }
  },
  "Hunyuan3Dv2ConditioningMultiView": {
    "display_name": "Hunyuan3Dv2ConditioningMultiView",
    "inputs": {
      "back": {
        "name": "сзади"
      },
      "front": {
        "name": "фронт"
      },
      "left": {
        "name": "слева"
      },
      "right": {
        "name": "справа"
      }
    },
    "outputs": {
      "0": {
        "name": "положительный"
      },
      "1": {
        "name": "отрицательный"
      }
    }
  },
  "HunyuanImageToVideo": {
    "display_name": "HunyuanImageToVideo",
    "inputs": {
      "batch_size": {
        "name": "размер пакета"
      },
      "guidance_type": {
        "name": "тип руководства"
      },
      "height": {
        "name": "высота"
      },
      "length": {
        "name": "длина"
      },
      "positive": {
        "name": "положительный"
      },
      "start_image": {
        "name": "начальное изображение"
      },
      "vae": {
        "name": "vae"
      },
      "width": {
        "name": "ширина"
      }
    },
    "outputs": {
      "0": {
        "name": "положительный"
      },
      "1": {
        "name": "скрытое пространство"
      }
    }
  },
  "HyperTile": {
    "display_name": "Гиперплитка",
    "inputs": {
      "max_depth": {
        "name": "максимальная_глубина"
      },
      "model": {
        "name": "модель"
      },
      "scale_depth": {
        "name": "масштаб_глубины"
      },
      "swap_size": {
        "name": "размер_замены"
      },
      "tile_size": {
        "name": "размер_плитки"
      }
    }
  },
  "HypernetworkLoader": {
    "display_name": "Загрузчик hypernetwork",
    "inputs": {
      "hypernetwork_name": {
        "name": "название_hypernetwork"
      },
      "model": {
        "name": "модель"
      },
      "strength": {
        "name": "сила"
      }
    }
  },
  "IdeogramV1": {
    "description": "Генерирует изображения синхронно с использованием модели Ideogram V1.\n\nСсылки на изображения доступны ограниченное время; если вы хотите сохранить изображение, его необходимо скачать.",
    "display_name": "Ideogram V1",
    "inputs": {
      "aspect_ratio": {
        "name": "aspect_ratio",
        "tooltip": "Соотношение сторон для генерации изображения."
      },
      "control_after_generate": {
        "name": "control after generate"
      },
      "magic_prompt_option": {
        "name": "magic_prompt_option",
        "tooltip": "Определяет, использовать ли MagicPrompt при генерации"
      },
      "negative_prompt": {
        "name": "negative_prompt",
        "tooltip": "Описание того, что нужно исключить из изображения"
      },
      "num_images": {
        "name": "num_images"
      },
      "prompt": {
        "name": "prompt",
        "tooltip": "Запрос для генерации изображения"
      },
      "seed": {
        "name": "seed"
      },
      "turbo": {
        "name": "turbo",
        "tooltip": "Использовать ли turbo-режим (более быстрая генерация, возможно, с пониженным качеством)"
      }
    }
  },
  "IdeogramV2": {
    "description": "Генерирует изображения синхронно с использованием модели Ideogram V2.\n\nСсылки на изображения доступны ограниченное время; если вы хотите сохранить изображение, его необходимо скачать.",
    "display_name": "Ideogram V2",
    "inputs": {
      "aspect_ratio": {
        "name": "aspect_ratio",
        "tooltip": "Соотношение сторон для генерации изображения. Игнорируется, если разрешение не установлено в AUTO."
      },
      "control_after_generate": {
        "name": "control after generate"
      },
      "magic_prompt_option": {
        "name": "magic_prompt_option",
        "tooltip": "Определяет, использовать ли MagicPrompt при генерации"
      },
      "negative_prompt": {
        "name": "negative_prompt",
        "tooltip": "Описание того, что следует исключить из изображения"
      },
      "num_images": {
        "name": "num_images"
      },
      "prompt": {
        "name": "prompt",
        "tooltip": "Запрос для генерации изображения"
      },
      "resolution": {
        "name": "resolution",
        "tooltip": "Разрешение для генерации изображения. Если не установлено в AUTO, этот параметр переопределяет настройку aspect_ratio."
      },
      "seed": {
        "name": "seed"
      },
      "style_type": {
        "name": "style_type",
        "tooltip": "Тип стиля для генерации (только для V2)"
      },
      "turbo": {
        "name": "turbo",
        "tooltip": "Использовать ли turbo-режим (более быстрая генерация, возможно, с пониженным качеством)"
      }
    }
  },
  "IdeogramV3": {
    "description": "Генерирует изображения синхронно с использованием модели Ideogram V3.\n\nПоддерживает как обычную генерацию изображений по текстовым подсказкам, так и редактирование изображений с маской.\nСсылки на изображения доступны ограниченное время; если вы хотите сохранить изображение, его необходимо скачать.",
    "display_name": "Ideogram V3",
    "inputs": {
      "aspect_ratio": {
        "name": "aspect_ratio",
        "tooltip": "Соотношение сторон для генерации изображения. Игнорируется, если разрешение не установлено в Авто."
      },
      "control_after_generate": {
        "name": "control after generate"
      },
      "image": {
        "name": "image",
        "tooltip": "Необязательное референсное изображение для редактирования."
      },
      "magic_prompt_option": {
        "name": "magic_prompt_option",
        "tooltip": "Определяет, использовать ли MagicPrompt при генерации"
      },
      "mask": {
        "name": "mask",
        "tooltip": "Необязательная маска для дорисовки (белые области будут заменены)"
      },
      "num_images": {
        "name": "num_images"
      },
      "prompt": {
        "name": "prompt",
        "tooltip": "Подсказка для генерации или редактирования изображения"
      },
      "rendering_speed": {
        "name": "rendering_speed",
        "tooltip": "Управляет балансом между скоростью генерации и качеством"
      },
      "resolution": {
        "name": "resolution",
        "tooltip": "Разрешение для генерации изображения. Если не установлено в Авто, этот параметр переопределяет aspect_ratio."
      },
      "seed": {
        "name": "seed"
      }
    }
  },
  "ImageBatch": {
    "display_name": "Партия изображений",
    "inputs": {
      "image1": {
        "name": "изображение1"
      },
      "image2": {
        "name": "изображение2"
      }
    }
  },
  "ImageBlend": {
    "display_name": "Смешивание изображений",
    "inputs": {
      "blend_factor": {
        "name": "фактор_смешивания"
      },
      "blend_mode": {
        "name": "режим_смешивания"
      },
      "image1": {
        "name": "изображение1"
      },
      "image2": {
        "name": "изображение2"
      }
    }
  },
  "ImageBlur": {
    "display_name": "Размытие изображения",
    "inputs": {
      "blur_radius": {
        "name": "радиус_размытия"
      },
      "image": {
        "name": "изображение"
      },
      "sigma": {
        "name": "сигма"
      }
    }
  },
  "ImageColorToMask": {
    "display_name": "Цвет изображения в маску",
    "inputs": {
      "color": {
        "name": "цвет"
      },
      "image": {
        "name": "изображение"
      }
    }
  },
  "ImageCompositeMasked": {
    "display_name": "Составное изображение с маской",
    "inputs": {
      "destination": {
        "name": "назначение"
      },
      "mask": {
        "name": "маска"
      },
      "resize_source": {
        "name": "изменить_размер_источника"
      },
      "source": {
        "name": "источник"
      },
      "x": {
        "name": "x"
      },
      "y": {
        "name": "y"
      }
    }
  },
  "ImageCrop": {
    "display_name": "Обрезка изображения",
    "inputs": {
      "height": {
        "name": "высота"
      },
      "image": {
        "name": "изображение"
      },
      "width": {
        "name": "ширина"
      },
      "x": {
        "name": "x"
      },
      "y": {
        "name": "y"
      }
    }
  },
  "ImageFromBatch": {
    "display_name": "Изображение из партии",
    "inputs": {
      "batch_index": {
        "name": "индекс_пакета"
      },
      "image": {
        "name": "изображение"
      },
      "length": {
        "name": "длина"
      }
    }
  },
  "ImageInvert": {
    "display_name": "Инвертировать изображение",
    "inputs": {
      "image": {
        "name": "изображение"
      }
    }
  },
  "ImageOnlyCheckpointLoader": {
    "display_name": "Загрузчик checkpoint только для изображения (модель img2vid)",
    "inputs": {
      "ckpt_name": {
        "name": "название_ckpt"
      }
    }
  },
  "ImageOnlyCheckpointSave": {
    "display_name": "Сохранить только checkpoint изображения",
    "inputs": {
      "clip_vision": {
        "name": "clip_vision"
      },
      "filename_prefix": {
        "name": "префикс_названия_файла"
      },
      "model": {
        "name": "модель"
      },
      "vae": {
        "name": "vae"
      }
    }
  },
  "ImagePadForOutpaint": {
    "display_name": "Добавить поля к изображению для выкрашивания",
    "inputs": {
      "bottom": {
        "name": "снизу"
      },
      "feathering": {
        "name": "смягчение"
      },
      "image": {
        "name": "изображение"
      },
      "left": {
        "name": "слева"
      },
      "right": {
        "name": "справа"
      },
      "top": {
        "name": "сверху"
      }
    }
  },
  "ImageQuantize": {
    "display_name": "Квантизация изображения",
    "inputs": {
      "colors": {
        "name": "цвета"
      },
      "dither": {
        "name": "дизеринг"
      },
      "image": {
        "name": "изображение"
      }
    }
  },
  "ImageRGBToYUV": {
    "display_name": "ImageRGBToYUV",
    "inputs": {
      "image": {
        "name": "изображение"
      }
    },
    "outputs": {
      "0": {
        "name": "Y"
      },
      "1": {
        "name": "U"
      },
      "2": {
        "name": "V"
      }
    }
  },
  "ImageScale": {
    "display_name": "Масштабировать изображение",
    "inputs": {
      "crop": {
        "name": "обрезка"
      },
      "height": {
        "name": "высота"
      },
      "image": {
        "name": "изображение"
      },
      "upscale_method": {
        "name": "метод_увеличения"
      },
      "width": {
        "name": "ширина"
      }
    }
  },
  "ImageScaleBy": {
    "display_name": "Масштабировать изображение на",
    "inputs": {
      "image": {
        "name": "изображение"
      },
      "scale_by": {
        "name": "увеличить_на"
      },
      "upscale_method": {
        "name": "метод_апскейла"
      }
    }
  },
  "ImageScaleToTotalPixels": {
    "display_name": "Масштабировать изображение до общего количества пикселей",
    "inputs": {
      "image": {
        "name": "изображение"
      },
      "megapixels": {
        "name": "мегапиксели"
      },
      "upscale_method": {
        "name": "метод_апскейла"
      }
    }
  },
  "ImageSharpen": {
    "display_name": "Резкость изображения",
    "inputs": {
      "alpha": {
        "name": "альфа"
      },
      "image": {
        "name": "изображение"
      },
      "sharpen_radius": {
        "name": "радиус_резкости"
      },
      "sigma": {
        "name": "сигма"
      }
    }
  },
  "ImageToMask": {
    "display_name": "Преобразовать изображение в маску",
    "inputs": {
      "channel": {
        "name": "канал"
      },
      "image": {
        "name": "изображение"
      }
    }
  },
  "ImageUpscaleWithModel": {
    "display_name": "Апскейл изображения (с использованием модели)",
    "inputs": {
      "image": {
        "name": "изображение"
      },
      "upscale_model": {
        "name": "модель_апскейла"
      }
    }
  },
  "ImageYUVToRGB": {
    "display_name": "ImageYUVToRGB",
    "inputs": {
      "U": {
        "name": "U"
      },
      "V": {
        "name": "V"
      },
      "Y": {
        "name": "Y"
      }
    }
  },
  "InpaintModelConditioning": {
    "display_name": "Кондиционирование модели инпейнтинга",
    "inputs": {
      "mask": {
        "name": "маска"
      },
      "negative": {
        "name": "отрицательный"
      },
      "noise_mask": {
        "name": "шумовая_маска",
        "tooltip": "Добавьте маску шума к латентному изображению, чтобы выборка происходила только в пределах маски. Это может улучшить результаты или полностью испортить их в зависимости от модели."
      },
      "pixels": {
        "name": "пиксели"
      },
      "positive": {
        "name": "положительный"
      },
      "vae": {
        "name": "vae"
      }
    },
    "outputs": {
      "0": {
        "name": "положительный"
      },
      "1": {
        "name": "отрицательный"
      },
      "2": {
        "name": "латентный"
      }
    }
  },
  "InstructPixToPixConditioning": {
    "display_name": "Кондиционирование PixToPix",
    "inputs": {
      "negative": {
        "name": "отрицательный"
      },
      "pixels": {
        "name": "пиксели"
      },
      "positive": {
        "name": "положительный"
      },
      "vae": {
        "name": "vae"
      }
    },
    "outputs": {
      "0": {
        "name": "положительный"
      },
      "1": {
        "name": "отрицательный"
      },
      "2": {
        "name": "латентный"
      }
    }
  },
  "InvertMask": {
    "display_name": "Инвертировать маску",
    "inputs": {
      "mask": {
        "name": "маска"
      }
    }
  },
  "JoinImageWithAlpha": {
    "display_name": "Объединить изображение с альфа-каналом",
    "inputs": {
      "alpha": {
        "name": "альфа"
      },
      "image": {
        "name": "изображение"
      }
    }
  },
  "KSampler": {
    "description": "Использует предоставленную модель, положительное и отрицательное кондиционирование для удаления шума из латентного изображения.",
    "display_name": "KSampler",
    "inputs": {
      "cfg": {
        "name": "cfg",
        "tooltip": "Масштаб без классификатора балансирует креативность и соблюдение запроса. Более высокие значения приводят к изображениям, более точно соответствующим запросу, однако слишком высокие значения негативно скажутся на качестве."
      },
      "control_after_generate": {
        "name": "control after generate"
      },
      "denoise": {
        "name": "шумоподавление",
        "tooltip": "Количество уменьшения шума, более низкие значения сохранят структуру начального изображения, позволяя выборку изображений."
      },
      "latent_image": {
        "name": "латентное_изображение",
        "tooltip": "Латентное изображение для уменьшения шума."
      },
      "model": {
        "name": "модель",
        "tooltip": "Модель, используемая для уменьшения шума входного латентного изображения."
      },
      "negative": {
        "name": "отрицательный",
        "tooltip": "Условие, описывающее атрибуты, которые вы хотите исключить из изображения."
      },
      "positive": {
        "name": "положительный",
        "tooltip": "Условие, описывающее атрибуты, которые вы хотите включить в изображение."
      },
      "sampler_name": {
        "name": "название_сэмплера",
        "tooltip": "Алгоритм, используемый при выборке, это может повлиять на качество, скорость и стиль сгенерированного вывода."
      },
      "scheduler": {
        "name": "scheduler",
        "tooltip": "Scheduler контролирует, как шум постепенно удаляется для формирования изображения."
      },
      "seed": {
        "name": "сид",
        "tooltip": "Случайный сид, используемый для создания шума."
      },
      "steps": {
        "name": "шаги",
        "tooltip": "Количество шагов, используемых в процессе уменьшения шума."
      }
    },
    "outputs": {
      "0": {
        "tooltip": "шумоподавленный латент."
      }
    }
  },
  "KSamplerAdvanced": {
    "display_name": "KSampler (Расширенный)",
    "inputs": {
      "add_noise": {
        "name": "добавить_шум"
      },
      "cfg": {
        "name": "cfg"
      },
      "control_after_generate": {
        "name": "control after generate"
      },
      "end_at_step": {
        "name": "закончить_на_шаге"
      },
      "latent_image": {
        "name": "латентное_изображение"
      },
      "model": {
        "name": "модель"
      },
      "negative": {
        "name": "отрицательный"
      },
      "noise_seed": {
        "name": "сид_шума"
      },
      "positive": {
        "name": "положительный"
      },
      "return_with_leftover_noise": {
        "name": "вернуться_с_оставшимся_шумом"
      },
      "sampler_name": {
        "name": "название_сэмплера"
      },
      "scheduler": {
        "name": "scheduler"
      },
      "start_at_step": {
        "name": "начать_с_шага"
      },
      "steps": {
        "name": "шаги"
      }
    }
  },
  "KSamplerSelect": {
    "display_name": "Выбор KSampler",
    "inputs": {
      "sampler_name": {
        "name": "название_сэмплера"
      }
    }
  },
  "KarrasScheduler": {
    "display_name": "Scheduler Карраса",
    "inputs": {
      "rho": {
        "name": "ро"
      },
      "sigma_max": {
        "name": "максимальное_сигма"
      },
      "sigma_min": {
        "name": "минимальное_сигма"
      },
      "steps": {
        "name": "шаги"
      }
    }
  },
  "KlingCameraControlI2VNode": {
    "description": "Преобразуйте статичные изображения в кинематографичные видео с профессиональными движениями камеры, имитирующими реальную кинематографию. Управляйте виртуальными действиями камеры, включая зум, вращение, панорамирование, наклон и вид от первого лица, сохраняя фокус на исходном изображении.",
    "display_name": "Kling Image to Video (Управление камерой)",
    "inputs": {
      "aspect_ratio": {
        "name": "aspect_ratio"
      },
      "camera_control": {
        "name": "camera_control",
        "tooltip": "Может быть создан с помощью узла Kling Camera Controls. Управляет движением и перемещением камеры во время генерации видео."
      },
      "cfg_scale": {
        "name": "cfg_scale"
      },
      "negative_prompt": {
        "name": "negative_prompt",
        "tooltip": "Негативный текстовый промпт"
      },
      "prompt": {
        "name": "prompt",
        "tooltip": "Положительный текстовый промпт"
      },
      "start_frame": {
        "name": "start_frame",
        "tooltip": "Референсное изображение — URL или строка в формате Base64, размер не более 10 МБ, разрешение не менее 300*300 пикселей, соотношение сторон от 1:2.5 до 2.5:1. В Base64 не должно быть префикса data:image."
      }
    },
    "outputs": {
      "1": {
        "name": "video_id"
      },
      "2": {
        "name": "duration"
      }
    }
  },
  "KlingCameraControlT2VNode": {
    "description": "Преобразуйте текст в кинематографические видео с профессиональными движениями камеры, имитирующими реальную кинематографию. Управляйте виртуальными действиями камеры, включая зум, вращение, панорамирование, наклон и вид от первого лица, сохраняя при этом фокус на исходном тексте.",
    "display_name": "Kling Текст в Видео (Управление Камерой)",
    "inputs": {
      "aspect_ratio": {
        "name": "aspect_ratio"
      },
      "camera_control": {
        "name": "camera_control",
        "tooltip": "Может быть создан с помощью узла Kling Camera Controls. Управляет движением и перемещением камеры во время генерации видео."
      },
      "cfg_scale": {
        "name": "cfg_scale"
      },
      "negative_prompt": {
        "name": "negative_prompt",
        "tooltip": "Отрицательный текстовый запрос"
      },
      "prompt": {
        "name": "prompt",
        "tooltip": "Положительный текстовый запрос"
      }
    },
    "outputs": {
      "1": {
        "name": "video_id"
      },
      "2": {
        "name": "duration"
      }
    }
  },
  "KlingCameraControls": {
    "description": "Позволяет указывать параметры конфигурации для управления камерой Kling и эффектами управления движением.",
    "display_name": "Управление камерой Kling",
    "inputs": {
      "camera_control_type": {
        "name": "camera_control_type"
      },
      "horizontal_movement": {
        "name": "horizontal_movement",
        "tooltip": "Управляет движением камеры по горизонтальной оси (ось x). Отрицательное значение — влево, положительное — вправо."
      },
      "pan": {
        "name": "pan",
        "tooltip": "Управляет вращением камеры в вертикальной плоскости (ось x). Отрицательное значение — вращение вниз, положительное — вращение вверх."
      },
      "roll": {
        "name": "roll",
        "tooltip": "Управляет степенью наклона камеры (ось z). Отрицательное значение — против часовой стрелки, положительное — по часовой стрелке."
      },
      "tilt": {
        "name": "tilt",
        "tooltip": "Управляет вращением камеры в горизонтальной плоскости (ось y). Отрицательное значение — вращение влево, положительное — вращение вправо."
      },
      "vertical_movement": {
        "name": "vertical_movement",
        "tooltip": "Управляет движением камеры по вертикальной оси (ось y). Отрицательное значение — вниз, положительное — вверх."
      },
      "zoom": {
        "name": "zoom",
        "tooltip": "Управляет изменением фокусного расстояния камеры. Отрицательное значение — более узкий угол обзора, положительное — более широкий угол обзора."
      }
    },
    "outputs": {
      "0": {
        "name": "camera_control"
      }
    }
  },
  "KlingDualCharacterVideoEffectNode": {
    "description": "Достигайте различных спецэффектов при генерации видео на основе effect_scene. Первое изображение будет размещено слева, второе — справа в композиции.",
    "display_name": "Kling: Видеоэффекты с двумя персонажами",
    "inputs": {
      "duration": {
        "name": "duration"
      },
      "effect_scene": {
        "name": "effect_scene"
      },
      "image_left": {
        "name": "image_left",
        "tooltip": "Изображение слева"
      },
      "image_right": {
        "name": "image_right",
        "tooltip": "Изображение справа"
      },
      "mode": {
        "name": "mode"
      },
      "model_name": {
        "name": "model_name"
      }
    },
    "outputs": {
      "1": {
        "name": "duration"
      }
    }
  },
  "KlingImage2VideoNode": {
    "description": "Узел Kling Image to Video",
    "display_name": "Kling Image to Video",
    "inputs": {
      "aspect_ratio": {
        "name": "aspect_ratio"
      },
      "cfg_scale": {
        "name": "cfg_scale"
      },
      "duration": {
        "name": "duration"
      },
      "mode": {
        "name": "mode"
      },
      "model_name": {
        "name": "model_name"
      },
      "negative_prompt": {
        "name": "negative_prompt",
        "tooltip": "Негативный текстовый запрос"
      },
      "prompt": {
        "name": "prompt",
        "tooltip": "Положительный текстовый запрос"
      },
      "start_frame": {
        "name": "start_frame",
        "tooltip": "Референсное изображение — URL или строка в формате Base64, не более 10 МБ, разрешение не менее 300×300 пикселей, соотношение сторон от 1:2.5 до 2.5:1. В Base64 не должно быть префикса data:image."
      }
    },
    "outputs": {
      "1": {
        "name": "video_id"
      },
      "2": {
        "name": "duration"
      }
    }
  },
  "KlingImageGenerationNode": {
    "description": "Узел генерации изображений Kling. Генерирует изображение по текстовому запросу с необязательным референсным изображением.",
    "display_name": "Генерация изображений Kling",
    "inputs": {
      "aspect_ratio": {
        "name": "aspect_ratio"
      },
      "human_fidelity": {
        "name": "human_fidelity",
        "tooltip": "Сходство с референсом субъекта"
      },
      "image": {
        "name": "image"
      },
      "image_fidelity": {
        "name": "image_fidelity",
        "tooltip": "Интенсивность референса для загруженных пользователем изображений"
      },
      "image_type": {
        "name": "image_type"
      },
      "model_name": {
        "name": "model_name"
      },
      "n": {
        "name": "n",
        "tooltip": "Количество сгенерированных изображений"
      },
      "negative_prompt": {
        "name": "negative_prompt",
        "tooltip": "Отрицательный текстовый запрос"
      },
      "prompt": {
        "name": "prompt",
        "tooltip": "Положительный текстовый запрос"
      }
    }
  },
  "KlingLipSyncAudioToVideoNode": {
    "description": "Узел Kling Lip Sync Audio to Video. Синхронизирует движения рта на видео с аудиосодержимым аудиофайла.",
    "display_name": "Kling синхронизация губ в видео с аудио",
    "inputs": {
      "audio": {
        "name": "аудио"
      },
      "video": {
        "name": "видео"
      },
      "voice_language": {
        "name": "язык голоса"
      }
    },
    "outputs": {
      "1": {
        "name": "video_id"
      },
      "2": {
        "name": "длительность"
      }
    }
  },
  "KlingLipSyncTextToVideoNode": {
    "description": "Узел Kling Lip Sync Text to Video. Синхронизирует движения рта в видеофайле с текстовой подсказкой.",
    "display_name": "Kling Синхронизация губ в видео с текстом",
    "inputs": {
      "text": {
        "name": "текст",
        "tooltip": "Текст для генерации видео с синхронизацией губ. Обязательно при режиме text2video. Максимальная длина — 120 символов."
      },
      "video": {
        "name": "видео"
      },
      "voice": {
        "name": "голос"
      },
      "voice_speed": {
        "name": "скорость_голоса",
        "tooltip": "Скорость речи. Допустимый диапазон: 0.8~2.0, с точностью до одной десятой."
      }
    },
    "outputs": {
      "1": {
        "name": "video_id"
      },
      "2": {
        "name": "длительность"
      }
    }
  },
  "KlingSingleImageVideoEffectNode": {
    "description": "Достигайте различных спецэффектов при генерации видео на основе effect_scene.",
    "display_name": "Kling Видеоэффекты",
    "inputs": {
      "duration": {
        "name": "duration"
      },
      "effect_scene": {
        "name": "effect_scene"
      },
      "image": {
        "name": "image",
        "tooltip": "Референсное изображение. URL или строка в формате Base64 (без префикса data:image). Размер файла не должен превышать 10 МБ, разрешение не менее 300*300 пикселей, соотношение сторон от 1:2.5 до 2.5:1"
      },
      "model_name": {
        "name": "model_name"
      }
    },
    "outputs": {
      "1": {
        "name": "video_id"
      },
      "2": {
        "name": "duration"
      }
    }
  },
  "KlingStartEndFrameNode": {
    "description": "Создайте видеопоследовательность, плавно переходящую между заданными начальными и конечными изображениями. Узел генерирует все промежуточные кадры, обеспечивая плавную трансформацию от первого кадра к последнему.",
    "display_name": "Kling: Кадры начала и конца в видео",
    "inputs": {
      "aspect_ratio": {
        "name": "aspect_ratio"
      },
      "cfg_scale": {
        "name": "cfg_scale"
      },
      "end_frame": {
        "name": "end_frame",
        "tooltip": "Референсное изображение — контроль конечного кадра. URL или строка в формате Base64, не более 10 МБ, разрешение не менее 300×300 пикселей. В Base64 не должно быть префикса data:image."
      },
      "mode": {
        "name": "mode",
        "tooltip": "Конфигурация для генерации видео в формате: режим / длительность / model_name."
      },
      "negative_prompt": {
        "name": "negative_prompt",
        "tooltip": "Негативный текстовый промпт"
      },
      "prompt": {
        "name": "prompt",
        "tooltip": "Положительный текстовый промпт"
      },
      "start_frame": {
        "name": "start_frame",
        "tooltip": "Референсное изображение — URL или строка в формате Base64, не более 10 МБ, разрешение не менее 300×300 пикселей, соотношение сторон от 1:2.5 до 2.5:1. В Base64 не должно быть префикса data:image."
      }
    },
    "outputs": {
      "1": {
        "name": "video_id"
      },
      "2": {
        "name": "duration"
      }
    }
  },
  "KlingTextToVideoNode": {
    "description": "Узел Kling: текст в видео",
    "display_name": "Kling: текст в видео",
    "inputs": {
      "aspect_ratio": {
        "name": "aspect_ratio"
      },
      "cfg_scale": {
        "name": "cfg_scale"
      },
      "mode": {
        "name": "mode",
        "tooltip": "Конфигурация для генерации видео в формате: режим / длительность / имя_модели."
      },
      "negative_prompt": {
        "name": "negative_prompt",
        "tooltip": "Отрицательный текстовый запрос"
      },
      "prompt": {
        "name": "prompt",
        "tooltip": "Положительный текстовый запрос"
      }
    },
    "outputs": {
      "1": {
        "name": "video_id"
      },
      "2": {
        "name": "duration"
      }
    }
  },
  "KlingVideoExtendNode": {
    "description": "Узел Kling Video Extend. Расширяет видео, созданные другими узлами Kling. video_id создаётся с помощью других узлов Kling.",
    "display_name": "Kling Video Extend",
    "inputs": {
      "cfg_scale": {
        "name": "cfg_scale"
      },
      "negative_prompt": {
        "name": "negative_prompt",
        "tooltip": "Отрицательный текстовый запрос для указания элементов, которых следует избегать в расширенном видео"
      },
      "prompt": {
        "name": "prompt",
        "tooltip": "Положительный текстовый запрос для управления расширением видео"
      },
      "video_id": {
        "name": "video_id",
        "tooltip": "ID видео, которое нужно расширить. Поддерживаются видео, созданные с помощью text-to-video, image-to-video и предыдущих операций расширения видео. Общая продолжительность после расширения не может превышать 3 минуты."
      }
    },
    "outputs": {
      "1": {
        "name": "video_id"
      },
      "2": {
        "name": "duration"
      }
    }
  },
  "KlingVirtualTryOnNode": {
    "description": "Узел Kling Виртуальная Примерка. Введите изображение человека и изображение одежды, чтобы примерить одежду на человеке.",
    "display_name": "Kling Виртуальная Примерка",
    "inputs": {
      "cloth_image": {
        "name": "cloth_image"
      },
      "human_image": {
        "name": "human_image"
      },
      "model_name": {
        "name": "model_name"
      }
    }
  },
  "LTXVAddGuide": {
    "display_name": "LTXVAddGuide",
    "inputs": {
      "frame_idx": {
        "name": "индекс кадра",
        "tooltip": "Индекс кадра для начала условия. Для однокадровых изображений или видео с 1-8 кадрами любое значение frame_idx приемлемо. Для видео с 9+ кадрами, frame_idx должен быть кратен 8, в противном случае он будет округлен вниз до ближайшего кратного 8. Отрицательные значения считаются с конца видео."
      },
      "image": {
        "name": "изображение",
        "tooltip": "Изображение или видео для условия скрытого видео. Должно быть 8*n + 1 кадров. Если видео не 8*n + 1 кадров, оно будет обрезано до ближайших 8*n + 1 кадров."
      },
      "latent": {
        "name": "скрытое пространство"
      },
      "negative": {
        "name": "отрицательный"
      },
      "positive": {
        "name": "положительный"
      },
      "strength": {
        "name": "сила"
      },
      "vae": {
        "name": "vae"
      }
    },
    "outputs": {
      "0": {
        "name": "положительный"
      },
      "1": {
        "name": "отрицательный"
      },
      "2": {
        "name": "скрытое пространство"
      }
    }
  },
  "LTXVConditioning": {
    "display_name": "Кондиционирование LTXV",
    "inputs": {
      "frame_rate": {
        "name": "частота_кадров"
      },
      "negative": {
        "name": "отрицательный"
      },
      "positive": {
        "name": "положительный"
      }
    },
    "outputs": {
      "0": {
        "name": "положительный"
      },
      "1": {
        "name": "отрицательный"
      }
    }
  },
  "LTXVCropGuides": {
    "display_name": "LTXVCropGuides",
    "inputs": {
      "latent": {
        "name": "скрытое пространство"
      },
      "negative": {
        "name": "отрицательный"
      },
      "positive": {
        "name": "положительный"
      }
    },
    "outputs": {
      "0": {
        "name": "положительный"
      },
      "1": {
        "name": "отрицательный"
      },
      "2": {
        "name": "скрытое пространство"
      }
    }
  },
  "LTXVImgToVideo": {
    "display_name": "LTXVImgToVideo",
    "inputs": {
      "batch_size": {
        "name": "размер_пакета"
      },
      "height": {
        "name": "высота"
      },
      "image": {
        "name": "изображение"
      },
      "length": {
        "name": "длина"
      },
      "negative": {
        "name": "отрицательный"
      },
      "positive": {
        "name": "положительный"
      },
      "strength": {
        "name": "интенсивность"
      },
      "vae": {
        "name": "vae"
      },
      "width": {
        "name": "ширина"
      }
    },
    "outputs": {
      "0": {
        "name": "положительный"
      },
      "1": {
        "name": "отрицательный"
      },
      "2": {
        "name": "латентный"
      }
    }
  },
  "LTXVPreprocess": {
    "display_name": "LTXVPreprocess",
    "inputs": {
      "image": {
        "name": "изображение"
      },
      "img_compression": {
        "name": "сжатие изображения",
        "tooltip": "Степень сжатия, применяемая к изображению."
      }
    },
    "outputs": {
      "0": {
        "name": "выходное изображение"
      }
    }
  },
  "LTXVScheduler": {
    "display_name": "Scheduler LTXV",
    "inputs": {
      "base_shift": {
        "name": "базовое_смещение"
      },
      "latent": {
        "name": "скрытый"
      },
      "max_shift": {
        "name": "максимальное_смещение"
      },
      "steps": {
        "name": "шаги"
      },
      "stretch": {
        "name": "растяжение",
        "tooltip": "Растянуть сигмы, чтобы они находились в диапазоне [terminal, 1]."
      },
      "terminal": {
        "name": "терминал",
        "tooltip": "Конечное значение сигм после растяжения."
      }
    }
  },
  "LaplaceScheduler": {
    "display_name": "Scheduler Лапласа",
    "inputs": {
      "beta": {
        "name": "бета"
      },
      "mu": {
        "name": "мю"
      },
      "sigma_max": {
        "name": "максимальное_сигма"
      },
      "sigma_min": {
        "name": "минимальное_сигма"
      },
      "steps": {
        "name": "шаги"
      }
    }
  },
  "LatentAdd": {
    "display_name": "Добавить латент",
    "inputs": {
      "samples1": {
        "name": "образцы1"
      },
      "samples2": {
        "name": "образцы2"
      }
    }
  },
  "LatentApplyOperation": {
    "display_name": "Применить операцию к латенту",
    "inputs": {
      "operation": {
        "name": "операция"
      },
      "samples": {
        "name": "образцы"
      }
    }
  },
  "LatentApplyOperationCFG": {
    "display_name": "Применить операцию к латенту CFG",
    "inputs": {
      "model": {
        "name": "модель"
      },
      "operation": {
        "name": "операция"
      }
    }
  },
  "LatentBatch": {
    "display_name": "Партия латентов",
    "inputs": {
      "samples1": {
        "name": "образцы1"
      },
      "samples2": {
        "name": "образцы2"
      }
    }
  },
  "LatentBatchSeedBehavior": {
    "display_name": "Поведение сида партии латентов",
    "inputs": {
      "samples": {
        "name": "образцы"
      },
      "seed_behavior": {
        "name": "поведение_сида"
      }
    }
  },
  "LatentBlend": {
    "display_name": "Смешивание латентов",
    "inputs": {
      "blend_factor": {
        "name": "фактор_смешивания"
      },
      "samples1": {
        "name": "образцы1"
      },
      "samples2": {
        "name": "образцы2"
      }
    }
  },
  "LatentComposite": {
    "display_name": "Составной латент",
    "inputs": {
      "feather": {
        "name": "перо"
      },
      "samples_from": {
        "name": "образцы_из"
      },
      "samples_to": {
        "name": "образцы_для"
      },
      "x": {
        "name": "x"
      },
      "y": {
        "name": "y"
      }
    }
  },
  "LatentCompositeMasked": {
    "display_name": "Составной латент с маской",
    "inputs": {
      "destination": {
        "name": "назначение"
      },
      "mask": {
        "name": "маска"
      },
      "resize_source": {
        "name": "изменить_размер_источника"
      },
      "source": {
        "name": "источник"
      },
      "x": {
        "name": "x"
      },
      "y": {
        "name": "y"
      }
    }
  },
  "LatentCrop": {
    "display_name": "Обрезка латента",
    "inputs": {
      "height": {
        "name": "высота"
      },
      "samples": {
        "name": "образцы"
      },
      "width": {
        "name": "ширина"
      },
      "x": {
        "name": "x"
      },
      "y": {
        "name": "y"
      }
    }
  },
  "LatentFlip": {
    "display_name": "Перевернуть латент",
    "inputs": {
      "flip_method": {
        "name": "метод_отражения"
      },
      "samples": {
        "name": "образцы"
      }
    }
  },
  "LatentFromBatch": {
    "display_name": "Латент из партии",
    "inputs": {
      "batch_index": {
        "name": "индекс_пакета"
      },
      "length": {
        "name": "длина"
      },
      "samples": {
        "name": "образцы"
      }
    }
  },
  "LatentInterpolate": {
    "display_name": "Интерполяция латента",
    "inputs": {
      "ratio": {
        "name": "соотношение"
      },
      "samples1": {
        "name": "образцы1"
      },
      "samples2": {
        "name": "образцы2"
      }
    }
  },
  "LatentMultiply": {
    "display_name": "Умножить латент",
    "inputs": {
      "multiplier": {
        "name": "множитель"
      },
      "samples": {
        "name": "образцы"
      }
    }
  },
  "LatentOperationSharpen": {
    "display_name": "Операция латента: резкость",
    "inputs": {
      "alpha": {
        "name": "альфа"
      },
      "sharpen_radius": {
        "name": "радиус_резкости"
      },
      "sigma": {
        "name": "сигма"
      }
    }
  },
  "LatentOperationTonemapReinhard": {
    "display_name": "Операция латента: тональная карта Рейнхарда",
    "inputs": {
      "multiplier": {
        "name": "множитель"
      }
    }
  },
  "LatentRotate": {
    "display_name": "Повернуть латент",
    "inputs": {
      "rotation": {
        "name": "вращение"
      },
      "samples": {
        "name": "образцы"
      }
    }
  },
  "LatentSubtract": {
    "display_name": "Вычесть латент",
    "inputs": {
      "samples1": {
        "name": "образцы1"
      },
      "samples2": {
        "name": "образцы2"
      }
    }
  },
  "LatentUpscale": {
    "display_name": "Увеличить латент",
    "inputs": {
      "crop": {
        "name": "обрезка"
      },
      "height": {
        "name": "высота"
      },
      "samples": {
        "name": "образцы"
      },
      "upscale_method": {
        "name": "метод_апскейла"
      },
      "width": {
        "name": "ширина"
      }
    }
  },
  "LatentUpscaleBy": {
    "display_name": "Увеличить латент на",
    "inputs": {
      "samples": {
        "name": "образцы"
      },
      "scale_by": {
        "name": "масштабировать_по"
      },
      "upscale_method": {
        "name": "метод_апскейла"
      }
    }
  },
  "Load3D": {
    "display_name": "Загрузить 3D",
    "inputs": {
      "clear": {
      },
      "height": {
        "name": "высота"
      },
      "image": {
        "name": "изображение"
      },
      "model_file": {
        "name": "файл модели"
      },
      "upload 3d model": {
      },
      "width": {
        "name": "ширина"
      }
    },
    "outputs": {
      "0": {
        "name": "изображение"
      },
      "1": {
        "name": "mask"
      },
      "2": {
        "name": "путь к mesh"
      },
      "3": {
        "name": "нормаль"
      },
      "4": {
        "name": "линейный рисунок"
      },
      "5": {
        "name": "информация о камере"
      }
    }
  },
  "Load3DAnimation": {
    "display_name": "Загрузить 3D - Анимация",
    "inputs": {
      "clear": {
      },
      "height": {
        "name": "высота"
      },
      "image": {
        "name": "изображение"
      },
      "model_file": {
        "name": "файл_модели"
      },
      "upload 3d model": {
      },
      "width": {
        "name": "ширина"
      }
    },
    "outputs": {
      "0": {
        "name": "изображение"
      },
      "1": {
        "name": "mask"
      },
      "2": {
        "name": "путь_к_модели"
      },
      "3": {
        "name": "нормаль"
      },
      "4": {
        "name": "информация_о_камере"
      }
    }
  },
  "LoadAudio": {
    "display_name": "Загрузить аудио",
    "inputs": {
      "audio": {
        "name": "аудио"
      },
      "audioUI": {
        "name": "audioUI"
      },
      "upload": {
        "name": "выберите файл для загрузки"
      }
    }
  },
  "LoadImage": {
    "display_name": "Загрузить изображение",
    "inputs": {
      "image": {
        "name": "изображение"
      },
      "upload": {
        "name": "выберите файл для загрузки"
      }
    }
  },
  "LoadImageMask": {
    "display_name": "Загрузить изображение (как маску)",
    "inputs": {
      "channel": {
        "name": "канал"
      },
      "image": {
        "name": "изображение"
      },
      "upload": {
        "name": "выберите файл для загрузки"
      }
    }
  },
  "LoadImageOutput": {
    "description": "Загрузите изображение из папки вывода. При нажатии кнопки обновления, узел обновит список изображений и автоматически выберет первое изображение, что позволяет легко итерировать.",
    "display_name": "Загрузить изображение (из выходных данных)",
    "inputs": {
      "image": {
        "name": "изображение"
      },
      "refresh": {
      },
      "upload": {
        "name": "выберите файл для загрузки"
      }
    }
  },
  "LoadLatent": {
    "display_name": "Загрузить латент",
    "inputs": {
      "latent": {
        "name": "скрытый"
      }
    }
  },
  "LoadVideo": {
    "display_name": "Загрузить видео",
    "inputs": {
      "file": {
        "name": "файл"
      },
      "upload": {
        "name": "выберите файл для загрузки"
      }
    }
  },
  "LoraLoader": {
    "description": "LoRA используются для изменения моделей диффузии и CLIP, изменяя способ, которым латенты удаляются от шума, например, применяя стили. Несколько нод LoRA могут быть связаны вместе.",
    "display_name": "Загрузить LoRA",
    "inputs": {
      "clip": {
        "name": "клип",
        "tooltip": "Модель CLIP, к которой будет применена LoRA."
      },
      "lora_name": {
        "name": "название_lora",
        "tooltip": "Название LoRA."
      },
      "model": {
        "name": "модель",
        "tooltip": "Диффузионная модель, к которой будет применена LoRA."
      },
      "strength_clip": {
        "name": "сила_клипа",
        "tooltip": "Насколько сильно модифицировать модель CLIP. Это значение может быть отрицательным."
      },
      "strength_model": {
        "name": "сила_модели",
        "tooltip": "Насколько сильно модифицировать диффузионную модель. Это значение может быть отрицательным."
      }
    },
    "outputs": {
      "0": {
        "tooltip": "Модифицированная модель диффузии."
      },
      "1": {
        "tooltip": "Модифицированная модель CLIP."
      }
    }
  },
  "LoraLoaderModelOnly": {
    "description": "LoRA используются для изменения моделей диффузии и CLIP, изменяя способ, которым латенты удаляются от шума, например, применяя стили. Несколько нод LoRA могут быть связаны вместе.",
    "display_name": "Загрузчик LoRA (Только модель)",
    "inputs": {
      "lora_name": {
        "name": "название_lora"
      },
      "model": {
        "name": "модель"
      },
      "strength_model": {
        "name": "сила_модели"
      }
    },
    "outputs": {
      "0": {
        "tooltip": "Модифицированная модель диффузии."
      }
    }
  },
  "LoraSave": {
    "display_name": "Извлечь и сохранить LoRA",
    "inputs": {
      "bias_diff": {
        "name": "разница_смещения"
      },
      "filename_prefix": {
        "name": "префикс_названия_файла"
      },
      "lora_type": {
        "name": "тип_lora"
      },
      "model_diff": {
        "name": "разница_модели",
        "tooltip": "Вывод ModelSubtract, который будет преобразован в lora."
      },
      "rank": {
        "name": "ранг"
      },
      "text_encoder_diff": {
        "name": "разница_текстового_кодировщика",
        "tooltip": "Вывод CLIPSubtract, который будет преобразован в lora."
      }
    }
  },
  "LotusConditioning": {
    "display_name": "LotusConditioning",
    "outputs": {
      "0": {
        "name": "условие"
      }
    }
  },
  "LumaConceptsNode": {
    "description": "Содержит одну или несколько концепций камеры для использования с узлами Luma Text to Video и Luma Image to Video.",
    "display_name": "Luma Концепции",
    "inputs": {
      "concept1": {
        "name": "concept1"
      },
      "concept2": {
        "name": "concept2"
      },
      "concept3": {
        "name": "concept3"
      },
      "concept4": {
        "name": "concept4"
      },
      "luma_concepts": {
        "name": "luma_concepts",
        "tooltip": "Необязательные концепции камеры для добавления к выбранным здесь."
      }
    },
    "outputs": {
      "0": {
        "name": "luma_concepts"
      }
    }
  },
  "LumaImageModifyNode": {
    "description": "Синхронно изменяет изображения на основе запроса и соотношения сторон.",
    "display_name": "Luma Image to Image",
    "inputs": {
      "control_after_generate": {
        "name": "контроль после генерации"
      },
      "image": {
        "name": "изображение"
      },
      "image_weight": {
        "name": "вес изображения",
        "tooltip": "Вес изображения; чем ближе к 1.0, тем меньше будет изменено изображение."
      },
      "model": {
        "name": "модель"
      },
      "prompt": {
        "name": "промпт",
        "tooltip": "Промпт для генерации изображения"
      },
      "seed": {
        "name": "seed",
        "tooltip": "Seed для определения необходимости повторного запуска узла; фактические результаты недетерминированы независимо от seed."
      }
    }
  },
  "LumaImageNode": {
    "description": "Синхронно генерирует изображения на основе запроса и соотношения сторон.",
    "display_name": "Luma Текст в изображение",
    "inputs": {
      "aspect_ratio": {
        "name": "aspect_ratio"
      },
      "character_image": {
        "name": "character_image",
        "tooltip": "Референсные изображения персонажей; может быть пакет из нескольких, учитывается до 4 изображений."
      },
      "control_after_generate": {
        "name": "control after generate"
      },
      "image_luma_ref": {
        "name": "image_luma_ref",
        "tooltip": "Подключение к Luma Reference для влияния на генерацию с помощью входных изображений; может быть учтено до 4 изображений."
      },
      "model": {
        "name": "model"
      },
      "prompt": {
        "name": "prompt",
        "tooltip": "Запрос для генерации изображения"
      },
      "seed": {
        "name": "seed",
        "tooltip": "Сид для определения необходимости повторного запуска узла; фактические результаты не являются детерминированными независимо от сида."
      },
      "style_image": {
        "name": "style_image",
        "tooltip": "Референсное изображение стиля; будет использовано только 1 изображение."
      },
      "style_image_weight": {
        "name": "style_image_weight",
        "tooltip": "Вес изображения стиля. Игнорируется, если style_image не предоставлено."
      }
    }
  },
  "LumaImageToVideoNode": {
    "description": "Генерирует видео синхронно на основе запроса, входных изображений и output_size.",
    "display_name": "Luma Image to Video",
    "inputs": {
      "control_after_generate": {
        "name": "контроль после генерации"
      },
      "duration": {
        "name": "длительность"
      },
      "first_image": {
        "name": "первое_изображение",
        "tooltip": "Первый кадр сгенерированного видео."
      },
      "last_image": {
        "name": "последнее_изображение",
        "tooltip": "Последний кадр сгенерированного видео."
      },
      "loop": {
        "name": "зацикливание"
      },
      "luma_concepts": {
        "name": "luma_concepts",
        "tooltip": "Необязательные Camera Concepts для управления движением камеры через узел Luma Concepts."
      },
      "model": {
        "name": "model"
      },
      "prompt": {
        "name": "prompt",
        "tooltip": "Запрос для генерации видео"
      },
      "resolution": {
        "name": "разрешение"
      },
      "seed": {
        "name": "seed",
        "tooltip": "Seed для определения необходимости повторного запуска узла; фактические результаты недетерминированы независимо от seed."
      }
    }
  },
  "LumaReferenceNode": {
    "description": "Содержит изображение и вес для использования с узлом Luma Generate Image.",
    "display_name": "Luma Reference",
    "inputs": {
      "image": {
        "name": "image",
        "tooltip": "Изображение для использования в качестве эталона."
      },
      "luma_ref": {
        "name": "luma_ref"
      },
      "weight": {
        "name": "weight",
        "tooltip": "Вес эталонного изображения."
      }
    },
    "outputs": {
      "0": {
        "name": "luma_ref"
      }
    }
  },
  "LumaVideoNode": {
    "description": "Синхронно генерирует видео на основе запроса и output_size.",
    "display_name": "Luma Текст в Видео",
    "inputs": {
      "aspect_ratio": {
        "name": "aspect_ratio"
      },
      "control_after_generate": {
        "name": "control after generate"
      },
      "duration": {
        "name": "duration"
      },
      "loop": {
        "name": "loop"
      },
      "luma_concepts": {
        "name": "luma_concepts",
        "tooltip": "Необязательные Camera Concepts для управления движением камеры через узел Luma Concepts."
      },
      "model": {
        "name": "model"
      },
      "prompt": {
        "name": "prompt",
        "tooltip": "Запрос для генерации видео"
      },
      "resolution": {
        "name": "resolution"
      },
      "seed": {
        "name": "seed",
        "tooltip": "Seed для определения, нужно ли повторно запускать узел; фактические результаты всегда недетерминированы, независимо от seed."
      }
    }
  },
  "Mahiro": {
    "description": "Измените руководство, чтобы оно больше масштабировалось в «направлении» положительной подсказки, а не разницы между отрицательной подсказкой.",
    "display_name": "Mahiro настолько мила, что заслуживает лучшей функции руководства!! (。・ω・。)",
    "inputs": {
      "model": {
        "name": "модель"
      }
    },
    "outputs": {
      "0": {
        "name": "исправленная_модель"
      }
    }
  },
  "MaskComposite": {
    "display_name": "Составная маска",
    "inputs": {
      "destination": {
        "name": "назначение"
      },
      "operation": {
        "name": "операция"
      },
      "source": {
        "name": "источник"
      },
      "x": {
        "name": "x"
      },
      "y": {
        "name": "y"
      }
    }
  },
  "MaskPreview": {
    "description": "Сохраняет входные изображения в ваш выходной каталог ComfyUI.",
    "display_name": "MaskPreview",
    "inputs": {
      "mask": {
        "name": "mask"
      }
    }
  },
  "MaskToImage": {
    "display_name": "Преобразовать маску в изображение",
    "inputs": {
      "mask": {
        "name": "маска"
      }
    }
  },
  "MinimaxImageToVideoNode": {
    "description": "Генерирует видео из изображения и подсказок с помощью API MiniMax",
    "display_name": "MiniMax: изображение в видео",
    "inputs": {
      "control_after_generate": {
        "name": "контроль после генерации"
      },
      "image": {
        "name": "изображение",
        "tooltip": "Изображение, используемое в качестве первого кадра для генерации видео"
      },
      "model": {
        "name": "модель",
        "tooltip": "Модель, используемая для генерации видео"
      },
      "prompt_text": {
        "name": "текстовый промпт",
        "tooltip": "Текстовая подсказка для управления генерацией видео"
      },
      "seed": {
        "name": "seed",
        "tooltip": "Случайное зерно, используемое для создания шума."
      }
    }
  },
  "MinimaxTextToVideoNode": {
    "description": "Генерирует видео по подсказкам с помощью API MiniMax",
    "display_name": "MiniMax: текст в видео",
    "inputs": {
      "control_after_generate": {
        "name": "control after generate"
      },
      "model": {
        "name": "model",
        "tooltip": "Модель для генерации видео"
      },
      "prompt_text": {
        "name": "prompt_text",
        "tooltip": "Текстовая подсказка для управления генерацией видео"
      },
      "seed": {
        "name": "seed",
        "tooltip": "Случайное зерно, используемое для создания шума."
      }
    }
  },
  "ModelComputeDtype": {
    "display_name": "ModelComputeDtype",
    "inputs": {
      "dtype": {
        "name": "dtype"
      },
      "model": {
        "name": "модель"
      }
    }
  },
  "ModelMergeAdd": {
    "display_name": "Слияние моделей",
    "inputs": {
      "model1": {
        "name": "модель1"
      },
      "model2": {
        "name": "модель2"
      }
    }
  },
  "ModelMergeAuraflow": {
    "display_name": "Слияние моделей Auraflow",
    "inputs": {
      "cond_seq_linear_": {
        "name": "cond_seq_linear."
      },
      "double_layers_0_": {
        "name": "double_layers.0."
      },
      "double_layers_1_": {
        "name": "double_layers.1."
      },
      "double_layers_2_": {
        "name": "double_layers.2."
      },
      "double_layers_3_": {
        "name": "double_layers.3."
      },
      "final_linear_": {
        "name": "final_linear."
      },
      "init_x_linear_": {
        "name": "init_x_linear."
      },
      "modF_": {
        "name": "modF."
      },
      "model1": {
        "name": "модель1"
      },
      "model2": {
        "name": "модель2"
      },
      "positional_encoding": {
        "name": "позиционное кодирование"
      },
      "register_tokens": {
        "name": "регистрация токенов"
      },
      "single_layers_0_": {
        "name": "single_layers.0."
      },
      "single_layers_10_": {
        "name": "single_layers.10."
      },
      "single_layers_11_": {
        "name": "single_layers.11."
      },
      "single_layers_12_": {
        "name": "single_layers.12."
      },
      "single_layers_13_": {
        "name": "single_layers.13."
      },
      "single_layers_14_": {
        "name": "single_layers.14."
      },
      "single_layers_15_": {
        "name": "single_layers.15."
      },
      "single_layers_16_": {
        "name": "single_layers.16."
      },
      "single_layers_17_": {
        "name": "single_layers.17."
      },
      "single_layers_18_": {
        "name": "single_layers.18."
      },
      "single_layers_19_": {
        "name": "single_layers.19."
      },
      "single_layers_1_": {
        "name": "single_layers.1."
      },
      "single_layers_20_": {
        "name": "single_layers.20."
      },
      "single_layers_21_": {
        "name": "single_layers.21."
      },
      "single_layers_22_": {
        "name": "single_layers.22."
      },
      "single_layers_23_": {
        "name": "single_layers.23."
      },
      "single_layers_24_": {
        "name": "single_layers.24."
      },
      "single_layers_25_": {
        "name": "single_layers.25."
      },
      "single_layers_26_": {
        "name": "single_layers.26."
      },
      "single_layers_27_": {
        "name": "single_layers.27."
      },
      "single_layers_28_": {
        "name": "single_layers.28."
      },
      "single_layers_29_": {
        "name": "single_layers.29."
      },
      "single_layers_2_": {
        "name": "single_layers.2."
      },
      "single_layers_30_": {
        "name": "single_layers.30."
      },
      "single_layers_31_": {
        "name": "single_layers.31."
      },
      "single_layers_3_": {
        "name": "single_layers.3."
      },
      "single_layers_4_": {
        "name": "single_layers.4."
      },
      "single_layers_5_": {
        "name": "single_layers.5."
      },
      "single_layers_6_": {
        "name": "single_layers.6."
      },
      "single_layers_7_": {
        "name": "single_layers.7."
      },
      "single_layers_8_": {
        "name": "single_layers.8."
      },
      "single_layers_9_": {
        "name": "single_layers.9."
      },
      "t_embedder_": {
        "name": "t_embedder."
      }
    }
  },
  "ModelMergeBlocks": {
    "display_name": "Слияние блоков моделей",
    "inputs": {
      "input": {
        "name": "вход"
      },
      "middle": {
        "name": "середина"
      },
      "model1": {
        "name": "модель1"
      },
      "model2": {
        "name": "модель2"
      },
      "out": {
        "name": "выход"
      }
    }
  },
  "ModelMergeCosmos14B": {
    "display_name": "ModelMergeCosmos14B",
    "inputs": {
      "affline_norm_": {
        "name": "affline_norm."
      },
      "blocks_block0_": {
        "name": "blocks.block0."
      },
      "blocks_block10_": {
        "name": "blocks.block10."
      },
      "blocks_block11_": {
        "name": "blocks.block11."
      },
      "blocks_block12_": {
        "name": "blocks.block12."
      },
      "blocks_block13_": {
        "name": "blocks.block13."
      },
      "blocks_block14_": {
        "name": "blocks.block14."
      },
      "blocks_block15_": {
        "name": "blocks.block15."
      },
      "blocks_block16_": {
        "name": "blocks.block16."
      },
      "blocks_block17_": {
        "name": "blocks.block17."
      },
      "blocks_block18_": {
        "name": "blocks.block18."
      },
      "blocks_block19_": {
        "name": "blocks.block19."
      },
      "blocks_block1_": {
        "name": "blocks.block1."
      },
      "blocks_block20_": {
        "name": "blocks.block20."
      },
      "blocks_block21_": {
        "name": "blocks.block21."
      },
      "blocks_block22_": {
        "name": "blocks.block22."
      },
      "blocks_block23_": {
        "name": "blocks.block23."
      },
      "blocks_block24_": {
        "name": "blocks.block24."
      },
      "blocks_block25_": {
        "name": "blocks.block25."
      },
      "blocks_block26_": {
        "name": "blocks.block26."
      },
      "blocks_block27_": {
        "name": "blocks.block27."
      },
      "blocks_block28_": {
        "name": "blocks.block28."
      },
      "blocks_block29_": {
        "name": "blocks.block29."
      },
      "blocks_block2_": {
        "name": "blocks.block2."
      },
      "blocks_block30_": {
        "name": "blocks.block30."
      },
      "blocks_block31_": {
        "name": "blocks.block31."
      },
      "blocks_block32_": {
        "name": "blocks.block32."
      },
      "blocks_block33_": {
        "name": "blocks.block33."
      },
      "blocks_block34_": {
        "name": "blocks.block34."
      },
      "blocks_block35_": {
        "name": "blocks.block35."
      },
      "blocks_block3_": {
        "name": "blocks.block3."
      },
      "blocks_block4_": {
        "name": "blocks.block4."
      },
      "blocks_block5_": {
        "name": "blocks.block5."
      },
      "blocks_block6_": {
        "name": "blocks.block6."
      },
      "blocks_block7_": {
        "name": "blocks.block7."
      },
      "blocks_block8_": {
        "name": "blocks.block8."
      },
      "blocks_block9_": {
        "name": "blocks.block9."
      },
      "extra_pos_embedder_": {
        "name": "extra_pos_embedder."
      },
      "final_layer_": {
        "name": "final_layer."
      },
      "model1": {
        "name": "модель1"
      },
      "model2": {
        "name": "модель2"
      },
      "pos_embedder_": {
        "name": "pos_embedder."
      },
      "t_embedder_": {
        "name": "t_embedder."
      },
      "x_embedder_": {
        "name": "x_embedder."
      }
    }
  },
  "ModelMergeCosmos7B": {
    "display_name": "ModelMergeCosmos7B",
    "inputs": {
      "affline_norm_": {
        "name": "affline_norm."
      },
      "blocks_block0_": {
        "name": "blocks.block0."
      },
      "blocks_block10_": {
        "name": "blocks.block10."
      },
      "blocks_block11_": {
        "name": "blocks.block11."
      },
      "blocks_block12_": {
        "name": "blocks.block12."
      },
      "blocks_block13_": {
        "name": "blocks.block13."
      },
      "blocks_block14_": {
        "name": "blocks.block14."
      },
      "blocks_block15_": {
        "name": "blocks.block15."
      },
      "blocks_block16_": {
        "name": "blocks.block16."
      },
      "blocks_block17_": {
        "name": "blocks.block17."
      },
      "blocks_block18_": {
        "name": "blocks.block18."
      },
      "blocks_block19_": {
        "name": "blocks.block19."
      },
      "blocks_block1_": {
        "name": "blocks.block1."
      },
      "blocks_block20_": {
        "name": "blocks.block20."
      },
      "blocks_block21_": {
        "name": "blocks.block21."
      },
      "blocks_block22_": {
        "name": "blocks.block22."
      },
      "blocks_block23_": {
        "name": "blocks.block23."
      },
      "blocks_block24_": {
        "name": "blocks.block24."
      },
      "blocks_block25_": {
        "name": "blocks.block25."
      },
      "blocks_block26_": {
        "name": "blocks.block26."
      },
      "blocks_block27_": {
        "name": "blocks.block27."
      },
      "blocks_block2_": {
        "name": "blocks.block2."
      },
      "blocks_block3_": {
        "name": "blocks.block3."
      },
      "blocks_block4_": {
        "name": "blocks.block4."
      },
      "blocks_block5_": {
        "name": "blocks.block5."
      },
      "blocks_block6_": {
        "name": "blocks.block6."
      },
      "blocks_block7_": {
        "name": "blocks.block7."
      },
      "blocks_block8_": {
        "name": "blocks.block8."
      },
      "blocks_block9_": {
        "name": "blocks.block9."
      },
      "extra_pos_embedder_": {
        "name": "extra_pos_embedder."
      },
      "final_layer_": {
        "name": "final_layer."
      },
      "model1": {
        "name": "model1"
      },
      "model2": {
        "name": "model2"
      },
      "pos_embedder_": {
        "name": "pos_embedder."
      },
      "t_embedder_": {
        "name": "t_embedder."
      },
      "x_embedder_": {
        "name": "x_embedder."
      }
    }
  },
  "ModelMergeFlux1": {
    "display_name": "Слияние моделей Flux1",
    "inputs": {
      "double_blocks_0_": {
        "name": "double_blocks.0."
      },
      "double_blocks_10_": {
        "name": "double_blocks.10."
      },
      "double_blocks_11_": {
        "name": "double_blocks.11."
      },
      "double_blocks_12_": {
        "name": "double_blocks.12."
      },
      "double_blocks_13_": {
        "name": "double_blocks.13."
      },
      "double_blocks_14_": {
        "name": "double_blocks.14."
      },
      "double_blocks_15_": {
        "name": "double_blocks.15."
      },
      "double_blocks_16_": {
        "name": "double_blocks.16."
      },
      "double_blocks_17_": {
        "name": "double_blocks.17."
      },
      "double_blocks_18_": {
        "name": "double_blocks.18."
      },
      "double_blocks_1_": {
        "name": "double_blocks.1."
      },
      "double_blocks_2_": {
        "name": "double_blocks.2."
      },
      "double_blocks_3_": {
        "name": "double_blocks.3."
      },
      "double_blocks_4_": {
        "name": "double_blocks.4."
      },
      "double_blocks_5_": {
        "name": "double_blocks.5."
      },
      "double_blocks_6_": {
        "name": "double_blocks.6."
      },
      "double_blocks_7_": {
        "name": "double_blocks.7."
      },
      "double_blocks_8_": {
        "name": "double_blocks.8."
      },
      "double_blocks_9_": {
        "name": "double_blocks.9."
      },
      "final_layer_": {
        "name": "final_layer."
      },
      "guidance_in": {
        "name": "guidance_in"
      },
      "img_in_": {
        "name": "img_in."
      },
      "model1": {
        "name": "модель1"
      },
      "model2": {
        "name": "модель2"
      },
      "single_blocks_0_": {
        "name": "single_blocks.0."
      },
      "single_blocks_10_": {
        "name": "single_blocks.10."
      },
      "single_blocks_11_": {
        "name": "single_blocks.11."
      },
      "single_blocks_12_": {
        "name": "single_blocks.12."
      },
      "single_blocks_13_": {
        "name": "single_blocks.13."
      },
      "single_blocks_14_": {
        "name": "single_blocks.14."
      },
      "single_blocks_15_": {
        "name": "single_blocks.15."
      },
      "single_blocks_16_": {
        "name": "single_blocks.16."
      },
      "single_blocks_17_": {
        "name": "single_blocks.17."
      },
      "single_blocks_18_": {
        "name": "single_blocks.18."
      },
      "single_blocks_19_": {
        "name": "single_blocks.19."
      },
      "single_blocks_1_": {
        "name": "single_blocks.1."
      },
      "single_blocks_20_": {
        "name": "single_blocks.20."
      },
      "single_blocks_21_": {
        "name": "single_blocks.21."
      },
      "single_blocks_22_": {
        "name": "single_blocks.22."
      },
      "single_blocks_23_": {
        "name": "single_blocks.23."
      },
      "single_blocks_24_": {
        "name": "single_blocks.24."
      },
      "single_blocks_25_": {
        "name": "single_blocks.25."
      },
      "single_blocks_26_": {
        "name": "single_blocks.26."
      },
      "single_blocks_27_": {
        "name": "single_blocks.27."
      },
      "single_blocks_28_": {
        "name": "single_blocks.28."
      },
      "single_blocks_29_": {
        "name": "single_blocks.29."
      },
      "single_blocks_2_": {
        "name": "single_blocks.2."
      },
      "single_blocks_30_": {
        "name": "single_blocks.30."
      },
      "single_blocks_31_": {
        "name": "single_blocks.31."
      },
      "single_blocks_32_": {
        "name": "single_blocks.32."
      },
      "single_blocks_33_": {
        "name": "single_blocks.33."
      },
      "single_blocks_34_": {
        "name": "single_blocks.34."
      },
      "single_blocks_35_": {
        "name": "single_blocks.35."
      },
      "single_blocks_36_": {
        "name": "single_blocks.36."
      },
      "single_blocks_37_": {
        "name": "single_blocks.37."
      },
      "single_blocks_3_": {
        "name": "single_blocks.3."
      },
      "single_blocks_4_": {
        "name": "single_blocks.4."
      },
      "single_blocks_5_": {
        "name": "single_blocks.5."
      },
      "single_blocks_6_": {
        "name": "single_blocks.6."
      },
      "single_blocks_7_": {
        "name": "single_blocks.7."
      },
      "single_blocks_8_": {
        "name": "single_blocks.8."
      },
      "single_blocks_9_": {
        "name": "single_blocks.9."
      },
      "time_in_": {
        "name": "time_in."
      },
      "txt_in_": {
        "name": "txt_in."
      },
      "vector_in_": {
        "name": "vector_in."
      }
    }
  },
  "ModelMergeLTXV": {
    "display_name": "Слияние моделей LTXV",
    "inputs": {
      "adaln_single_": {
        "name": "adaln_single."
      },
      "caption_projection_": {
        "name": "caption_projection."
      },
      "model1": {
        "name": "модель1"
      },
      "model2": {
        "name": "модель2"
      },
      "patchify_proj_": {
        "name": "patchify_proj."
      },
      "proj_out_": {
        "name": "proj_out."
      },
      "scale_shift_table": {
        "name": "scale_shift_table"
      },
      "transformer_blocks_0_": {
        "name": "transformer_blocks.0."
      },
      "transformer_blocks_10_": {
        "name": "transformer_blocks.10."
      },
      "transformer_blocks_11_": {
        "name": "transformer_blocks.11."
      },
      "transformer_blocks_12_": {
        "name": "transformer_blocks.12."
      },
      "transformer_blocks_13_": {
        "name": "transformer_blocks.13."
      },
      "transformer_blocks_14_": {
        "name": "transformer_blocks.14."
      },
      "transformer_blocks_15_": {
        "name": "transformer_blocks.15."
      },
      "transformer_blocks_16_": {
        "name": "transformer_blocks.16."
      },
      "transformer_blocks_17_": {
        "name": "transformer_blocks.17."
      },
      "transformer_blocks_18_": {
        "name": "transformer_blocks.18."
      },
      "transformer_blocks_19_": {
        "name": "transformer_blocks.19."
      },
      "transformer_blocks_1_": {
        "name": "transformer_blocks.1."
      },
      "transformer_blocks_20_": {
        "name": "transformer_blocks.20."
      },
      "transformer_blocks_21_": {
        "name": "transformer_blocks.21."
      },
      "transformer_blocks_22_": {
        "name": "transformer_blocks.22."
      },
      "transformer_blocks_23_": {
        "name": "transformer_blocks.23."
      },
      "transformer_blocks_24_": {
        "name": "transformer_blocks.24."
      },
      "transformer_blocks_25_": {
        "name": "transformer_blocks.25."
      },
      "transformer_blocks_26_": {
        "name": "transformer_blocks.26."
      },
      "transformer_blocks_27_": {
        "name": "transformer_blocks.27."
      },
      "transformer_blocks_2_": {
        "name": "transformer_blocks.2."
      },
      "transformer_blocks_3_": {
        "name": "transformer_blocks.3."
      },
      "transformer_blocks_4_": {
        "name": "transformer_blocks.4."
      },
      "transformer_blocks_5_": {
        "name": "transformer_blocks.5."
      },
      "transformer_blocks_6_": {
        "name": "transformer_blocks.6."
      },
      "transformer_blocks_7_": {
        "name": "transformer_blocks.7."
      },
      "transformer_blocks_8_": {
        "name": "transformer_blocks.8."
      },
      "transformer_blocks_9_": {
        "name": "transformer_blocks.9."
      }
    }
  },
  "ModelMergeMochiPreview": {
    "display_name": "Предварительный просмотр слияния моделей Mochi",
    "inputs": {
      "blocks_0_": {
        "name": "blocks.0."
      },
      "blocks_10_": {
        "name": "blocks.10."
      },
      "blocks_11_": {
        "name": "blocks.11."
      },
      "blocks_12_": {
        "name": "blocks.12."
      },
      "blocks_13_": {
        "name": "blocks.13."
      },
      "blocks_14_": {
        "name": "blocks.14."
      },
      "blocks_15_": {
        "name": "blocks.15."
      },
      "blocks_16_": {
        "name": "blocks.16."
      },
      "blocks_17_": {
        "name": "blocks.17."
      },
      "blocks_18_": {
        "name": "blocks.18."
      },
      "blocks_19_": {
        "name": "blocks.19."
      },
      "blocks_1_": {
        "name": "blocks.1."
      },
      "blocks_20_": {
        "name": "blocks.20."
      },
      "blocks_21_": {
        "name": "blocks.21."
      },
      "blocks_22_": {
        "name": "blocks.22."
      },
      "blocks_23_": {
        "name": "blocks.23."
      },
      "blocks_24_": {
        "name": "blocks.24."
      },
      "blocks_25_": {
        "name": "blocks.25."
      },
      "blocks_26_": {
        "name": "blocks.26."
      },
      "blocks_27_": {
        "name": "blocks.27."
      },
      "blocks_28_": {
        "name": "blocks.28."
      },
      "blocks_29_": {
        "name": "blocks.29."
      },
      "blocks_2_": {
        "name": "blocks.2."
      },
      "blocks_30_": {
        "name": "blocks.30."
      },
      "blocks_31_": {
        "name": "blocks.31."
      },
      "blocks_32_": {
        "name": "blocks.32."
      },
      "blocks_33_": {
        "name": "blocks.33."
      },
      "blocks_34_": {
        "name": "blocks.34."
      },
      "blocks_35_": {
        "name": "blocks.35."
      },
      "blocks_36_": {
        "name": "blocks.36."
      },
      "blocks_37_": {
        "name": "blocks.37."
      },
      "blocks_38_": {
        "name": "blocks.38."
      },
      "blocks_39_": {
        "name": "blocks.39."
      },
      "blocks_3_": {
        "name": "blocks.3."
      },
      "blocks_40_": {
        "name": "blocks.40."
      },
      "blocks_41_": {
        "name": "blocks.41."
      },
      "blocks_42_": {
        "name": "blocks.42."
      },
      "blocks_43_": {
        "name": "blocks.43."
      },
      "blocks_44_": {
        "name": "blocks.44."
      },
      "blocks_45_": {
        "name": "blocks.45."
      },
      "blocks_46_": {
        "name": "blocks.46."
      },
      "blocks_47_": {
        "name": "blocks.47."
      },
      "blocks_4_": {
        "name": "blocks.4."
      },
      "blocks_5_": {
        "name": "blocks.5."
      },
      "blocks_6_": {
        "name": "blocks.6."
      },
      "blocks_7_": {
        "name": "blocks.7."
      },
      "blocks_8_": {
        "name": "blocks.8."
      },
      "blocks_9_": {
        "name": "blocks.9."
      },
      "final_layer_": {
        "name": "final_layer."
      },
      "model1": {
        "name": "модель1"
      },
      "model2": {
        "name": "модель2"
      },
      "pos_frequencies_": {
        "name": "pos_frequencies."
      },
      "t5_y_embedder_": {
        "name": "t5_y_embedder."
      },
      "t5_yproj_": {
        "name": "t5_yproj."
      },
      "t_embedder_": {
        "name": "t_embedder."
      }
    }
  },
  "ModelMergeSD1": {
    "display_name": "Слияние моделей SD1",
    "inputs": {
      "input_blocks_0_": {
        "name": "input_blocks.0."
      },
      "input_blocks_10_": {
        "name": "input_blocks.10."
      },
      "input_blocks_11_": {
        "name": "input_blocks.11."
      },
      "input_blocks_1_": {
        "name": "input_blocks.1."
      },
      "input_blocks_2_": {
        "name": "input_blocks.2."
      },
      "input_blocks_3_": {
        "name": "input_blocks.3."
      },
      "input_blocks_4_": {
        "name": "input_blocks.4."
      },
      "input_blocks_5_": {
        "name": "input_blocks.5."
      },
      "input_blocks_6_": {
        "name": "input_blocks.6."
      },
      "input_blocks_7_": {
        "name": "input_blocks.7."
      },
      "input_blocks_8_": {
        "name": "input_blocks.8."
      },
      "input_blocks_9_": {
        "name": "input_blocks.9."
      },
      "label_emb_": {
        "name": "label_emb."
      },
      "middle_block_0_": {
        "name": "middle_block.0."
      },
      "middle_block_1_": {
        "name": "middle_block.1."
      },
      "middle_block_2_": {
        "name": "middle_block.2."
      },
      "model1": {
        "name": "модель1"
      },
      "model2": {
        "name": "модель2"
      },
      "out_": {
        "name": "out."
      },
      "output_blocks_0_": {
        "name": "output_blocks.0."
      },
      "output_blocks_10_": {
        "name": "output_blocks.10."
      },
      "output_blocks_11_": {
        "name": "output_blocks.11."
      },
      "output_blocks_1_": {
        "name": "output_blocks.1."
      },
      "output_blocks_2_": {
        "name": "output_blocks.2."
      },
      "output_blocks_3_": {
        "name": "output_blocks.3."
      },
      "output_blocks_4_": {
        "name": "output_blocks.4."
      },
      "output_blocks_5_": {
        "name": "output_blocks.5."
      },
      "output_blocks_6_": {
        "name": "output_blocks.6."
      },
      "output_blocks_7_": {
        "name": "output_blocks.7."
      },
      "output_blocks_8_": {
        "name": "output_blocks.8."
      },
      "output_blocks_9_": {
        "name": "output_blocks.9."
      },
      "time_embed_": {
        "name": "time_embed."
      }
    }
  },
  "ModelMergeSD2": {
    "display_name": "Слияние моделей SD2",
    "inputs": {
      "input_blocks_0_": {
        "name": "input_blocks.0."
      },
      "input_blocks_10_": {
        "name": "input_blocks.10."
      },
      "input_blocks_11_": {
        "name": "input_blocks.11."
      },
      "input_blocks_1_": {
        "name": "input_blocks.1."
      },
      "input_blocks_2_": {
        "name": "input_blocks.2."
      },
      "input_blocks_3_": {
        "name": "input_blocks.3."
      },
      "input_blocks_4_": {
        "name": "input_blocks.4."
      },
      "input_blocks_5_": {
        "name": "input_blocks.5."
      },
      "input_blocks_6_": {
        "name": "input_blocks.6."
      },
      "input_blocks_7_": {
        "name": "input_blocks.7."
      },
      "input_blocks_8_": {
        "name": "input_blocks.8."
      },
      "input_blocks_9_": {
        "name": "input_blocks.9."
      },
      "label_emb_": {
        "name": "label_emb."
      },
      "middle_block_0_": {
        "name": "middle_block.0."
      },
      "middle_block_1_": {
        "name": "middle_block.1."
      },
      "middle_block_2_": {
        "name": "middle_block.2."
      },
      "model1": {
        "name": "модель1"
      },
      "model2": {
        "name": "модель2"
      },
      "out_": {
        "name": "out."
      },
      "output_blocks_0_": {
        "name": "output_blocks.0."
      },
      "output_blocks_10_": {
        "name": "output_blocks.10."
      },
      "output_blocks_11_": {
        "name": "output_blocks.11."
      },
      "output_blocks_1_": {
        "name": "output_blocks.1."
      },
      "output_blocks_2_": {
        "name": "output_blocks.2."
      },
      "output_blocks_3_": {
        "name": "output_blocks.3."
      },
      "output_blocks_4_": {
        "name": "output_blocks.4."
      },
      "output_blocks_5_": {
        "name": "output_blocks.5."
      },
      "output_blocks_6_": {
        "name": "output_blocks.6."
      },
      "output_blocks_7_": {
        "name": "output_blocks.7."
      },
      "output_blocks_8_": {
        "name": "output_blocks.8."
      },
      "output_blocks_9_": {
        "name": "output_blocks.9."
      },
      "time_embed_": {
        "name": "time_embed."
      }
    }
  },
  "ModelMergeSD35_Large": {
    "display_name": "Слияние моделей SD35_Large",
    "inputs": {
      "context_embedder_": {
        "name": "context_embedder."
      },
      "final_layer_": {
        "name": "final_layer."
      },
      "joint_blocks_0_": {
        "name": "joint_blocks.0."
      },
      "joint_blocks_10_": {
        "name": "joint_blocks.10."
      },
      "joint_blocks_11_": {
        "name": "joint_blocks.11."
      },
      "joint_blocks_12_": {
        "name": "joint_blocks.12."
      },
      "joint_blocks_13_": {
        "name": "joint_blocks.13."
      },
      "joint_blocks_14_": {
        "name": "joint_blocks.14."
      },
      "joint_blocks_15_": {
        "name": "joint_blocks.15."
      },
      "joint_blocks_16_": {
        "name": "joint_blocks.16."
      },
      "joint_blocks_17_": {
        "name": "joint_blocks.17."
      },
      "joint_blocks_18_": {
        "name": "joint_blocks.18."
      },
      "joint_blocks_19_": {
        "name": "joint_blocks.19."
      },
      "joint_blocks_1_": {
        "name": "joint_blocks.1."
      },
      "joint_blocks_20_": {
        "name": "joint_blocks.20."
      },
      "joint_blocks_21_": {
        "name": "joint_blocks.21."
      },
      "joint_blocks_22_": {
        "name": "joint_blocks.22."
      },
      "joint_blocks_23_": {
        "name": "joint_blocks.23."
      },
      "joint_blocks_24_": {
        "name": "joint_blocks.24."
      },
      "joint_blocks_25_": {
        "name": "joint_blocks.25."
      },
      "joint_blocks_26_": {
        "name": "joint_blocks.26."
      },
      "joint_blocks_27_": {
        "name": "joint_blocks.27."
      },
      "joint_blocks_28_": {
        "name": "joint_blocks.28."
      },
      "joint_blocks_29_": {
        "name": "joint_blocks.29."
      },
      "joint_blocks_2_": {
        "name": "joint_blocks.2."
      },
      "joint_blocks_30_": {
        "name": "joint_blocks.30."
      },
      "joint_blocks_31_": {
        "name": "joint_blocks.31."
      },
      "joint_blocks_32_": {
        "name": "joint_blocks.32."
      },
      "joint_blocks_33_": {
        "name": "joint_blocks.33."
      },
      "joint_blocks_34_": {
        "name": "joint_blocks.34."
      },
      "joint_blocks_35_": {
        "name": "joint_blocks.35."
      },
      "joint_blocks_36_": {
        "name": "joint_blocks.36."
      },
      "joint_blocks_37_": {
        "name": "joint_blocks.37."
      },
      "joint_blocks_3_": {
        "name": "joint_blocks.3."
      },
      "joint_blocks_4_": {
        "name": "joint_blocks.4."
      },
      "joint_blocks_5_": {
        "name": "joint_blocks.5."
      },
      "joint_blocks_6_": {
        "name": "joint_blocks.6."
      },
      "joint_blocks_7_": {
        "name": "joint_blocks.7."
      },
      "joint_blocks_8_": {
        "name": "joint_blocks.8."
      },
      "joint_blocks_9_": {
        "name": "joint_blocks.9."
      },
      "model1": {
        "name": "модель1"
      },
      "model2": {
        "name": "модель2"
      },
      "pos_embed_": {
        "name": "pos_embed."
      },
      "t_embedder_": {
        "name": "t_embedder."
      },
      "x_embedder_": {
        "name": "x_embedder."
      },
      "y_embedder_": {
        "name": "y_embedder."
      }
    }
  },
  "ModelMergeSD3_2B": {
    "display_name": "Слияние моделей SD3_2B",
    "inputs": {
      "context_embedder_": {
        "name": "context_embedder."
      },
      "final_layer_": {
        "name": "final_layer."
      },
      "joint_blocks_0_": {
        "name": "joint_blocks.0."
      },
      "joint_blocks_10_": {
        "name": "joint_blocks.10."
      },
      "joint_blocks_11_": {
        "name": "joint_blocks.11."
      },
      "joint_blocks_12_": {
        "name": "joint_blocks.12."
      },
      "joint_blocks_13_": {
        "name": "joint_blocks.13."
      },
      "joint_blocks_14_": {
        "name": "joint_blocks.14."
      },
      "joint_blocks_15_": {
        "name": "joint_blocks.15."
      },
      "joint_blocks_16_": {
        "name": "joint_blocks.16."
      },
      "joint_blocks_17_": {
        "name": "joint_blocks.17."
      },
      "joint_blocks_18_": {
        "name": "joint_blocks.18."
      },
      "joint_blocks_19_": {
        "name": "joint_blocks.19."
      },
      "joint_blocks_1_": {
        "name": "joint_blocks.1."
      },
      "joint_blocks_20_": {
        "name": "joint_blocks.20."
      },
      "joint_blocks_21_": {
        "name": "joint_blocks.21."
      },
      "joint_blocks_22_": {
        "name": "joint_blocks.22."
      },
      "joint_blocks_23_": {
        "name": "joint_blocks.23."
      },
      "joint_blocks_2_": {
        "name": "joint_blocks.2."
      },
      "joint_blocks_3_": {
        "name": "joint_blocks.3."
      },
      "joint_blocks_4_": {
        "name": "joint_blocks.4."
      },
      "joint_blocks_5_": {
        "name": "joint_blocks.5."
      },
      "joint_blocks_6_": {
        "name": "joint_blocks.6."
      },
      "joint_blocks_7_": {
        "name": "joint_blocks.7."
      },
      "joint_blocks_8_": {
        "name": "joint_blocks.8."
      },
      "joint_blocks_9_": {
        "name": "joint_blocks.9."
      },
      "model1": {
        "name": "модель1"
      },
      "model2": {
        "name": "модель2"
      },
      "pos_embed_": {
        "name": "pos_embed."
      },
      "t_embedder_": {
        "name": "t_embedder."
      },
      "x_embedder_": {
        "name": "x_embedder."
      },
      "y_embedder_": {
        "name": "y_embedder."
      }
    }
  },
  "ModelMergeSDXL": {
    "display_name": "Слияние моделей SDXL",
    "inputs": {
      "input_blocks_0": {
        "name": "input_blocks.0"
      },
      "input_blocks_1": {
        "name": "input_blocks.1"
      },
      "input_blocks_2": {
        "name": "input_blocks.2"
      },
      "input_blocks_3": {
        "name": "input_blocks.3"
      },
      "input_blocks_4": {
        "name": "input_blocks.4"
      },
      "input_blocks_5": {
        "name": "input_blocks.5"
      },
      "input_blocks_6": {
        "name": "input_blocks.6"
      },
      "input_blocks_7": {
        "name": "input_blocks.7"
      },
      "input_blocks_8": {
        "name": "input_blocks.8"
      },
      "label_emb_": {
        "name": "label_emb."
      },
      "middle_block_0": {
        "name": "middle_block.0"
      },
      "middle_block_1": {
        "name": "middle_block.1"
      },
      "middle_block_2": {
        "name": "middle_block.2"
      },
      "model1": {
        "name": "модель1"
      },
      "model2": {
        "name": "модель2"
      },
      "out_": {
        "name": "out."
      },
      "output_blocks_0": {
        "name": "output_blocks.0"
      },
      "output_blocks_1": {
        "name": "output_blocks.1"
      },
      "output_blocks_2": {
        "name": "output_blocks.2"
      },
      "output_blocks_3": {
        "name": "output_blocks.3"
      },
      "output_blocks_4": {
        "name": "output_blocks.4"
      },
      "output_blocks_5": {
        "name": "output_blocks.5"
      },
      "output_blocks_6": {
        "name": "output_blocks.6"
      },
      "output_blocks_7": {
        "name": "output_blocks.7"
      },
      "output_blocks_8": {
        "name": "output_blocks.8"
      },
      "time_embed_": {
        "name": "time_embed."
      }
    }
  },
  "ModelMergeSimple": {
    "display_name": "Простое слияние моделей",
    "inputs": {
      "model1": {
        "name": "модель1"
      },
      "model2": {
        "name": "модель2"
      },
      "ratio": {
        "name": "соотношение"
      }
    }
  },
  "ModelMergeSubtract": {
    "display_name": "Вычитание моделей",
    "inputs": {
      "model1": {
        "name": "модель1"
      },
      "model2": {
        "name": "модель2"
      },
      "multiplier": {
        "name": "множитель"
      }
    }
  },
  "ModelMergeWAN2_1": {
    "description": "Модель 1.3B имеет 30 блоков, модель 14B — 40 блоков. Модель для преобразования изображения в видео имеет дополнительный img_emb.",
    "display_name": "ModelMergeWAN2_1",
    "inputs": {
      "blocks_0_": {
        "name": "blocks.0."
      },
      "blocks_10_": {
        "name": "blocks.10."
      },
      "blocks_11_": {
        "name": "blocks.11."
      },
      "blocks_12_": {
        "name": "blocks.12."
      },
      "blocks_13_": {
        "name": "blocks.13."
      },
      "blocks_14_": {
        "name": "blocks.14."
      },
      "blocks_15_": {
        "name": "blocks.15."
      },
      "blocks_16_": {
        "name": "blocks.16."
      },
      "blocks_17_": {
        "name": "blocks.17."
      },
      "blocks_18_": {
        "name": "blocks.18."
      },
      "blocks_19_": {
        "name": "blocks.19."
      },
      "blocks_1_": {
        "name": "blocks.1."
      },
      "blocks_20_": {
        "name": "blocks.20."
      },
      "blocks_21_": {
        "name": "blocks.21."
      },
      "blocks_22_": {
        "name": "blocks.22."
      },
      "blocks_23_": {
        "name": "blocks.23."
      },
      "blocks_24_": {
        "name": "blocks.24."
      },
      "blocks_25_": {
        "name": "blocks.25."
      },
      "blocks_26_": {
        "name": "blocks.26."
      },
      "blocks_27_": {
        "name": "blocks.27."
      },
      "blocks_28_": {
        "name": "blocks.28."
      },
      "blocks_29_": {
        "name": "blocks.29."
      },
      "blocks_2_": {
        "name": "blocks.2."
      },
      "blocks_30_": {
        "name": "blocks.30."
      },
      "blocks_31_": {
        "name": "blocks.31."
      },
      "blocks_32_": {
        "name": "blocks.32."
      },
      "blocks_33_": {
        "name": "blocks.33."
      },
      "blocks_34_": {
        "name": "blocks.34."
      },
      "blocks_35_": {
        "name": "blocks.35."
      },
      "blocks_36_": {
        "name": "blocks.36."
      },
      "blocks_37_": {
        "name": "blocks.37."
      },
      "blocks_38_": {
        "name": "blocks.38."
      },
      "blocks_39_": {
        "name": "blocks.39."
      },
      "blocks_3_": {
        "name": "blocks.3."
      },
      "blocks_4_": {
        "name": "blocks.4."
      },
      "blocks_5_": {
        "name": "blocks.5."
      },
      "blocks_6_": {
        "name": "blocks.6."
      },
      "blocks_7_": {
        "name": "blocks.7."
      },
      "blocks_8_": {
        "name": "blocks.8."
      },
      "blocks_9_": {
        "name": "blocks.9."
      },
      "head_": {
        "name": "head."
      },
      "img_emb_": {
        "name": "img_emb."
      },
      "model1": {
        "name": "model1"
      },
      "model2": {
        "name": "model2"
      },
      "patch_embedding_": {
        "name": "patch_embedding."
      },
      "text_embedding_": {
        "name": "text_embedding."
      },
      "time_embedding_": {
        "name": "time_embedding."
      },
      "time_projection_": {
        "name": "time_projection."
      }
    }
  },
  "ModelSamplingAuraFlow": {
    "display_name": "Выборка модели AuraFlow",
    "inputs": {
      "model": {
        "name": "модель"
      },
      "shift": {
        "name": "сдвиг"
      }
    }
  },
  "ModelSamplingContinuousEDM": {
    "display_name": "Выборка модели Continuous EDM",
    "inputs": {
      "model": {
        "name": "модель"
      },
      "sampling": {
        "name": "выборка"
      },
      "sigma_max": {
        "name": "sigma_max"
      },
      "sigma_min": {
        "name": "sigma_min"
      }
    }
  },
  "ModelSamplingContinuousV": {
    "display_name": "Выборка модели Continuous V",
    "inputs": {
      "model": {
        "name": "модель"
      },
      "sampling": {
        "name": "выборка"
      },
      "sigma_max": {
        "name": "sigma_max"
      },
      "sigma_min": {
        "name": "sigma_min"
      }
    }
  },
  "ModelSamplingDiscrete": {
    "display_name": "Дискретная выборка модели",
    "inputs": {
      "model": {
        "name": "модель"
      },
      "sampling": {
        "name": "выборка"
      },
      "zsnr": {
        "name": "zsnr"
      }
    }
  },
  "ModelSamplingFlux": {
    "display_name": "Выборка модели Flux",
    "inputs": {
      "base_shift": {
        "name": "базовый_сдвиг"
      },
      "height": {
        "name": "высота"
      },
      "max_shift": {
        "name": "макс_сдвиг"
      },
      "model": {
        "name": "модель"
      },
      "width": {
        "name": "ширина"
      }
    }
  },
  "ModelSamplingLTXV": {
    "display_name": "Выборка модели LTXV",
    "inputs": {
      "base_shift": {
        "name": "базовый_сдвиг"
      },
      "latent": {
        "name": "скрытый"
      },
      "max_shift": {
        "name": "макс_сдвиг"
      },
      "model": {
        "name": "модель"
      }
    }
  },
  "ModelSamplingSD3": {
    "display_name": "Выборка модели SD3",
    "inputs": {
      "model": {
        "name": "модель"
      },
      "shift": {
        "name": "сдвиг"
      }
    }
  },
  "ModelSamplingStableCascade": {
    "display_name": "Выборка модели Stable Cascade",
    "inputs": {
      "model": {
        "name": "модель"
      },
      "shift": {
        "name": "сдвиг"
      }
    }
  },
  "ModelSave": {
    "display_name": "Сохранить модель",
    "inputs": {
      "filename_prefix": {
        "name": "префикс_названия_файла"
      },
      "model": {
        "name": "модель"
      }
    }
  },
  "Morphology": {
    "display_name": "Морфология изображения",
    "inputs": {
      "image": {
        "name": "изображение"
      },
      "kernel_size": {
        "name": "размер_ядра"
      },
      "operation": {
        "name": "операция"
      }
    }
  },
  "OpenAIDalle2": {
    "description": "Генерирует изображения синхронно через конечную точку DALL·E 2 от OpenAI.",
    "display_name": "OpenAI DALL·E 2",
    "inputs": {
      "control_after_generate": {
        "name": "control after generate"
      },
      "image": {
        "name": "image",
        "tooltip": "Необязательное референсное изображение для редактирования."
      },
      "mask": {
        "name": "mask",
        "tooltip": "Необязательная маска для дорисовки (белые области будут заменены)"
      },
      "n": {
        "name": "n",
        "tooltip": "Сколько изображений сгенерировать"
      },
      "prompt": {
        "name": "prompt",
        "tooltip": "Текстовый запрос для DALL·E"
      },
      "seed": {
        "name": "seed",
        "tooltip": "ещё не реализовано на сервере"
      },
      "size": {
        "name": "size",
        "tooltip": "Размер изображения"
      }
    }
  },
  "OpenAIDalle3": {
    "description": "Генерирует изображения синхронно через конечную точку DALL·E 3 от OpenAI.",
    "display_name": "OpenAI DALL·E 3",
    "inputs": {
      "control_after_generate": {
        "name": "дополнительное управление"
      },
      "prompt": {
        "name": "prompt",
        "tooltip": "Текстовый запрос для DALL·E"
      },
      "quality": {
        "name": "качество",
        "tooltip": "Качество изображения"
      },
      "seed": {
        "name": "seed",
        "tooltip": "ещё не реализовано на сервере"
      },
      "size": {
        "name": "размер",
        "tooltip": "Размер изображения"
      },
      "style": {
        "name": "стиль",
        "tooltip": "Яркий стиль заставляет модель создавать более гиперреалистичные и драматичные изображения. Натуральный стиль приводит к более естественным, менее гиперреалистичным изображениям."
      }
    }
  },
  "OpenAIGPTImage1": {
    "description": "Генерирует изображения синхронно через конечную точку OpenAI GPT Image 1.",
    "display_name": "OpenAI GPT Image 1",
    "inputs": {
      "background": {
        "name": "background",
        "tooltip": "Возвращать изображение с фоном или без него"
      },
      "control_after_generate": {
        "name": "control after generate"
      },
      "image": {
        "name": "image",
        "tooltip": "Необязательное референсное изображение для редактирования."
      },
      "mask": {
        "name": "mask",
        "tooltip": "Необязательная маска для дорисовки (белые области будут заменены)"
      },
      "n": {
        "name": "n",
        "tooltip": "Сколько изображений сгенерировать"
      },
      "prompt": {
        "name": "prompt",
        "tooltip": "Текстовый запрос для GPT Image 1"
      },
      "quality": {
        "name": "quality",
        "tooltip": "Качество изображения, влияет на стоимость и время генерации."
      },
      "seed": {
        "name": "seed",
        "tooltip": "ещё не реализовано на сервере"
      },
      "size": {
        "name": "size",
        "tooltip": "Размер изображения"
      }
    }
  },
  "OptimalStepsScheduler": {
    "display_name": "OptimalStepsScheduler",
    "inputs": {
      "denoise": {
        "name": "шумоподавление"
      },
      "model_type": {
        "name": "model_type"
      },
      "steps": {
        "name": "шаги"
      }
    }
  },
  "PairConditioningCombine": {
    "display_name": "Объединение пар кондиционирования",
    "inputs": {
      "negative_A": {
        "name": "отрицательный_A"
      },
      "negative_B": {
        "name": "отрицательный_B"
      },
      "positive_A": {
        "name": "положительный_A"
      },
      "positive_B": {
        "name": "положительный_B"
      }
    },
    "outputs": {
      "0": {
        "name": "положительный"
      },
      "1": {
        "name": "отрицательный"
      }
    }
  },
  "PairConditioningSetDefaultCombine": {
    "display_name": "Установить значение по умолчанию для объединения пар кондиционирования",
    "inputs": {
      "hooks": {
        "name": "хуки"
      },
      "negative": {
        "name": "отрицательный"
      },
      "negative_DEFAULT": {
        "name": "отрицательный_ПО_УМОЛЧАНИЮ"
      },
      "positive": {
        "name": "положительный"
      },
      "positive_DEFAULT": {
        "name": "положительный_ПО_УМОЛЧАНИЮ"
      }
    },
    "outputs": {
      "0": {
        "name": "положительный"
      },
      "1": {
        "name": "отрицательный"
      }
    }
  },
  "PairConditioningSetProperties": {
    "display_name": "Установить свойства пар кондиционирования",
    "inputs": {
      "hooks": {
        "name": "хуки"
      },
      "mask": {
        "name": "маска"
      },
      "negative_NEW": {
        "name": "отрицательный_НОВЫЙ"
      },
      "positive_NEW": {
        "name": "положительный_НОВЫЙ"
      },
      "set_cond_area": {
        "name": "установить_область_условия"
      },
      "strength": {
        "name": "сила"
      },
      "timesteps": {
        "name": "временные_шаги"
      }
    },
    "outputs": {
      "0": {
        "name": "положительный"
      },
      "1": {
        "name": "отрицательный"
      }
    }
  },
  "PairConditioningSetPropertiesAndCombine": {
    "display_name": "Установить свойства пар кондиционирования и объединить",
    "inputs": {
      "hooks": {
        "name": "хуки"
      },
      "mask": {
        "name": "маска"
      },
      "negative": {
        "name": "отрицательный"
      },
      "negative_NEW": {
        "name": "отрицательный_НОВЫЙ"
      },
      "positive": {
        "name": "положительный"
      },
      "positive_NEW": {
        "name": "положительный_НОВЫЙ"
      },
      "set_cond_area": {
        "name": "установить_область_условия"
      },
      "strength": {
        "name": "сила"
      },
      "timesteps": {
        "name": "временные_шаги"
      }
    },
    "outputs": {
      "0": {
        "name": "положительный"
      },
      "1": {
        "name": "отрицательный"
      }
    }
  },
  "PatchModelAddDownscale": {
    "display_name": "Добавить уменьшение модели патча (Kohya Deep Shrink)",
    "inputs": {
      "block_number": {
        "name": "номер_блока"
      },
      "downscale_after_skip": {
        "name": "уменьшение_после_пропуска"
      },
      "downscale_factor": {
        "name": "коэффициент_уменьшения"
      },
      "downscale_method": {
        "name": "метод_уменьшения"
      },
      "end_percent": {
        "name": "конечный_процент"
      },
      "model": {
        "name": "модель"
      },
      "start_percent": {
        "name": "начальный_процент"
      },
      "upscale_method": {
        "name": "метод_увеличения"
      }
    }
  },
  "PerpNeg": {
    "display_name": "PerpNeg (УСТАРЕЛО из-за PerpNegGuider)",
    "inputs": {
      "empty_conditioning": {
        "name": "пустое_условие"
      },
      "model": {
        "name": "модель"
      },
      "neg_scale": {
        "name": "масштаб_отриц"
      }
    }
  },
  "PerpNegGuider": {
    "display_name": "PerpNegGuider",
    "inputs": {
      "cfg": {
        "name": "cfg"
      },
      "empty_conditioning": {
        "name": "пустое_условие"
      },
      "model": {
        "name": "модель"
      },
      "neg_scale": {
        "name": "масштаб_отриц"
      },
      "negative": {
        "name": "отрицательный"
      },
      "positive": {
        "name": "положительный"
      }
    }
  },
  "PerturbedAttentionGuidance": {
    "display_name": "Направление с учётом возмущений",
    "inputs": {
      "model": {
        "name": "модель"
      },
      "scale": {
        "name": "масштаб"
      }
    }
  },
  "PhotoMakerEncode": {
    "display_name": "Кодирование PhotoMaker",
    "inputs": {
      "clip": {
        "name": "clip"
      },
      "image": {
        "name": "изображение"
      },
      "photomaker": {
        "name": "photomaker"
      },
      "text": {
        "name": "текст"
      }
    }
  },
  "PhotoMakerLoader": {
    "display_name": "Загрузчик PhotoMaker",
    "inputs": {
      "photomaker_model_name": {
        "name": "название_модели_photomaker"
      }
    }
  },
  "PikaImageToVideoNode2_2": {
    "description": "Отправляет изображение и подсказку в Pika API v2.2 для генерации видео.",
    "display_name": "Pika: преобразование изображения в видео",
    "inputs": {
      "control_after_generate": {
        "name": "контроль после генерации"
      },
      "duration": {
        "name": "длительность"
      },
      "image": {
        "name": "изображение",
        "tooltip": "Изображение для преобразования в видео"
      },
      "negative_prompt": {
        "name": "негативная подсказка"
      },
      "prompt_text": {
        "name": "текст подсказки"
      },
      "resolution": {
        "name": "разрешение"
      },
      "seed": {
        "name": "seed"
      }
    }
  },
  "PikaScenesV2_2": {
    "description": "Объединяйте ваши изображения для создания видео с содержащимися в них объектами. Загрузите несколько изображений в качестве ингредиентов и создайте высококачественное видео, включающее все из них.",
    "display_name": "Pika Scenes (Видеокомпозиция изображений)",
    "inputs": {
      "aspect_ratio": {
        "name": "aspect_ratio",
        "tooltip": "Соотношение сторон (ширина / высота)"
      },
      "control_after_generate": {
        "name": "control after generate"
      },
      "duration": {
        "name": "duration"
      },
      "image_ingredient_1": {
        "name": "image_ingredient_1",
        "tooltip": "Изображение, которое будет использовано как ингредиент для создания видео."
      },
      "image_ingredient_2": {
        "name": "image_ingredient_2",
        "tooltip": "Изображение, которое будет использовано как ингредиент для создания видео."
      },
      "image_ingredient_3": {
        "name": "image_ingredient_3",
        "tooltip": "Изображение, которое будет использовано как ингредиент для создания видео."
      },
      "image_ingredient_4": {
        "name": "image_ingredient_4",
        "tooltip": "Изображение, которое будет использовано как ингредиент для создания видео."
      },
      "image_ingredient_5": {
        "name": "image_ingredient_5",
        "tooltip": "Изображение, которое будет использовано как ингредиент для создания видео."
      },
      "ingredients_mode": {
        "name": "ingredients_mode"
      },
      "negative_prompt": {
        "name": "negative_prompt"
      },
      "prompt_text": {
        "name": "prompt_text"
      },
      "resolution": {
        "name": "resolution"
      },
      "seed": {
        "name": "seed"
      }
    }
  },
  "PikaStartEndFrameNode2_2": {
    "description": "Создайте видео, объединив первый и последний кадры. Загрузите два изображения, чтобы определить начальную и конечную точки, и позвольте ИИ создать плавный переход между ними.",
    "display_name": "Pika: видео из начального и конечного кадров",
    "inputs": {
      "control_after_generate": {
        "name": "control after generate"
      },
      "duration": {
        "name": "duration"
      },
      "image_end": {
        "name": "image_end",
        "tooltip": "Последнее изображение для объединения."
      },
      "image_start": {
        "name": "image_start",
        "tooltip": "Первое изображение для объединения."
      },
      "negative_prompt": {
        "name": "negative_prompt"
      },
      "prompt_text": {
        "name": "prompt_text"
      },
      "resolution": {
        "name": "resolution"
      },
      "seed": {
        "name": "seed"
      }
    }
  },
  "PikaTextToVideoNode2_2": {
    "description": "Отправляет текстовый запрос в Pika API v2.2 для генерации видео.",
    "display_name": "Pika: Текст в видео",
    "inputs": {
      "aspect_ratio": {
        "name": "соотношение сторон",
        "tooltip": "Соотношение сторон (ширина / высота)"
      },
      "control_after_generate": {
        "name": "управление после генерации"
      },
      "duration": {
        "name": "длительность"
      },
      "negative_prompt": {
        "name": "negative_prompt"
      },
      "prompt_text": {
        "name": "prompt_text"
      },
      "resolution": {
        "name": "разрешение"
      },
      "seed": {
        "name": "seed"
      }
    }
  },
  "Pikadditions": {
    "description": "Добавьте любой объект или изображение в ваше видео. Загрузите видео и укажите, что вы хотите добавить, чтобы получить гармонично интегрированный результат.",
    "display_name": "Pikadditions (Вставка объектов в видео)",
    "inputs": {
      "control_after_generate": {
        "name": "контроль после генерации"
      },
      "image": {
        "name": "изображение",
        "tooltip": "Изображение, которое будет добавлено в видео."
      },
      "negative_prompt": {
        "name": "негативный запрос"
      },
      "prompt_text": {
        "name": "текстовый запрос"
      },
      "seed": {
        "name": "seed"
      },
      "video": {
        "name": "видео",
        "tooltip": "Видео, в которое будет добавлено изображение."
      }
    }
  },
  "Pikaffects": {
    "description": "Создайте видео с определённым Pikaffect. Поддерживаемые Pikaffects: Cake-ify, Crumble, Crush, Decapitate, Deflate, Dissolve, Explode, Eye-pop, Inflate, Levitate, Melt, Peel, Poke, Squish, Ta-da, Tear",
    "display_name": "Pikaffects (Видеоэффекты)",
    "inputs": {
      "control_after_generate": {
        "name": "контроль после генерации"
      },
      "image": {
        "name": "изображение",
        "tooltip": "Референсное изображение, к которому будет применён Pikaffect."
      },
      "negative_prompt": {
        "name": "негативный запрос"
      },
      "pikaffect": {
        "name": "pikaffect"
      },
      "prompt_text": {
        "name": "текст запроса"
      },
      "seed": {
        "name": "seed"
      }
    }
  },
  "Pikaswaps": {
    "description": "Заменяйте любой объект или область на вашем видео новым изображением или объектом. Определяйте области для замены с помощью маски или координат.",
    "display_name": "Pika Swaps (Замена объектов на видео)",
    "inputs": {
      "control_after_generate": {
        "name": "контроль после генерации"
      },
      "image": {
        "name": "изображение",
        "tooltip": "Изображение, используемое для замены замаскированного объекта на видео."
      },
      "mask": {
        "name": "маска",
        "tooltip": "Используйте маску для определения областей на видео, которые нужно заменить"
      },
      "negative_prompt": {
        "name": "негативный запрос"
      },
      "prompt_text": {
        "name": "текстовый запрос"
      },
      "seed": {
        "name": "seed"
      },
      "video": {
        "name": "видео",
        "tooltip": "Видео, в котором будет заменён объект."
      }
    }
  },
  "PixverseImageToVideoNode": {
    "description": "Синхронно генерирует видео на основе запроса и размера вывода.",
    "display_name": "PixVerse: изображение в видео",
    "inputs": {
      "control_after_generate": {
        "name": "контроль после генерации"
      },
      "duration_seconds": {
        "name": "длительность_секунды"
      },
      "image": {
        "name": "изображение"
      },
      "motion_mode": {
        "name": "режим движения"
      },
      "negative_prompt": {
        "name": "негативный промпт",
        "tooltip": "Необязательное текстовое описание нежелательных элементов на изображении."
      },
      "pixverse_template": {
        "name": "pixverse_template",
        "tooltip": "Необязательный шаблон для влияния на стиль генерации, созданный узлом PixVerse Template."
      },
      "prompt": {
        "name": "промпт",
        "tooltip": "Промпт для генерации видео"
      },
      "quality": {
        "name": "качество"
      },
      "seed": {
        "name": "seed",
        "tooltip": "Seed для генерации видео."
      }
    }
  },
  "PixverseTemplateNode": {
    "display_name": "Шаблон PixVerse",
    "inputs": {
      "template": {
        "name": "шаблон"
      }
    },
    "outputs": {
      "0": {
        "name": "pixverse_template"
      }
    }
  },
  "PixverseTextToVideoNode": {
    "description": "Синхронно генерирует видео на основе запроса и размера вывода.",
    "display_name": "PixVerse: текст в видео",
    "inputs": {
      "aspect_ratio": {
        "name": "aspect_ratio"
      },
      "control_after_generate": {
        "name": "control after generate"
      },
      "duration_seconds": {
        "name": "duration_seconds"
      },
      "motion_mode": {
        "name": "motion_mode"
      },
      "negative_prompt": {
        "name": "negative_prompt",
        "tooltip": "Необязательное текстовое описание нежелательных элементов на изображении."
      },
      "pixverse_template": {
        "name": "pixverse_template",
        "tooltip": "Необязательный шаблон для влияния на стиль генерации, созданный узлом PixVerse Template."
      },
      "prompt": {
        "name": "prompt",
        "tooltip": "Запрос для генерации видео"
      },
      "quality": {
        "name": "quality"
      },
      "seed": {
        "name": "seed",
        "tooltip": "Сид для генерации видео."
      }
    }
  },
  "PixverseTransitionVideoNode": {
    "description": "Синхронно генерирует видео на основе запроса и размера вывода.",
    "display_name": "PixVerse Переходное Видео",
    "inputs": {
      "control_after_generate": {
        "name": "контроль после генерации"
      },
      "duration_seconds": {
        "name": "длительность (секунды)"
      },
      "first_frame": {
        "name": "первый кадр"
      },
      "last_frame": {
        "name": "последний кадр"
      },
      "motion_mode": {
        "name": "режим движения"
      },
      "negative_prompt": {
        "name": "негативный промпт",
        "tooltip": "Необязательное текстовое описание нежелательных элементов на изображении."
      },
      "prompt": {
        "name": "промпт",
        "tooltip": "Промпт для генерации видео"
      },
      "quality": {
        "name": "качество"
      },
      "seed": {
        "name": "seed",
        "tooltip": "Seed для генерации видео."
      }
    }
  },
  "PolyexponentialScheduler": {
    "display_name": "Полиэкспоненциальный scheduler",
    "inputs": {
      "rho": {
        "name": "ро"
      },
      "sigma_max": {
        "name": "макс_сигма"
      },
      "sigma_min": {
        "name": "мин_сигма"
      },
      "steps": {
        "name": "шаги"
      }
    }
  },
  "PorterDuffImageComposite": {
    "display_name": "Составное изображение Портера-Даффа",
    "inputs": {
      "destination": {
        "name": "назначение"
      },
      "destination_alpha": {
        "name": "альфа_назначения"
      },
      "mode": {
        "name": "режим"
      },
      "source": {
        "name": "источник"
      },
      "source_alpha": {
        "name": "альфа_источника"
      }
    }
  },
  "Preview3D": {
    "display_name": "Предварительный просмотр 3D",
    "inputs": {
      "camera_info": {
        "name": "информация_камеры"
      },
      "image": {
        "name": "изображение"
      },
      "model_file": {
        "name": "файл_модели"
      }
    }
  },
  "Preview3DAnimation": {
    "display_name": "Предварительный просмотр 3D - Анимация",
    "inputs": {
      "camera_info": {
        "name": "camera_info"
      },
      "image": {
        "name": "изображение"
      },
      "model_file": {
        "name": "файл_модели"
      }
    }
  },
  "PreviewAny": {
    "display_name": "Предпросмотр любого",
    "inputs": {
      "preview": {
      },
      "source": {
        "name": "источник"
      }
    }
  },
  "PreviewAudio": {
    "display_name": "Предварительное прослушивание аудио",
    "inputs": {
      "audio": {
        "name": "аудио"
      },
      "audioUI": {
        "name": "audioUI"
      }
    }
  },
  "PreviewImage": {
    "description": "Сохраняет входные изображения в вашу директорию вывода ComfyUI.",
    "display_name": "Предварительный просмотр изображения",
    "inputs": {
      "images": {
        "name": "изображения"
      }
    }
  },
  "PrimitiveBoolean": {
    "display_name": "Булево значение",
    "inputs": {
      "value": {
        "name": "значение"
      }
    }
  },
  "PrimitiveFloat": {
    "display_name": "Число с плавающей запятой",
    "inputs": {
      "value": {
        "name": "значение"
      }
    }
  },
  "PrimitiveInt": {
    "display_name": "Int",
    "inputs": {
      "control_after_generate": {
        "name": "контроль после генерации"
      },
      "value": {
        "name": "значение"
      }
    }
  },
  "PrimitiveString": {
    "display_name": "Строка",
    "inputs": {
      "value": {
        "name": "значение"
      }
    }
  },
  "PrimitiveStringMultiline": {
    "display_name": "Строка (многострочная)",
    "inputs": {
      "value": {
        "name": "значение"
      }
    }
  },
  "QuadrupleCLIPLoader": {
    "description": "[Рецепты]\n\nhidream: long clip-l, long clip-g, t5xxl, llama_8b_3.1_instruct",
    "display_name": "QuadrupleCLIPLoader",
    "inputs": {
      "clip_name1": {
        "name": "clip_name1"
      },
      "clip_name2": {
        "name": "clip_name2"
      },
      "clip_name3": {
        "name": "clip_name3"
      },
      "clip_name4": {
        "name": "clip_name4"
      }
    }
  },
  "RandomNoise": {
    "display_name": "Случайный шум",
    "inputs": {
      "control_after_generate": {
        "name": "контроль_после_генерации"
      },
      "noise_seed": {
        "name": "сид_шума"
      }
    }
  },
  "RebatchImages": {
    "display_name": "Перепаковать изображения",
    "inputs": {
      "batch_size": {
        "name": "размер_пакета"
      },
      "images": {
        "name": "изображения"
      }
    }
  },
  "RebatchLatents": {
    "display_name": "Перепаковать латенты",
    "inputs": {
      "batch_size": {
        "name": "размер_пакета"
      },
      "latents": {
        "name": "латенты"
      }
    }
  },
  "RecraftColorRGB": {
    "description": "Создайте Recraft Color, выбрав определённые значения RGB.",
    "display_name": "Recraft Color RGB",
    "inputs": {
      "b": {
        "name": "b",
        "tooltip": "Значение синего цвета."
      },
      "g": {
        "name": "g",
        "tooltip": "Значение зелёного цвета."
      },
      "r": {
        "name": "r",
        "tooltip": "Значение красного цвета."
      },
      "recraft_color": {
        "name": "recraft_color"
      }
    },
    "outputs": {
      "0": {
        "name": "recraft_color"
      }
    }
  },
  "RecraftControls": {
    "description": "Создайте Recraft Controls для настройки генерации Recraft.",
    "display_name": "Recraft Controls",
    "inputs": {
      "background_color": {
        "name": "background_color"
      },
      "colors": {
        "name": "colors"
      }
    },
    "outputs": {
      "0": {
        "name": "recraft_controls"
      }
    }
  },
  "RecraftCreativeUpscaleNode": {
    "description": "Масштабирует изображение синхронно.\nУлучшает заданное растровое изображение с помощью инструмента «creative upscale», повышая разрешение с акцентом на детализацию мелких элементов и лиц.",
    "display_name": "Recraft Creative Upscale Image",
    "inputs": {
      "image": {
        "name": "изображение"
      }
    }
  },
  "RecraftCrispUpscaleNode": {
    "description": "Увеличивает изображение синхронно.\nУлучшает заданное растровое изображение с помощью инструмента «четкое увеличение», повышая разрешение, делая изображение более резким и чистым.",
    "display_name": "Recraft Четкое Увеличение Изображения",
    "inputs": {
      "image": {
        "name": "изображение"
      }
    }
  },
  "RecraftImageInpaintingNode": {
    "description": "Изменить изображение на основе запроса и маски.",
    "display_name": "Восстановление изображения Recraft",
    "inputs": {
      "control_after_generate": {
        "name": "контроль после генерации"
      },
      "image": {
        "name": "изображение"
      },
      "mask": {
        "name": "mask"
      },
      "n": {
        "name": "n",
        "tooltip": "Количество изображений для генерации."
      },
      "negative_prompt": {
        "name": "негативный запрос",
        "tooltip": "Необязательное текстовое описание нежелательных элементов на изображении."
      },
      "prompt": {
        "name": "запрос",
        "tooltip": "Запрос для генерации изображения."
      },
      "recraft_style": {
        "name": "recraft_style"
      },
      "seed": {
        "name": "seed",
        "tooltip": "Сид для определения необходимости повторного запуска узла; фактические результаты недетерминированы независимо от сида."
      }
    }
  },
  "RecraftImageToImageNode": {
    "description": "Изменить изображение на основе запроса и степени изменения.",
    "display_name": "Recraft: Изображение в изображение",
    "inputs": {
      "control_after_generate": {
        "name": "управление после генерации"
      },
      "image": {
        "name": "изображение"
      },
      "n": {
        "name": "n",
        "tooltip": "Количество изображений для генерации."
      },
      "negative_prompt": {
        "name": "негативный запрос",
        "tooltip": "Необязательное текстовое описание нежелательных элементов на изображении."
      },
      "prompt": {
        "name": "запрос",
        "tooltip": "Запрос для генерации изображения."
      },
      "recraft_controls": {
        "name": "recraft_controls",
        "tooltip": "Необязательные дополнительные параметры управления генерацией через узел Recraft Controls."
      },
      "recraft_style": {
        "name": "recraft_style"
      },
      "seed": {
        "name": "seed",
        "tooltip": "Seed для определения необходимости повторного запуска узла; фактические результаты недетерминированы независимо от seed."
      },
      "strength": {
        "name": "степень изменения",
        "tooltip": "Определяет различие с оригинальным изображением, должно быть в диапазоне [0, 1], где 0 — почти идентично, а 1 — минимальное сходство."
      }
    }
  },
  "RecraftRemoveBackgroundNode": {
    "description": "Удаляет фон с изображения и возвращает обработанное изображение и маску.",
    "display_name": "Recraft Remove Background",
    "inputs": {
      "image": {
        "name": "изображение"
      }
    }
  },
  "RecraftReplaceBackgroundNode": {
    "description": "Заменить фон на изображении на основе заданного промпта.",
    "display_name": "Recraft Замена Фона",
    "inputs": {
      "control_after_generate": {
        "name": "контроль после генерации"
      },
      "image": {
        "name": "изображение"
      },
      "n": {
        "name": "n",
        "tooltip": "Количество изображений для генерации."
      },
      "negative_prompt": {
        "name": "негативный_промпт",
        "tooltip": "Необязательное текстовое описание нежелательных элементов на изображении."
      },
      "prompt": {
        "name": "промпт",
        "tooltip": "Промпт для генерации изображения."
      },
      "recraft_style": {
        "name": "recraft_style"
      },
      "seed": {
        "name": "seed",
        "tooltip": "Сид для определения необходимости повторного запуска узла; фактические результаты недетерминированы независимо от сида."
      }
    }
  },
  "RecraftStyleV3DigitalIllustration": {
    "description": "Выберите стиль realistic_image и необязательный подстиль.",
    "display_name": "Recraft Стиль - Цифровая иллюстрация",
    "inputs": {
      "substyle": {
        "name": "подстиль"
      }
    },
    "outputs": {
      "0": {
        "name": "recraft_style"
      }
    }
  },
  "RecraftStyleV3InfiniteStyleLibrary": {
    "description": "Выберите стиль на основе существующего UUID из Infinite Style Library Recraft.",
    "display_name": "Recraft Style - Infinite Style Library",
    "inputs": {
      "style_id": {
        "name": "style_id",
        "tooltip": "UUID стиля из Infinite Style Library."
      }
    },
    "outputs": {
      "0": {
        "name": "recraft_style"
      }
    }
  },
  "RecraftStyleV3LogoRaster": {
    "description": "Выберите стиль realistic_image и дополнительный подстиль (опционально).",
    "display_name": "Recraft Style - Логотип Растр",
    "inputs": {
      "substyle": {
        "name": "подстиль"
      }
    },
    "outputs": {
      "0": {
        "name": "recraft_style"
      }
    }
  },
  "RecraftStyleV3RealisticImage": {
    "description": "Выберите стиль realistic_image и необязательный подстиль.",
    "display_name": "Recraft Style - Реалистичное изображение",
    "inputs": {
      "substyle": {
        "name": "подстиль"
      }
    },
    "outputs": {
      "0": {
        "name": "recraft_style"
      }
    }
  },
  "RecraftTextToImageNode": {
    "description": "Синхронно генерирует изображения на основе запроса и разрешения.",
    "display_name": "Recraft: текст в изображение",
    "inputs": {
      "control_after_generate": {
        "name": "control after generate"
      },
      "n": {
        "name": "n",
        "tooltip": "Количество изображений для генерации."
      },
      "negative_prompt": {
        "name": "negative_prompt",
        "tooltip": "Необязательное текстовое описание нежелательных элементов на изображении."
      },
      "prompt": {
        "name": "prompt",
        "tooltip": "Запрос для генерации изображения."
      },
      "recraft_controls": {
        "name": "recraft_controls",
        "tooltip": "Необязательные дополнительные параметры управления генерацией через узел Recraft Controls."
      },
      "recraft_style": {
        "name": "recraft_style"
      },
      "seed": {
        "name": "seed",
        "tooltip": "Сид для определения необходимости повторного запуска узла; фактические результаты не являются детерминированными независимо от сида."
      },
      "size": {
        "name": "size",
        "tooltip": "Размер сгенерированного изображения."
      }
    }
  },
  "RecraftTextToVectorNode": {
    "description": "Синхронно генерирует SVG на основе запроса и разрешения.",
    "display_name": "Recraft: Текст в вектор",
    "inputs": {
      "control_after_generate": {
        "name": "control after generate"
      },
      "n": {
        "name": "n",
        "tooltip": "Количество изображений для генерации."
      },
      "negative_prompt": {
        "name": "negative_prompt",
        "tooltip": "Необязательное текстовое описание нежелательных элементов на изображении."
      },
      "prompt": {
        "name": "prompt",
        "tooltip": "Запрос для генерации изображения."
      },
      "recraft_controls": {
        "name": "recraft_controls",
        "tooltip": "Необязательные дополнительные параметры управления генерацией через узел Recraft Controls."
      },
      "seed": {
        "name": "seed",
        "tooltip": "Сид для определения необходимости повторного запуска узла; фактические результаты не являются детерминированными независимо от сида."
      },
      "size": {
        "name": "size",
        "tooltip": "Размер сгенерированного изображения."
      },
      "substyle": {
        "name": "substyle"
      }
    }
  },
  "RecraftVectorizeImageNode": {
    "description": "Генерирует SVG синхронно из входного изображения.",
    "display_name": "Recraft Векторизация Изображения",
    "inputs": {
      "image": {
        "name": "изображение"
      }
    }
  },
  "RenormCFG": {
    "display_name": "RenormCFG",
    "inputs": {
      "cfg_trunc": {
        "name": "cfg_trunc"
      },
      "model": {
        "name": "модель"
      },
      "renorm_cfg": {
        "name": "renorm_cfg"
      }
    }
  },
  "RepeatImageBatch": {
    "display_name": "Повторить партию изображений",
    "inputs": {
      "amount": {
        "name": "количество"
      },
      "image": {
        "name": "изображение"
      }
    }
  },
  "RepeatLatentBatch": {
    "display_name": "Повторить партию латентов",
    "inputs": {
      "amount": {
        "name": "количество"
      },
      "samples": {
        "name": "образцы"
      }
    }
  },
  "RescaleCFG": {
    "display_name": "Масштабировать CFG",
    "inputs": {
      "model": {
        "name": "модель"
      },
      "multiplier": {
        "name": "множитель"
      }
    }
  },
  "SDTurboScheduler": {
    "display_name": "Scheduler SDTurbo",
    "inputs": {
      "denoise": {
        "name": "шумоподавление"
      },
      "model": {
        "name": "модель"
      },
      "steps": {
        "name": "шаги"
      }
    }
  },
  "SD_4XUpscale_Conditioning": {
    "display_name": "SD_4XUpscale_Conditioning",
    "inputs": {
      "images": {
        "name": "изображения"
      },
      "negative": {
        "name": "отрицательный"
      },
      "noise_augmentation": {
        "name": "шумовое_увеличение"
      },
      "positive": {
        "name": "положительный"
      },
      "scale_ratio": {
        "name": "коэффициент_масштабирования"
      }
    },
    "outputs": {
      "0": {
        "name": "положительный"
      },
      "1": {
        "name": "отрицательный"
      },
      "2": {
        "name": "латентный"
      }
    }
  },
  "SV3D_Conditioning": {
    "display_name": "SV3D_Кондиционирование",
    "inputs": {
      "clip_vision": {
        "name": "clip_vision"
      },
      "elevation": {
        "name": "высота"
      },
      "height": {
        "name": "высота"
      },
      "init_image": {
        "name": "начальное_изображение"
      },
      "vae": {
        "name": "vae"
      },
      "video_frames": {
        "name": "кадры_видео"
      },
      "width": {
        "name": "ширина"
      }
    },
    "outputs": {
      "0": {
        "name": "положительный"
      },
      "1": {
        "name": "отрицательный"
      },
      "2": {
        "name": "латентный"
      }
    }
  },
  "SVD_img2vid_Conditioning": {
    "display_name": "SVD_img2vid_Кондиционирование",
    "inputs": {
      "augmentation_level": {
        "name": "уровень_аугментации"
      },
      "clip_vision": {
        "name": "clip_vision"
      },
      "fps": {
        "name": "fps"
      },
      "height": {
        "name": "высота"
      },
      "init_image": {
        "name": "init_image"
      },
      "motion_bucket_id": {
        "name": "id_корзины_движения"
      },
      "vae": {
        "name": "vae"
      },
      "video_frames": {
        "name": "кадры_видео"
      },
      "width": {
        "name": "ширина"
      }
    },
    "outputs": {
      "0": {
        "name": "положительный"
      },
      "1": {
        "name": "отрицательный"
      },
      "2": {
        "name": "латентный"
      }
    }
  },
  "SamplerCustom": {
    "display_name": "Пользовательский выборщик",
    "inputs": {
      "add_noise": {
        "name": "добавить_шум"
      },
      "cfg": {
        "name": "cfg"
      },
      "control_after_generate": {
        "name": "контроль после генерации"
      },
      "latent_image": {
        "name": "латентное_изображение"
      },
      "model": {
        "name": "модель"
      },
      "negative": {
        "name": "отрицательный"
      },
      "noise_seed": {
        "name": "сид_шума"
      },
      "positive": {
        "name": "положительный"
      },
      "sampler": {
        "name": "сэмплер"
      },
      "sigmas": {
        "name": "сигмы"
      }
    },
    "outputs": {
      "0": {
        "name": "выход"
      },
      "1": {
        "name": "очищенный_выход"
      }
    }
  },
  "SamplerCustomAdvanced": {
    "display_name": "Пользовательский сэмплер (Расширенный)",
    "inputs": {
      "guider": {
        "name": "гид"
      },
      "latent_image": {
        "name": "латентное_изображение"
      },
      "noise": {
        "name": "шум"
      },
      "sampler": {
        "name": "сэмплер"
      },
      "sigmas": {
        "name": "сигмы"
      }
    },
    "outputs": {
      "0": {
        "name": "выход"
      },
      "1": {
        "name": "очищенный_выход"
      }
    }
  },
  "SamplerDPMAdaptative": {
    "display_name": "Адаптивный сэмплер DPM",
    "inputs": {
      "accept_safety": {
        "name": "accept_safety"
      },
      "atol": {
        "name": "atol"
      },
      "dcoeff": {
        "name": "dcoeff"
      },
      "eta": {
        "name": "eta"
      },
      "h_init": {
        "name": "h_init"
      },
      "icoeff": {
        "name": "icoeff"
      },
      "order": {
        "name": "порядок"
      },
      "pcoeff": {
        "name": "pcoeff"
      },
      "rtol": {
        "name": "rtol"
      },
      "s_noise": {
        "name": "s_noise"
      }
    }
  },
  "SamplerDPMPP_2M_SDE": {
    "display_name": "Сэмплер DPMPP_2M_SDE",
    "inputs": {
      "eta": {
        "name": "eta"
      },
      "noise_device": {
        "name": "устройство_шума"
      },
      "s_noise": {
        "name": "s_noise"
      },
      "solver_type": {
        "name": "тип_решателя"
      }
    }
  },
  "SamplerDPMPP_2S_Ancestral": {
    "display_name": "Сэмплер DPMPP_2S_Ancestral",
    "inputs": {
      "eta": {
        "name": "eta"
      },
      "s_noise": {
        "name": "s_noise"
      }
    }
  },
  "SamplerDPMPP_3M_SDE": {
    "display_name": "Сэмплер DPMPP_3M_SDE",
    "inputs": {
      "eta": {
        "name": "eta"
      },
      "noise_device": {
        "name": "устройство_шума"
      },
      "s_noise": {
        "name": "s_noise"
      }
    }
  },
  "SamplerDPMPP_SDE": {
    "display_name": "Сэмплер DPMPP_SDE",
    "inputs": {
      "eta": {
        "name": "eta"
      },
      "noise_device": {
        "name": "устройство_шума"
      },
      "r": {
        "name": "r"
      },
      "s_noise": {
        "name": "s_noise"
      }
    }
  },
  "SamplerEulerAncestral": {
    "display_name": "Сэмплер Эйлера (Анастр.)",
    "inputs": {
      "eta": {
        "name": "eta"
      },
      "s_noise": {
        "name": "s_noise"
      }
    }
  },
  "SamplerEulerAncestralCFGPP": {
    "display_name": "Сэмплер Эйлера (Анастр.) CFG++",
    "inputs": {
      "eta": {
        "name": "eta"
      },
      "s_noise": {
        "name": "s_noise"
      }
    }
  },
  "SamplerEulerCFGpp": {
    "display_name": "Сэмплер Эйлера CFG++",
    "inputs": {
      "version": {
        "name": "версия"
      }
    }
  },
  "SamplerLCMUpscale": {
    "display_name": "Сэмплер LCM Upscale",
    "inputs": {
      "scale_ratio": {
        "name": "коэффициент_масштабирования"
      },
      "scale_steps": {
        "name": "шаги_масштабирования"
      },
      "upscale_method": {
        "name": "метод_масштабирования"
      }
    }
  },
  "SamplerLMS": {
    "display_name": "Сэмплер LMS",
    "inputs": {
      "order": {
        "name": "порядок"
      }
    }
  },
  "SaveAnimatedPNG": {
    "display_name": "Сохранить анимированный PNG",
    "inputs": {
      "compress_level": {
        "name": "уровень_сжатия"
      },
      "filename_prefix": {
        "name": "префикс_названия_файла"
      },
      "fps": {
        "name": "fps"
      },
      "images": {
        "name": "изображения"
      }
    }
  },
  "SaveAnimatedWEBP": {
    "display_name": "Сохранить анимированный WEBP",
    "inputs": {
      "filename_prefix": {
        "name": "префикс_названия_файла"
      },
      "fps": {
        "name": "fps"
      },
      "images": {
        "name": "изображения"
      },
      "lossless": {
        "name": "без_потерь"
      },
      "method": {
        "name": "метод"
      },
      "quality": {
        "name": "качество"
      }
    }
  },
  "SaveAudio": {
    "display_name": "Сохранить аудио",
    "inputs": {
      "audio": {
        "name": "аудио"
      },
      "audioUI": {
        "name": "audioUI"
      },
      "filename_prefix": {
        "name": "префикс_названия_файла"
      }
    }
  },
  "SaveGLB": {
    "display_name": "SaveGLB",
    "inputs": {
      "filename_prefix": {
        "name": "префикс_имени_файла"
      },
      "image": {
        "name": "изображение"
      },
      "mesh": {
        "name": "сетка"
      }
    }
  },
  "SaveImage": {
    "description": "Сохраняет входные изображения в вашу директорию вывода ComfyUI.",
    "display_name": "Сохранить изображение",
    "inputs": {
      "filename_prefix": {
        "name": "префикс_названия_файла",
        "tooltip": "Префикс для файла, который нужно сохранить. Это может включать информацию о форматировании, такую как %date:yyyy-MM-dd% или %Empty Latent Image.width%, чтобы включить значения из нод."
      },
      "images": {
        "name": "изображения",
        "tooltip": "Изображения_для_сохранения."
      }
    }
  },
  "SaveImageWebsocket": {
    "display_name": "Сохранить изображение через веб-сокет",
    "inputs": {
      "images": {
        "name": "изображения"
      }
    }
  },
  "SaveLatent": {
    "display_name": "Сохранить латент",
    "inputs": {
      "filename_prefix": {
        "name": "префикс_названия_файла"
      },
      "samples": {
        "name": "образцы"
      }
    }
  },
  "SaveSVG": {
    "description": "Сохранять файлы SVG на диск.",
    "display_name": "Сохранить SVG",
    "inputs": {
      "filename_prefix": {
        "name": "префикс_имени_файла",
        "tooltip": "Префикс для сохраняемого файла. Может включать информацию о форматировании, такую как %date:yyyy-MM-dd% или %Empty Latent Image.width% для включения значений из узлов."
      },
      "svg": {
        "name": "svg"
      }
    }
  },
  "SaveVideo": {
    "description": "Сохраняет входные изображения в вашу папку вывода ComfyUI.",
    "display_name": "Сохранить видео",
    "inputs": {
      "codec": {
        "name": "кодек",
        "tooltip": "Кодек для видео."
      },
      "filename_prefix": {
        "name": "префикс_имени_файла",
        "tooltip": "Префикс для сохраняемого файла. Может включать информацию о форматировании, такую как %date:yyyy-MM-dd% или %Empty Latent Image.width% для включения значений из узлов."
      },
      "format": {
        "name": "формат",
        "tooltip": "Формат, в котором сохранить видео."
      },
      "video": {
        "name": "видео",
        "tooltip": "Видео для сохранения."
      }
    }
  },
  "SaveWEBM": {
    "display_name": "SaveWEBM",
    "inputs": {
      "codec": {
        "name": "кодек"
      },
      "crf": {
        "name": "crf",
        "tooltip": "Большее значение crf означает нижнее качество с меньшим размером файла, меньшее значение crf означает высшее качество большего размера файла."
      },
      "filename_prefix": {
        "name": "префикс_имени_файла"
      },
      "fps": {
        "name": "fps"
      },
      "images": {
        "name": "изображения"
      }
    }
  },
  "SelfAttentionGuidance": {
    "display_name": "Направление самовнимания",
    "inputs": {
      "blur_sigma": {
        "name": "сигма_размытия"
      },
      "model": {
        "name": "модель"
      },
      "scale": {
        "name": "масштаб"
      }
    }
  },
  "SetClipHooks": {
    "display_name": "Установить хуки CLIP",
    "inputs": {
      "apply_to_conds": {
        "name": "применить_к_условиям"
      },
      "clip": {
        "name": "клип"
      },
      "hooks": {
        "name": "хуки"
      },
      "schedule_clip": {
        "name": "schedule_clip"
      }
    }
  },
  "SetFirstSigma": {
    "display_name": "SetFirstSigma",
    "inputs": {
      "sigma": {
        "name": "сигма"
      },
      "sigmas": {
        "name": "сигмы"
      }
    }
  },
  "SetHookKeyframes": {
    "display_name": "Установить ключевые кадры хука",
    "inputs": {
      "hook_kf": {
        "name": "ключевые_кадры_хука"
      },
      "hooks": {
        "name": "хуки"
      }
    }
  },
  "SetLatentNoiseMask": {
    "display_name": "Установить маску шума латента",
    "inputs": {
      "mask": {
        "name": "маска"
      },
      "samples": {
        "name": "образцы"
      }
    }
  },
  "SetUnionControlNetType": {
    "display_name": "Установить тип объединенного ControlNet",
    "inputs": {
      "control_net": {
        "name": "control_net"
      },
      "type": {
        "name": "тип"
      }
    }
  },
  "SkipLayerGuidanceDiT": {
    "description": "Универсальная версия ноды SkipLayerGuidance, которую можно использовать на любой модели DiT.",
    "display_name": "Пропустить руководство по слоям DiT",
    "inputs": {
      "double_layers": {
        "name": "двойные_слои"
      },
      "end_percent": {
        "name": "конечный_процент"
      },
      "model": {
        "name": "модель"
      },
      "rescaling_scale": {
        "name": "масштаб_перемасштабирования"
      },
      "scale": {
        "name": "масштаб"
      },
      "single_layers": {
        "name": "одиночные_слои"
      },
      "start_percent": {
        "name": "начальный_процент"
      }
    }
  },
  "SkipLayerGuidanceSD3": {
    "description": "Универсальная версия ноды SkipLayerGuidance, которую можно использовать на любой модели DiT.",
    "display_name": "Пропустить руководство по слоям SD3",
    "inputs": {
      "end_percent": {
        "name": "конечный_процент"
      },
      "layers": {
        "name": "слои"
      },
      "model": {
        "name": "модель"
      },
      "scale": {
        "name": "масштаб"
      },
      "start_percent": {
        "name": "начальный_процент"
      }
    }
  },
  "SolidMask": {
    "display_name": "Сплошная маска",
    "inputs": {
      "height": {
        "name": "высота"
      },
      "value": {
        "name": "значение"
      },
      "width": {
        "name": "ширина"
      }
    }
  },
  "SplitImageWithAlpha": {
    "display_name": "Разделить изображение с альфа-каналом",
    "inputs": {
      "image": {
        "name": "изображение"
      }
    }
  },
  "SplitSigmas": {
    "display_name": "Разделить сигмы",
    "inputs": {
      "sigmas": {
        "name": "сигмы"
      },
      "step": {
        "name": "шаг"
      }
    },
    "outputs": {
      "0": {
        "name": "высокие_сигмы"
      },
      "1": {
        "name": "низкие_сигмы"
      }
    }
  },
  "SplitSigmasDenoise": {
    "display_name": "Разделить сигмы для удаления шума",
    "inputs": {
      "denoise": {
        "name": "шумоподавление"
      },
      "sigmas": {
        "name": "сигмы"
      }
    },
    "outputs": {
      "0": {
        "name": "высокие_сигмы"
      },
      "1": {
        "name": "низкие_сигмы"
      }
    }
  },
  "StabilityStableImageSD_3_5Node": {
    "description": "Генерирует изображения синхронно на основе запроса и разрешения.",
    "display_name": "Stability AI Stable Diffusion 3.5 Image",
    "inputs": {
      "aspect_ratio": {
        "name": "aspect_ratio",
        "tooltip": "Соотношение сторон сгенерированного изображения."
      },
      "cfg_scale": {
        "name": "cfg_scale",
        "tooltip": "Насколько строго процесс диффузии следует тексту запроса (более высокие значения делают изображение ближе к вашему запросу)"
      },
      "control_after_generate": {
        "name": "control after generate"
      },
      "image": {
        "name": "image"
      },
      "image_denoise": {
        "name": "image_denoise",
        "tooltip": "Уровень удаления шума исходного изображения; 0.0 — изображение идентично входному, 1.0 — как если бы изображение не было предоставлено вовсе."
      },
      "model": {
        "name": "model"
      },
      "negative_prompt": {
        "name": "negative_prompt",
        "tooltip": "Ключевые слова того, что вы не хотите видеть на выходном изображении. Это расширенная функция."
      },
      "prompt": {
        "name": "prompt",
        "tooltip": "Что вы хотите увидеть на выходном изображении. Сильный, описательный запрос, который чётко определяет элементы, цвета и объекты, приведёт к лучшим результатам."
      },
      "seed": {
        "name": "seed",
        "tooltip": "Случайное зерно, используемое для создания шума."
      },
      "style_preset": {
        "name": "style_preset",
        "tooltip": "Необязательный желаемый стиль сгенерированного изображения."
      }
    }
  },
  "StabilityStableImageUltraNode": {
    "description": "Генерирует изображения синхронно на основе запроса и разрешения.",
    "display_name": "Stability AI Stable Image Ultra",
    "inputs": {
      "aspect_ratio": {
        "name": "aspect_ratio",
        "tooltip": "Соотношение сторон генерируемого изображения."
      },
      "control_after_generate": {
        "name": "control after generate"
      },
      "image": {
        "name": "image"
      },
      "image_denoise": {
        "name": "image_denoise",
        "tooltip": "Уровень удаления шума с входного изображения; 0.0 даст изображение, идентичное входному, 1.0 — как если бы изображение не было предоставлено вовсе."
      },
      "negative_prompt": {
        "name": "negative_prompt",
        "tooltip": "Текст, описывающий, что вы НЕ хотите видеть на выходном изображении. Это расширенная функция."
      },
      "prompt": {
        "name": "prompt",
        "tooltip": "Что вы хотите увидеть на выходном изображении. Сильный, описательный запрос, который чётко определяет элементы, цвета и объекты, приведёт к лучшим результатам. Чтобы управлять весом определённого слова, используйте формат `(word:weight)`, где `word` — это слово, вес которого вы хотите изменить, а `weight` — значение от 0 до 1. Например: `The sky was a crisp (blue:0.3) and (green:0.8)` будет означать, что небо было синим и зелёным, но больше зелёным, чем синим."
      },
      "seed": {
        "name": "seed",
        "tooltip": "Случайное зерно, используемое для создания шума."
      },
      "style_preset": {
        "name": "style_preset",
        "tooltip": "Необязательный желаемый стиль генерируемого изображения."
      }
    }
  },
  "StabilityUpscaleConservativeNode": {
    "description": "Увеличивает изображение до 4K с минимальными изменениями.",
    "display_name": "Stability AI Увеличение (Консервативное)",
    "inputs": {
      "control_after_generate": {
        "name": "контроль после генерации"
      },
      "creativity": {
        "name": "креативность",
        "tooltip": "Управляет вероятностью создания дополнительных деталей, не сильно обусловленных исходным изображением."
      },
      "image": {
        "name": "изображение"
      },
      "negative_prompt": {
        "name": "негативный промпт",
        "tooltip": "Ключевые слова того, что вы не хотите видеть на выходном изображении. Это расширенная функция."
      },
      "prompt": {
        "name": "промпт",
        "tooltip": "Что вы хотите видеть на выходном изображении. Сильный, описательный промпт, чётко определяющий элементы, цвета и объекты, приведёт к лучшим результатам."
      },
      "seed": {
        "name": "seed",
        "tooltip": "Случайное значение seed, используемое для создания шума."
      }
    }
  },
  "StabilityUpscaleCreativeNode": {
    "description": "Увеличение изображения до 4K разрешения с минимальными изменениями.",
    "display_name": "Stability AI Upscale Creative",
    "inputs": {
      "control_after_generate": {
        "name": "контроль после генерации"
      },
      "creativity": {
        "name": "креативность",
        "tooltip": "Управляет вероятностью создания дополнительных деталей, не сильно обусловленных исходным изображением."
      },
      "image": {
        "name": "изображение"
      },
      "negative_prompt": {
        "name": "негативный промпт",
        "tooltip": "Ключевые слова того, что вы не хотите видеть на выходном изображении. Это расширенная функция."
      },
      "prompt": {
        "name": "промпт",
        "tooltip": "Что вы хотите видеть на выходном изображении. Сильный, описательный промпт, чётко определяющий элементы, цвета и объекты, приведёт к лучшим результатам."
      },
      "seed": {
        "name": "seed",
        "tooltip": "Случайное значение, используемое для создания шума."
      },
      "style_preset": {
        "name": "стиль",
        "tooltip": "Необязательный желаемый стиль сгенерированного изображения."
      }
    }
  },
  "StabilityUpscaleFastNode": {
    "description": "Быстро увеличивает изображение через Stability API до 4x от исходного размера; предназначено для увеличения изображений низкого качества или сжатых изображений.",
    "display_name": "Stability AI Быстрое Увеличение",
    "inputs": {
      "image": {
        "name": "изображение"
      }
    }
  },
  "StableCascade_EmptyLatentImage": {
    "display_name": "StableCascade_Пустое латентное изображение",
    "inputs": {
      "batch_size": {
        "name": "размер_пакета"
      },
      "compression": {
        "name": "сжатие"
      },
      "height": {
        "name": "высота"
      },
      "width": {
        "name": "ширина"
      }
    },
    "outputs": {
      "0": {
        "name": "этап_c"
      },
      "1": {
        "name": "этап_b"
      }
    }
  },
  "StableCascade_StageB_Conditioning": {
    "display_name": "StableCascade_Этап B_Кондиционирование",
    "inputs": {
      "conditioning": {
        "name": "кондиционирование"
      },
      "stage_c": {
        "name": "стадия_c"
      }
    }
  },
  "StableCascade_StageC_VAEEncode": {
    "display_name": "StableCascade_Этап C_VAE Кодирование",
    "inputs": {
      "compression": {
        "name": "сжатие"
      },
      "image": {
        "name": "изображение"
      },
      "vae": {
        "name": "vae"
      }
    },
    "outputs": {
      "0": {
        "name": "этап_c"
      },
      "1": {
        "name": "этап_b"
      }
    }
  },
  "StableCascade_SuperResolutionControlnet": {
    "display_name": "StableCascade_Суперразрешение Controlnet",
    "inputs": {
      "image": {
        "name": "изображение"
      },
      "vae": {
        "name": "vae"
      }
    },
    "outputs": {
      "0": {
        "name": "вход_controlnet"
      },
      "1": {
        "name": "этап_c"
      },
      "2": {
        "name": "этап_b"
      }
    }
  },
  "StableZero123_Conditioning": {
    "display_name": "StableZero123_Кондиционирование",
    "inputs": {
      "azimuth": {
        "name": "азимут"
      },
      "batch_size": {
        "name": "размер_пакета"
      },
      "clip_vision": {
        "name": "clip_vision"
      },
      "elevation": {
        "name": "высота"
      },
      "height": {
        "name": "высота"
      },
      "init_image": {
        "name": "начальное_изображение"
      },
      "vae": {
        "name": "vae"
      },
      "width": {
        "name": "ширина"
      }
    },
    "outputs": {
      "0": {
        "name": "положительный"
      },
      "1": {
        "name": "отрицательный"
      },
      "2": {
        "name": "латентный"
      }
    }
  },
  "StableZero123_Conditioning_Batched": {
    "display_name": "StableZero123_Кондиционирование_Пакетное",
    "inputs": {
      "azimuth": {
        "name": "азимут"
      },
      "azimuth_batch_increment": {
        "name": "инкремент_азимута_пакета"
      },
      "batch_size": {
        "name": "размер_пакета"
      },
      "clip_vision": {
        "name": "clip_vision"
      },
      "elevation": {
        "name": "высота"
      },
      "elevation_batch_increment": {
        "name": "инкремент_высоты_пакета"
      },
      "height": {
        "name": "высота"
      },
      "init_image": {
        "name": "начальное_изображение"
      },
      "vae": {
        "name": "vae"
      },
      "width": {
        "name": "ширина"
      }
    },
    "outputs": {
      "0": {
        "name": "положительный"
      },
      "1": {
        "name": "отрицательный"
      },
      "2": {
        "name": "латентный"
      }
    }
  },
  "StyleModelApply": {
    "display_name": "Применить модель стиля",
    "inputs": {
      "clip_vision_output": {
        "name": "выход_clip_vision"
      },
      "conditioning": {
        "name": "кондиционирование"
      },
      "strength": {
        "name": "сила"
      },
      "strength_type": {
        "name": "тип_силы"
      },
      "style_model": {
        "name": "модель_стиля"
      }
    }
  },
  "StyleModelLoader": {
    "display_name": "Загрузить модель стиля",
    "inputs": {
      "style_model_name": {
        "name": "название_модели_стиля"
      }
    }
  },
  "T5TokenizerOptions": {
    "display_name": "T5TokenizerOptions",
    "inputs": {
      "clip": {
        "name": "clip"
      },
      "min_length": {
        "name": "минимальная_длина"
      },
      "min_padding": {
        "name": "минимальное_дополнение"
      }
    }
  },
  "TextEncodeHunyuanVideo_ImageToVideo": {
    "display_name": "TextEncodeHunyuanVideo_ImageToVideo",
    "inputs": {
      "clip": {
        "name": "clip"
      },
      "clip_vision_output": {
        "name": "выход clip_vision"
      },
      "image_interleave": {
        "name": "перемежение изображения",
        "tooltip": "Насколько сильно изображение влияет на текстовую подсказку. Чем выше число, тем больше влияние от текстовой подсказки."
      },
      "prompt": {
        "name": "подсказка"
      }
    }
  },
  "ThresholdMask": {
    "display_name": "Пороговая маска",
    "inputs": {
      "mask": {
        "name": "маска"
      },
      "value": {
        "name": "значение"
      }
    }
  },
  "TomePatchModel": {
    "display_name": "Модель патча Tome",
    "inputs": {
      "model": {
        "name": "модель"
      },
      "ratio": {
        "name": "соотношение"
      }
    }
  },
  "TorchCompileModel": {
    "display_name": "Скомпилировать модель Torch",
    "inputs": {
      "backend": {
        "name": "бэкенд"
      },
      "model": {
        "name": "модель"
      }
    }
  },
  "TrimVideoLatent": {
    "display_name": "TrimVideoLatent",
    "inputs": {
      "samples": {
        "name": "samples"
      },
      "trim_amount": {
        "name": "обрезать_на"
      }
    }
  },
  "TripleCLIPLoader": {
    "description": "[Рецепты]\n\nsd3: clip-l, clip-g, t5",
    "display_name": "Тройной загрузчик CLIP",
    "inputs": {
      "clip_name1": {
        "name": "clip_name1"
      },
      "clip_name2": {
        "name": "clip_name2"
      },
      "clip_name3": {
        "name": "clip_name3"
      }
    }
  },
  "UNETLoader": {
    "display_name": "Загрузить модель диффузии",
    "inputs": {
      "unet_name": {
        "name": "название_unet"
      },
      "weight_dtype": {
        "name": "тип_данных_веса"
      }
    }
  },
  "UNetCrossAttentionMultiply": {
    "display_name": "Умножение перекрёстного внимания UNet",
    "inputs": {
      "k": {
        "name": "k"
      },
      "model": {
        "name": "модель"
      },
      "out": {
        "name": "выход"
      },
      "q": {
        "name": "q"
      },
      "v": {
        "name": "v"
      }
    }
  },
  "UNetSelfAttentionMultiply": {
    "display_name": "Умножение самовнимания UNet",
    "inputs": {
      "k": {
        "name": "k"
      },
      "model": {
        "name": "модель"
      },
      "out": {
        "name": "выход"
      },
      "q": {
        "name": "q"
      },
      "v": {
        "name": "v"
      }
    }
  },
  "UNetTemporalAttentionMultiply": {
    "display_name": "Умножение временного внимания UNet",
    "inputs": {
      "cross_structural": {
        "name": "кросс-структурный"
      },
      "cross_temporal": {
        "name": "кросс-временной"
      },
      "model": {
        "name": "модель"
      },
      "self_structural": {
        "name": "самоструктурный"
      },
      "self_temporal": {
        "name": "самовременный"
      }
    }
  },
  "UpscaleModelLoader": {
    "display_name": "Загрузить модель апскейла",
    "inputs": {
      "model_name": {
        "name": "название_модели"
      }
    }
  },
  "VAEDecode": {
    "description": "Декодирует латентные изображения обратно в изображения в пиксельном пространстве.",
    "display_name": "Декодировать VAE",
    "inputs": {
      "samples": {
        "name": "образцы",
        "tooltip": "Латентное изображение для декодирования."
      },
      "vae": {
        "name": "vae",
        "tooltip": "Модель VAE, используемая для декодирования латентного изображения."
      }
    },
    "outputs": {
      "0": {
        "tooltip": "Декодированное изображение."
      }
    }
  },
  "VAEDecodeAudio": {
    "display_name": "Декодировать аудио VAE",
    "inputs": {
      "samples": {
        "name": "образцы"
      },
      "vae": {
        "name": "vae"
      }
    }
  },
  "VAEDecodeHunyuan3D": {
    "display_name": "VAEDecodeHunyuan3D",
    "inputs": {
      "num_chunks": {
        "name": "количество_частей"
      },
      "octree_resolution": {
        "name": "разрешение_октодерева"
      },
      "samples": {
        "name": "образцы"
      },
      "vae": {
        "name": "vae"
      }
    }
  },
  "VAEDecodeTiled": {
    "display_name": "Декодировать VAE (плитками)",
    "inputs": {
      "overlap": {
        "name": "перекрытие"
      },
      "samples": {
        "name": "образцы"
      },
      "temporal_overlap": {
        "name": "temporal_overlap",
        "tooltip": "Используется только для видео VAE: количество кадров для перекрытия."
      },
      "temporal_size": {
        "name": "temporal_size",
        "tooltip": "Используется только для видео VAE: количество кадров для декодирования за раз."
      },
      "tile_size": {
        "name": "размер_плитки"
      },
      "vae": {
        "name": "vae"
      }
    }
  },
  "VAEEncode": {
    "display_name": "Кодировать VAE",
    "inputs": {
      "pixels": {
        "name": "пиксели"
      },
      "vae": {
        "name": "vae"
      }
    }
  },
  "VAEEncodeAudio": {
    "display_name": "Кодировать аудио VAE",
    "inputs": {
      "audio": {
        "name": "аудио"
      },
      "vae": {
        "name": "vae"
      }
    }
  },
  "VAEEncodeForInpaint": {
    "display_name": "Кодировать VAE (для инпейнтинга)",
    "inputs": {
      "grow_mask_by": {
        "name": "увеличить_маску_на"
      },
      "mask": {
        "name": "маска"
      },
      "pixels": {
        "name": "пиксели"
      },
      "vae": {
        "name": "vae"
      }
    }
  },
  "VAEEncodeTiled": {
    "display_name": "Кодировать VAE (плитками)",
    "inputs": {
      "overlap": {
        "name": "перекрытие"
      },
      "pixels": {
        "name": "пиксели"
      },
      "temporal_overlap": {
        "name": "temporal_overlap",
        "tooltip": "Используется только для видео VAEs: количество кадров для перекрытия."
      },
      "temporal_size": {
        "name": "temporal_size",
        "tooltip": "Используется только для видео VAEs: количество кадров для кодирования за один раз."
      },
      "tile_size": {
        "name": "размер_плитки"
      },
      "vae": {
        "name": "vae"
      }
    }
  },
  "VAELoader": {
    "display_name": "Загрузить VAE",
    "inputs": {
      "vae_name": {
        "name": "название_vae"
      }
    }
  },
  "VAESave": {
    "display_name": "Сохранить VAE",
    "inputs": {
      "filename_prefix": {
        "name": "префикс_названия_файла"
      },
      "vae": {
        "name": "vae"
      }
    }
  },
  "VPScheduler": {
    "display_name": "VPScheduler",
    "inputs": {
      "beta_d": {
        "name": "beta_d"
      },
      "beta_min": {
        "name": "beta_min"
      },
      "eps_s": {
        "name": "eps_s"
      },
      "steps": {
        "name": "шаги"
      }
    }
  },
  "VeoVideoGenerationNode": {
    "description": "Генерирует видео по текстовым подсказкам с помощью Google Veo API",
    "display_name": "Google Veo2 Генерация видео",
    "inputs": {
      "aspect_ratio": {
        "name": "aspect_ratio",
        "tooltip": "Соотношение сторон выходного видео"
      },
      "control_after_generate": {
        "name": "control after generate"
      },
      "duration_seconds": {
        "name": "duration_seconds",
        "tooltip": "Длительность выходного видео в секундах"
      },
      "enhance_prompt": {
        "name": "enhance_prompt",
        "tooltip": "Улучшать ли подсказку с помощью ИИ"
      },
      "image": {
        "name": "image",
        "tooltip": "Необязательное референсное изображение для направления генерации видео"
      },
      "negative_prompt": {
        "name": "negative_prompt",
        "tooltip": "Негативная текстовая подсказка для указания, чего избегать в видео"
      },
      "person_generation": {
        "name": "person_generation",
        "tooltip": "Разрешить ли генерацию людей в видео"
      },
      "prompt": {
        "name": "prompt",
        "tooltip": "Текстовое описание видео"
      },
      "seed": {
        "name": "seed",
        "tooltip": "Сид для генерации видео (0 — случайный)"
      }
    }
  },
  "VideoLinearCFGGuidance": {
    "display_name": "Направление Video Linear CFG",
    "inputs": {
      "min_cfg": {
        "name": "мин_cfg"
      },
      "model": {
        "name": "модель"
      }
    }
  },
  "VideoTriangleCFGGuidance": {
    "display_name": "Направление Video Triangle CFG",
    "inputs": {
      "min_cfg": {
        "name": "мин_cfg"
      },
      "model": {
        "name": "модель"
      }
    }
  },
  "VoxelToMesh": {
    "display_name": "VoxelToMesh",
    "inputs": {
      "algorithm": {
        "name": "алгоритм"
      },
      "threshold": {
        "name": "порог"
      },
      "voxel": {
        "name": "voxel"
      }
    }
  },
  "VoxelToMeshBasic": {
    "display_name": "VoxelToMeshBasic",
    "inputs": {
      "threshold": {
        "name": "порог"
      },
      "voxel": {
        "name": "воксель"
      }
    }
  },
  "WanFirstLastFrameToVideo": {
    "display_name": "WanFirstLastFrameToVideo",
    "inputs": {
      "batch_size": {
        "name": "размер_пакета"
      },
      "clip_vision_end_image": {
        "name": "clip_vision_end_image"
      },
      "clip_vision_start_image": {
        "name": "clip_vision_start_image"
      },
      "end_image": {
        "name": "конечное_изображение"
      },
      "height": {
        "name": "высота"
      },
      "length": {
        "name": "длина"
      },
      "negative": {
        "name": "отрицательный"
      },
      "positive": {
        "name": "положительный"
      },
      "start_image": {
        "name": "начальное_изображение"
      },
      "vae": {
        "name": "vae"
      },
      "width": {
        "name": "ширина"
      }
    },
    "outputs": {
      "0": {
        "name": "положительный"
      },
      "1": {
        "name": "отрицательный"
      },
      "2": {
        "name": "latent"
      }
    }
  },
  "WanFunControlToVideo": {
    "display_name": "WanFunControlToVideo",
    "inputs": {
      "batch_size": {
        "name": "размер_пакета"
      },
      "clip_vision_output": {
        "name": "clip_vision_output"
      },
      "control_video": {
        "name": "control_video"
      },
      "height": {
        "name": "высота"
      },
      "length": {
        "name": "длина"
      },
      "negative": {
        "name": "негативный"
      },
      "positive": {
        "name": "позитивный"
      },
      "start_image": {
        "name": "стартовое_изображение"
      },
      "vae": {
        "name": "vae"
      },
      "width": {
        "name": "ширина"
      }
    },
    "outputs": {
      "0": {
        "name": "позитивный"
      },
      "1": {
        "name": "негативный"
      },
      "2": {
        "name": "латентный"
      }
    }
  },
  "WanFunInpaintToVideo": {
    "display_name": "WanFunInpaintToVideo",
    "inputs": {
      "batch_size": {
        "name": "размер_пакета"
      },
      "clip_vision_output": {
        "name": "clip_vision_output"
      },
      "end_image": {
        "name": "конечное_изображение"
      },
      "height": {
        "name": "высота"
      },
      "length": {
        "name": "длина"
      },
      "negative": {
        "name": "негативный"
      },
      "positive": {
        "name": "позитивный"
      },
      "start_image": {
        "name": "начальное_изображение"
      },
      "vae": {
        "name": "vae"
      },
      "width": {
        "name": "ширина"
      }
    },
    "outputs": {
      "0": {
        "name": "позитивный"
      },
      "1": {
        "name": "негативный"
      },
      "2": {
        "name": "latent"
      }
    }
  },
  "WanImageToVideo": {
    "display_name": "WanИзображениеВВидео",
    "inputs": {
      "batch_size": {
        "name": "размер_пакета"
      },
      "clip_vision_output": {
        "name": "clip_vision_output"
      },
      "height": {
        "name": "высота"
      },
      "length": {
        "name": "длина"
      },
      "negative": {
        "name": "отрицательный"
      },
      "positive": {
        "name": "положительный"
      },
      "start_image": {
        "name": "начальное_изображение"
      },
      "vae": {
        "name": "vae"
      },
      "width": {
        "name": "ширина"
      }
    },
    "outputs": {
      "0": {
        "name": "положительный"
      },
      "1": {
        "name": "отрицательный"
      },
      "2": {
        "name": "latent"
      }
    }
  },
  "WanVaceToVideo": {
    "display_name": "WanVaceToVideo",
    "inputs": {
      "batch_size": {
        "name": "размер_пакета"
      },
      "control_masks": {
        "name": "control_masks"
      },
      "control_video": {
        "name": "control_video"
      },
      "height": {
        "name": "высота"
      },
      "length": {
        "name": "длина"
      },
      "negative": {
        "name": "негативный"
      },
      "positive": {
        "name": "позитивный"
      },
      "reference_image": {
        "name": "референсное_изображение"
      },
      "strength": {
        "name": "интенсивность"
      },
      "vae": {
        "name": "vae"
      },
      "width": {
        "name": "ширина"
      }
    },
    "outputs": {
      "0": {
        "name": "позитивный"
      },
      "1": {
        "name": "негативный"
      },
      "2": {
        "name": "latent"
      },
      "3": {
        "name": "обрезанный_latent"
      }
    }
  },
  "WebcamCapture": {
    "display_name": "Захват с веб-камеры",
    "inputs": {
      "capture_on_queue": {
        "name": "захват_в_очереди"
      },
      "height": {
        "name": "высота"
      },
      "image": {
        "name": "изображение"
      },
      "waiting for camera___": {
      },
      "width": {
        "name": "ширина"
      }
    }
  },
  "unCLIPCheckpointLoader": {
    "display_name": "Загрузчик контрольной точки unCLIP",
    "inputs": {
      "ckpt_name": {
        "name": "название_ckpt"
      }
    }
  },
  "unCLIPConditioning": {
    "display_name": "unCLIP кондиционирование",
    "inputs": {
      "clip_vision_output": {
        "name": "выход_clip_vision"
      },
      "conditioning": {
        "name": "условие"
      },
      "noise_augmentation": {
        "name": "аугментация_шума"
      },
      "strength": {
        "name": "сила"
      }
    }
  }
}